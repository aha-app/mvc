{
  "version": 3,
  "sources": ["../node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/caf/src/caf.src.js", "../node_modules/tslib/tslib.js", "../src/controller/ApplicationController.jsx", "../node_modules/@aha-app/react-easy-state/dist/react-platform.js", "../node_modules/@nx-js/observer-util/dist/bundle.es.js", "../node_modules/@aha-app/react-easy-state/src/utils.js", "../node_modules/@aha-app/react-easy-state/src/view.js", "../node_modules/@aha-app/react-easy-state/src/scheduler.js", "../node_modules/@aha-app/react-easy-state/src/batch.js", "../node_modules/@aha-app/react-easy-state/src/store.js", "../node_modules/@aha-app/react-easy-state/src/autoEffect.js", "../src/utils/randomId.js", "../node_modules/lodash/_freeGlobal.js", "../node_modules/lodash/_root.js", "../node_modules/lodash/_Symbol.js", "../node_modules/lodash/_getRawTag.js", "../node_modules/lodash/_objectToString.js", "../node_modules/lodash/_baseGetTag.js", "../node_modules/lodash/isObjectLike.js", "../node_modules/lodash/isSymbol.js", "../node_modules/lodash/_baseToNumber.js", "../node_modules/lodash/_arrayMap.js", "../node_modules/lodash/isArray.js", "../node_modules/lodash/_baseToString.js", "../node_modules/lodash/_createMathOperation.js", "../node_modules/lodash/add.js", "../node_modules/lodash/_trimmedEndIndex.js", "../node_modules/lodash/_baseTrim.js", "../node_modules/lodash/isObject.js", "../node_modules/lodash/toNumber.js", "../node_modules/lodash/toFinite.js", "../node_modules/lodash/toInteger.js", "../node_modules/lodash/after.js", "../node_modules/lodash/identity.js", "../node_modules/lodash/isFunction.js", "../node_modules/lodash/_coreJsData.js", "../node_modules/lodash/_isMasked.js", "../node_modules/lodash/_toSource.js", "../node_modules/lodash/_baseIsNative.js", "../node_modules/lodash/_getValue.js", "../node_modules/lodash/_getNative.js", "../node_modules/lodash/_WeakMap.js", "../node_modules/lodash/_metaMap.js", "../node_modules/lodash/_baseSetData.js", "../node_modules/lodash/_baseCreate.js", "../node_modules/lodash/_createCtor.js", "../node_modules/lodash/_createBind.js", "../node_modules/lodash/_apply.js", "../node_modules/lodash/_composeArgs.js", "../node_modules/lodash/_composeArgsRight.js", "../node_modules/lodash/_countHolders.js", "../node_modules/lodash/_baseLodash.js", "../node_modules/lodash/_LazyWrapper.js", "../node_modules/lodash/noop.js", "../node_modules/lodash/_getData.js", "../node_modules/lodash/_realNames.js", "../node_modules/lodash/_getFuncName.js", "../node_modules/lodash/_LodashWrapper.js", "../node_modules/lodash/_copyArray.js", "../node_modules/lodash/_wrapperClone.js", "../node_modules/lodash/wrapperLodash.js", "../node_modules/lodash/_isLaziable.js", "../node_modules/lodash/_shortOut.js", "../node_modules/lodash/_setData.js", "../node_modules/lodash/_getWrapDetails.js", "../node_modules/lodash/_insertWrapDetails.js", "../node_modules/lodash/constant.js", "../node_modules/lodash/_defineProperty.js", "../node_modules/lodash/_baseSetToString.js", "../node_modules/lodash/_setToString.js", "../node_modules/lodash/_arrayEach.js", "../node_modules/lodash/_baseFindIndex.js", "../node_modules/lodash/_baseIsNaN.js", "../node_modules/lodash/_strictIndexOf.js", "../node_modules/lodash/_baseIndexOf.js", "../node_modules/lodash/_arrayIncludes.js", "../node_modules/lodash/_updateWrapDetails.js", "../node_modules/lodash/_setWrapToString.js", "../node_modules/lodash/_createRecurry.js", "../node_modules/lodash/_getHolder.js", "../node_modules/lodash/_isIndex.js", "../node_modules/lodash/_reorder.js", "../node_modules/lodash/_replaceHolders.js", "../node_modules/lodash/_createHybrid.js", "../node_modules/lodash/_createCurry.js", "../node_modules/lodash/_createPartial.js", "../node_modules/lodash/_mergeData.js", "../node_modules/lodash/_createWrap.js", "../node_modules/lodash/ary.js", "../node_modules/lodash/_baseAssignValue.js", "../node_modules/lodash/eq.js", "../node_modules/lodash/_assignValue.js", "../node_modules/lodash/_copyObject.js", "../node_modules/lodash/_overRest.js", "../node_modules/lodash/_baseRest.js", "../node_modules/lodash/isLength.js", "../node_modules/lodash/isArrayLike.js", "../node_modules/lodash/_isIterateeCall.js", "../node_modules/lodash/_createAssigner.js", "../node_modules/lodash/_isPrototype.js", "../node_modules/lodash/_baseTimes.js", "../node_modules/lodash/_baseIsArguments.js", "../node_modules/lodash/isArguments.js", "../node_modules/lodash/stubFalse.js", "../node_modules/lodash/isBuffer.js", "../node_modules/lodash/_baseIsTypedArray.js", "../node_modules/lodash/_baseUnary.js", "../node_modules/lodash/_nodeUtil.js", "../node_modules/lodash/isTypedArray.js", "../node_modules/lodash/_arrayLikeKeys.js", "../node_modules/lodash/_overArg.js", "../node_modules/lodash/_nativeKeys.js", "../node_modules/lodash/_baseKeys.js", "../node_modules/lodash/keys.js", "../node_modules/lodash/assign.js", "../node_modules/lodash/_nativeKeysIn.js", "../node_modules/lodash/_baseKeysIn.js", "../node_modules/lodash/keysIn.js", "../node_modules/lodash/assignIn.js", "../node_modules/lodash/assignInWith.js", "../node_modules/lodash/assignWith.js", "../node_modules/lodash/_isKey.js", "../node_modules/lodash/_nativeCreate.js", "../node_modules/lodash/_hashClear.js", "../node_modules/lodash/_hashDelete.js", "../node_modules/lodash/_hashGet.js", "../node_modules/lodash/_hashHas.js", "../node_modules/lodash/_hashSet.js", "../node_modules/lodash/_Hash.js", "../node_modules/lodash/_listCacheClear.js", "../node_modules/lodash/_assocIndexOf.js", "../node_modules/lodash/_listCacheDelete.js", "../node_modules/lodash/_listCacheGet.js", "../node_modules/lodash/_listCacheHas.js", "../node_modules/lodash/_listCacheSet.js", "../node_modules/lodash/_ListCache.js", "../node_modules/lodash/_Map.js", "../node_modules/lodash/_mapCacheClear.js", "../node_modules/lodash/_isKeyable.js", "../node_modules/lodash/_getMapData.js", "../node_modules/lodash/_mapCacheDelete.js", "../node_modules/lodash/_mapCacheGet.js", "../node_modules/lodash/_mapCacheHas.js", "../node_modules/lodash/_mapCacheSet.js", "../node_modules/lodash/_MapCache.js", "../node_modules/lodash/memoize.js", "../node_modules/lodash/_memoizeCapped.js", "../node_modules/lodash/_stringToPath.js", "../node_modules/lodash/toString.js", "../node_modules/lodash/_castPath.js", "../node_modules/lodash/_toKey.js", "../node_modules/lodash/_baseGet.js", "../node_modules/lodash/get.js", "../node_modules/lodash/_baseAt.js", "../node_modules/lodash/_arrayPush.js", "../node_modules/lodash/_isFlattenable.js", "../node_modules/lodash/_baseFlatten.js", "../node_modules/lodash/flatten.js", "../node_modules/lodash/_flatRest.js", "../node_modules/lodash/at.js", "../node_modules/lodash/_getPrototype.js", "../node_modules/lodash/isPlainObject.js", "../node_modules/lodash/isError.js", "../node_modules/lodash/attempt.js", "../node_modules/lodash/before.js", "../node_modules/lodash/bind.js", "../node_modules/lodash/bindAll.js", "../node_modules/lodash/bindKey.js", "../node_modules/lodash/_baseSlice.js", "../node_modules/lodash/_castSlice.js", "../node_modules/lodash/_hasUnicode.js", "../node_modules/lodash/_asciiToArray.js", "../node_modules/lodash/_unicodeToArray.js", "../node_modules/lodash/_stringToArray.js", "../node_modules/lodash/_createCaseFirst.js", "../node_modules/lodash/upperFirst.js", "../node_modules/lodash/capitalize.js", "../node_modules/lodash/_arrayReduce.js", "../node_modules/lodash/_basePropertyOf.js", "../node_modules/lodash/_deburrLetter.js", "../node_modules/lodash/deburr.js", "../node_modules/lodash/_asciiWords.js", "../node_modules/lodash/_hasUnicodeWord.js", "../node_modules/lodash/_unicodeWords.js", "../node_modules/lodash/words.js", "../node_modules/lodash/_createCompounder.js", "../node_modules/lodash/camelCase.js", "../node_modules/lodash/castArray.js", "../node_modules/lodash/_createRound.js", "../node_modules/lodash/ceil.js", "../node_modules/lodash/chain.js", "../node_modules/lodash/chunk.js", "../node_modules/lodash/_baseClamp.js", "../node_modules/lodash/clamp.js", "../node_modules/lodash/_stackClear.js", "../node_modules/lodash/_stackDelete.js", "../node_modules/lodash/_stackGet.js", "../node_modules/lodash/_stackHas.js", "../node_modules/lodash/_stackSet.js", "../node_modules/lodash/_Stack.js", "../node_modules/lodash/_baseAssign.js", "../node_modules/lodash/_baseAssignIn.js", "../node_modules/lodash/_cloneBuffer.js", "../node_modules/lodash/_arrayFilter.js", "../node_modules/lodash/stubArray.js", "../node_modules/lodash/_getSymbols.js", "../node_modules/lodash/_copySymbols.js", "../node_modules/lodash/_getSymbolsIn.js", "../node_modules/lodash/_copySymbolsIn.js", "../node_modules/lodash/_baseGetAllKeys.js", "../node_modules/lodash/_getAllKeys.js", "../node_modules/lodash/_getAllKeysIn.js", "../node_modules/lodash/_DataView.js", "../node_modules/lodash/_Promise.js", "../node_modules/lodash/_Set.js", "../node_modules/lodash/_getTag.js", "../node_modules/lodash/_initCloneArray.js", "../node_modules/lodash/_Uint8Array.js", "../node_modules/lodash/_cloneArrayBuffer.js", "../node_modules/lodash/_cloneDataView.js", "../node_modules/lodash/_cloneRegExp.js", "../node_modules/lodash/_cloneSymbol.js", "../node_modules/lodash/_cloneTypedArray.js", "../node_modules/lodash/_initCloneByTag.js", "../node_modules/lodash/_initCloneObject.js", "../node_modules/lodash/_baseIsMap.js", "../node_modules/lodash/isMap.js", "../node_modules/lodash/_baseIsSet.js", "../node_modules/lodash/isSet.js", "../node_modules/lodash/_baseClone.js", "../node_modules/lodash/clone.js", "../node_modules/lodash/cloneDeep.js", "../node_modules/lodash/cloneDeepWith.js", "../node_modules/lodash/cloneWith.js", "../node_modules/lodash/commit.js", "../node_modules/lodash/compact.js", "../node_modules/lodash/concat.js", "../node_modules/lodash/_setCacheAdd.js", "../node_modules/lodash/_setCacheHas.js", "../node_modules/lodash/_SetCache.js", "../node_modules/lodash/_arraySome.js", "../node_modules/lodash/_cacheHas.js", "../node_modules/lodash/_equalArrays.js", "../node_modules/lodash/_mapToArray.js", "../node_modules/lodash/_setToArray.js", "../node_modules/lodash/_equalByTag.js", "../node_modules/lodash/_equalObjects.js", "../node_modules/lodash/_baseIsEqualDeep.js", "../node_modules/lodash/_baseIsEqual.js", "../node_modules/lodash/_baseIsMatch.js", "../node_modules/lodash/_isStrictComparable.js", "../node_modules/lodash/_getMatchData.js", "../node_modules/lodash/_matchesStrictComparable.js", "../node_modules/lodash/_baseMatches.js", "../node_modules/lodash/_baseHasIn.js", "../node_modules/lodash/_hasPath.js", "../node_modules/lodash/hasIn.js", "../node_modules/lodash/_baseMatchesProperty.js", "../node_modules/lodash/_baseProperty.js", "../node_modules/lodash/_basePropertyDeep.js", "../node_modules/lodash/property.js", "../node_modules/lodash/_baseIteratee.js", "../node_modules/lodash/cond.js", "../node_modules/lodash/_baseConformsTo.js", "../node_modules/lodash/_baseConforms.js", "../node_modules/lodash/conforms.js", "../node_modules/lodash/conformsTo.js", "../node_modules/lodash/_arrayAggregator.js", "../node_modules/lodash/_createBaseFor.js", "../node_modules/lodash/_baseFor.js", "../node_modules/lodash/_baseForOwn.js", "../node_modules/lodash/_createBaseEach.js", "../node_modules/lodash/_baseEach.js", "../node_modules/lodash/_baseAggregator.js", "../node_modules/lodash/_createAggregator.js", "../node_modules/lodash/countBy.js", "../node_modules/lodash/create.js", "../node_modules/lodash/curry.js", "../node_modules/lodash/curryRight.js", "../node_modules/lodash/now.js", "../node_modules/lodash/debounce.js", "../node_modules/lodash/defaultTo.js", "../node_modules/lodash/defaults.js", "../node_modules/lodash/_assignMergeValue.js", "../node_modules/lodash/isArrayLikeObject.js", "../node_modules/lodash/_safeGet.js", "../node_modules/lodash/toPlainObject.js", "../node_modules/lodash/_baseMergeDeep.js", "../node_modules/lodash/_baseMerge.js", "../node_modules/lodash/_customDefaultsMerge.js", "../node_modules/lodash/mergeWith.js", "../node_modules/lodash/defaultsDeep.js", "../node_modules/lodash/_baseDelay.js", "../node_modules/lodash/defer.js", "../node_modules/lodash/delay.js", "../node_modules/lodash/_arrayIncludesWith.js", "../node_modules/lodash/_baseDifference.js", "../node_modules/lodash/difference.js", "../node_modules/lodash/last.js", "../node_modules/lodash/differenceBy.js", "../node_modules/lodash/differenceWith.js", "../node_modules/lodash/divide.js", "../node_modules/lodash/drop.js", "../node_modules/lodash/dropRight.js", "../node_modules/lodash/_baseWhile.js", "../node_modules/lodash/dropRightWhile.js", "../node_modules/lodash/dropWhile.js", "../node_modules/lodash/_castFunction.js", "../node_modules/lodash/forEach.js", "../node_modules/lodash/_arrayEachRight.js", "../node_modules/lodash/_baseForRight.js", "../node_modules/lodash/_baseForOwnRight.js", "../node_modules/lodash/_baseEachRight.js", "../node_modules/lodash/forEachRight.js", "../node_modules/lodash/endsWith.js", "../node_modules/lodash/_baseToPairs.js", "../node_modules/lodash/_setToPairs.js", "../node_modules/lodash/_createToPairs.js", "../node_modules/lodash/toPairs.js", "../node_modules/lodash/toPairsIn.js", "../node_modules/lodash/_escapeHtmlChar.js", "../node_modules/lodash/escape.js", "../node_modules/lodash/escapeRegExp.js", "../node_modules/lodash/_arrayEvery.js", "../node_modules/lodash/_baseEvery.js", "../node_modules/lodash/every.js", "../node_modules/lodash/toLength.js", "../node_modules/lodash/_baseFill.js", "../node_modules/lodash/fill.js", "../node_modules/lodash/_baseFilter.js", "../node_modules/lodash/filter.js", "../node_modules/lodash/_createFind.js", "../node_modules/lodash/findIndex.js", "../node_modules/lodash/find.js", "../node_modules/lodash/_baseFindKey.js", "../node_modules/lodash/findKey.js", "../node_modules/lodash/findLastIndex.js", "../node_modules/lodash/findLast.js", "../node_modules/lodash/findLastKey.js", "../node_modules/lodash/head.js", "../node_modules/lodash/_baseMap.js", "../node_modules/lodash/map.js", "../node_modules/lodash/flatMap.js", "../node_modules/lodash/flatMapDeep.js", "../node_modules/lodash/flatMapDepth.js", "../node_modules/lodash/flattenDeep.js", "../node_modules/lodash/flattenDepth.js", "../node_modules/lodash/flip.js", "../node_modules/lodash/floor.js", "../node_modules/lodash/_createFlow.js", "../node_modules/lodash/flow.js", "../node_modules/lodash/flowRight.js", "../node_modules/lodash/forIn.js", "../node_modules/lodash/forInRight.js", "../node_modules/lodash/forOwn.js", "../node_modules/lodash/forOwnRight.js", "../node_modules/lodash/fromPairs.js", "../node_modules/lodash/_baseFunctions.js", "../node_modules/lodash/functions.js", "../node_modules/lodash/functionsIn.js", "../node_modules/lodash/groupBy.js", "../node_modules/lodash/_baseGt.js", "../node_modules/lodash/_createRelationalOperation.js", "../node_modules/lodash/gt.js", "../node_modules/lodash/gte.js", "../node_modules/lodash/_baseHas.js", "../node_modules/lodash/has.js", "../node_modules/lodash/_baseInRange.js", "../node_modules/lodash/inRange.js", "../node_modules/lodash/isString.js", "../node_modules/lodash/_baseValues.js", "../node_modules/lodash/values.js", "../node_modules/lodash/includes.js", "../node_modules/lodash/indexOf.js", "../node_modules/lodash/initial.js", "../node_modules/lodash/_baseIntersection.js", "../node_modules/lodash/_castArrayLikeObject.js", "../node_modules/lodash/intersection.js", "../node_modules/lodash/intersectionBy.js", "../node_modules/lodash/intersectionWith.js", "../node_modules/lodash/_baseInverter.js", "../node_modules/lodash/_createInverter.js", "../node_modules/lodash/invert.js", "../node_modules/lodash/invertBy.js", "../node_modules/lodash/_parent.js", "../node_modules/lodash/_baseInvoke.js", "../node_modules/lodash/invoke.js", "../node_modules/lodash/invokeMap.js", "../node_modules/lodash/_baseIsArrayBuffer.js", "../node_modules/lodash/isArrayBuffer.js", "../node_modules/lodash/isBoolean.js", "../node_modules/lodash/_baseIsDate.js", "../node_modules/lodash/isDate.js", "../node_modules/lodash/isElement.js", "../node_modules/lodash/isEmpty.js", "../node_modules/lodash/isEqual.js", "../node_modules/lodash/isEqualWith.js", "../node_modules/lodash/isFinite.js", "../node_modules/lodash/isInteger.js", "../node_modules/lodash/isMatch.js", "../node_modules/lodash/isMatchWith.js", "../node_modules/lodash/isNumber.js", "../node_modules/lodash/isNaN.js", "../node_modules/lodash/_isMaskable.js", "../node_modules/lodash/isNative.js", "../node_modules/lodash/isNil.js", "../node_modules/lodash/isNull.js", "../node_modules/lodash/_baseIsRegExp.js", "../node_modules/lodash/isRegExp.js", "../node_modules/lodash/isSafeInteger.js", "../node_modules/lodash/isUndefined.js", "../node_modules/lodash/isWeakMap.js", "../node_modules/lodash/isWeakSet.js", "../node_modules/lodash/iteratee.js", "../node_modules/lodash/join.js", "../node_modules/lodash/kebabCase.js", "../node_modules/lodash/keyBy.js", "../node_modules/lodash/_strictLastIndexOf.js", "../node_modules/lodash/lastIndexOf.js", "../node_modules/lodash/lowerCase.js", "../node_modules/lodash/lowerFirst.js", "../node_modules/lodash/_baseLt.js", "../node_modules/lodash/lt.js", "../node_modules/lodash/lte.js", "../node_modules/lodash/mapKeys.js", "../node_modules/lodash/mapValues.js", "../node_modules/lodash/matches.js", "../node_modules/lodash/matchesProperty.js", "../node_modules/lodash/_baseExtremum.js", "../node_modules/lodash/max.js", "../node_modules/lodash/maxBy.js", "../node_modules/lodash/_baseSum.js", "../node_modules/lodash/_baseMean.js", "../node_modules/lodash/mean.js", "../node_modules/lodash/meanBy.js", "../node_modules/lodash/merge.js", "../node_modules/lodash/method.js", "../node_modules/lodash/methodOf.js", "../node_modules/lodash/min.js", "../node_modules/lodash/minBy.js", "../node_modules/lodash/mixin.js", "../node_modules/lodash/multiply.js", "../node_modules/lodash/negate.js", "../node_modules/lodash/_iteratorToArray.js", "../node_modules/lodash/toArray.js", "../node_modules/lodash/next.js", "../node_modules/lodash/_baseNth.js", "../node_modules/lodash/nth.js", "../node_modules/lodash/nthArg.js", "../node_modules/lodash/_baseUnset.js", "../node_modules/lodash/_customOmitClone.js", "../node_modules/lodash/omit.js", "../node_modules/lodash/_baseSet.js", "../node_modules/lodash/_basePickBy.js", "../node_modules/lodash/pickBy.js", "../node_modules/lodash/omitBy.js", "../node_modules/lodash/once.js", "../node_modules/lodash/_baseSortBy.js", "../node_modules/lodash/_compareAscending.js", "../node_modules/lodash/_compareMultiple.js", "../node_modules/lodash/_baseOrderBy.js", "../node_modules/lodash/orderBy.js", "../node_modules/lodash/_createOver.js", "../node_modules/lodash/over.js", "../node_modules/lodash/_castRest.js", "../node_modules/lodash/overArgs.js", "../node_modules/lodash/overEvery.js", "../node_modules/lodash/overSome.js", "../node_modules/lodash/_baseRepeat.js", "../node_modules/lodash/_asciiSize.js", "../node_modules/lodash/_unicodeSize.js", "../node_modules/lodash/_stringSize.js", "../node_modules/lodash/_createPadding.js", "../node_modules/lodash/pad.js", "../node_modules/lodash/padEnd.js", "../node_modules/lodash/padStart.js", "../node_modules/lodash/parseInt.js", "../node_modules/lodash/partial.js", "../node_modules/lodash/partialRight.js", "../node_modules/lodash/partition.js", "../node_modules/lodash/_basePick.js", "../node_modules/lodash/pick.js", "../node_modules/lodash/plant.js", "../node_modules/lodash/propertyOf.js", "../node_modules/lodash/_baseIndexOfWith.js", "../node_modules/lodash/_basePullAll.js", "../node_modules/lodash/pullAll.js", "../node_modules/lodash/pull.js", "../node_modules/lodash/pullAllBy.js", "../node_modules/lodash/pullAllWith.js", "../node_modules/lodash/_basePullAt.js", "../node_modules/lodash/pullAt.js", "../node_modules/lodash/_baseRandom.js", "../node_modules/lodash/random.js", "../node_modules/lodash/_baseRange.js", "../node_modules/lodash/_createRange.js", "../node_modules/lodash/range.js", "../node_modules/lodash/rangeRight.js", "../node_modules/lodash/rearg.js", "../node_modules/lodash/_baseReduce.js", "../node_modules/lodash/reduce.js", "../node_modules/lodash/_arrayReduceRight.js", "../node_modules/lodash/reduceRight.js", "../node_modules/lodash/reject.js", "../node_modules/lodash/remove.js", "../node_modules/lodash/repeat.js", "../node_modules/lodash/replace.js", "../node_modules/lodash/rest.js", "../node_modules/lodash/result.js", "../node_modules/lodash/reverse.js", "../node_modules/lodash/round.js", "../node_modules/lodash/_arraySample.js", "../node_modules/lodash/_baseSample.js", "../node_modules/lodash/sample.js", "../node_modules/lodash/_shuffleSelf.js", "../node_modules/lodash/_arraySampleSize.js", "../node_modules/lodash/_baseSampleSize.js", "../node_modules/lodash/sampleSize.js", "../node_modules/lodash/set.js", "../node_modules/lodash/setWith.js", "../node_modules/lodash/_arrayShuffle.js", "../node_modules/lodash/_baseShuffle.js", "../node_modules/lodash/shuffle.js", "../node_modules/lodash/size.js", "../node_modules/lodash/slice.js", "../node_modules/lodash/snakeCase.js", "../node_modules/lodash/_baseSome.js", "../node_modules/lodash/some.js", "../node_modules/lodash/sortBy.js", "../node_modules/lodash/_baseSortedIndexBy.js", "../node_modules/lodash/_baseSortedIndex.js", "../node_modules/lodash/sortedIndex.js", "../node_modules/lodash/sortedIndexBy.js", "../node_modules/lodash/sortedIndexOf.js", "../node_modules/lodash/sortedLastIndex.js", "../node_modules/lodash/sortedLastIndexBy.js", "../node_modules/lodash/sortedLastIndexOf.js", "../node_modules/lodash/_baseSortedUniq.js", "../node_modules/lodash/sortedUniq.js", "../node_modules/lodash/sortedUniqBy.js", "../node_modules/lodash/split.js", "../node_modules/lodash/spread.js", "../node_modules/lodash/startCase.js", "../node_modules/lodash/startsWith.js", "../node_modules/lodash/stubObject.js", "../node_modules/lodash/stubString.js", "../node_modules/lodash/stubTrue.js", "../node_modules/lodash/subtract.js", "../node_modules/lodash/sum.js", "../node_modules/lodash/sumBy.js", "../node_modules/lodash/tail.js", "../node_modules/lodash/take.js", "../node_modules/lodash/takeRight.js", "../node_modules/lodash/takeRightWhile.js", "../node_modules/lodash/takeWhile.js", "../node_modules/lodash/tap.js", "../node_modules/lodash/_customDefaultsAssignIn.js", "../node_modules/lodash/_escapeStringChar.js", "../node_modules/lodash/_reInterpolate.js", "../node_modules/lodash/_reEscape.js", "../node_modules/lodash/_reEvaluate.js", "../node_modules/lodash/templateSettings.js", "../node_modules/lodash/template.js", "../node_modules/lodash/throttle.js", "../node_modules/lodash/thru.js", "../node_modules/lodash/times.js", "../node_modules/lodash/toIterator.js", "../node_modules/lodash/_baseWrapperValue.js", "../node_modules/lodash/wrapperValue.js", "../node_modules/lodash/toLower.js", "../node_modules/lodash/toPath.js", "../node_modules/lodash/toSafeInteger.js", "../node_modules/lodash/toUpper.js", "../node_modules/lodash/transform.js", "../node_modules/lodash/_charsEndIndex.js", "../node_modules/lodash/_charsStartIndex.js", "../node_modules/lodash/trim.js", "../node_modules/lodash/trimEnd.js", "../node_modules/lodash/trimStart.js", "../node_modules/lodash/truncate.js", "../node_modules/lodash/unary.js", "../node_modules/lodash/_unescapeHtmlChar.js", "../node_modules/lodash/unescape.js", "../node_modules/lodash/_createSet.js", "../node_modules/lodash/_baseUniq.js", "../node_modules/lodash/union.js", "../node_modules/lodash/unionBy.js", "../node_modules/lodash/unionWith.js", "../node_modules/lodash/uniq.js", "../node_modules/lodash/uniqBy.js", "../node_modules/lodash/uniqWith.js", "../node_modules/lodash/uniqueId.js", "../node_modules/lodash/unset.js", "../node_modules/lodash/unzip.js", "../node_modules/lodash/unzipWith.js", "../node_modules/lodash/_baseUpdate.js", "../node_modules/lodash/update.js", "../node_modules/lodash/updateWith.js", "../node_modules/lodash/upperCase.js", "../node_modules/lodash/valuesIn.js", "../node_modules/lodash/without.js", "../node_modules/lodash/wrap.js", "../node_modules/lodash/wrapperAt.js", "../node_modules/lodash/wrapperChain.js", "../node_modules/lodash/wrapperReverse.js", "../node_modules/lodash/_baseXor.js", "../node_modules/lodash/xor.js", "../node_modules/lodash/xorBy.js", "../node_modules/lodash/xorWith.js", "../node_modules/lodash/zip.js", "../node_modules/lodash/_baseZipObject.js", "../node_modules/lodash/zipObject.js", "../node_modules/lodash/zipObjectDeep.js", "../node_modules/lodash/zipWith.js", "../node_modules/lodash/array.default.js", "../node_modules/lodash/collection.default.js", "../node_modules/lodash/date.default.js", "../node_modules/lodash/function.default.js", "../node_modules/lodash/lang.default.js", "../node_modules/lodash/math.default.js", "../node_modules/lodash/number.default.js", "../node_modules/lodash/object.default.js", "../node_modules/lodash/seq.default.js", "../node_modules/lodash/string.default.js", "../node_modules/lodash/util.default.js", "../node_modules/lodash/_lazyClone.js", "../node_modules/lodash/_lazyReverse.js", "../node_modules/lodash/_getView.js", "../node_modules/lodash/_lazyValue.js", "../node_modules/lodash/lodash.default.js", "../node_modules/lodash/lodash.js", "../node_modules/inflected/dist/esm/inflected.js", "../src/utils/addProxyInstanceOf.js", "../src/model/EnumValue.js", "../src/model/Errors.js", "../node_modules/immer/src/utils/errors.ts", "../node_modules/immer/src/utils/common.ts", "../node_modules/immer/src/utils/plugins.ts", "../node_modules/immer/src/core/scope.ts", "../node_modules/immer/src/core/finalize.ts", "../node_modules/immer/src/core/proxy.ts", "../node_modules/immer/src/core/immerClass.ts", "../node_modules/immer/src/core/current.ts", "../node_modules/immer/src/plugins/es5.ts", "../node_modules/immer/src/plugins/patches.ts", "../node_modules/immer/src/plugins/mapset.ts", "../node_modules/immer/src/plugins/all.ts", "../node_modules/immer/src/immer.ts", "../node_modules/immer/src/utils/env.ts", "../src/model/Fragment.js", "../src/model/ModelCollection.js", "../src/model/modelBuilder.js", "../node_modules/graphql/jsutils/isObjectLike.mjs", "../node_modules/graphql/polyfills/symbols.mjs", "../node_modules/graphql/language/location.mjs", "../node_modules/graphql/language/printLocation.mjs", "../node_modules/graphql/error/GraphQLError.mjs", "../node_modules/graphql/error/syntaxError.mjs", "../node_modules/graphql/language/kinds.mjs", "../node_modules/graphql/jsutils/invariant.mjs", "../node_modules/graphql/jsutils/nodejsCustomInspectSymbol.mjs", "../node_modules/graphql/jsutils/defineInspect.mjs", "../node_modules/graphql/language/ast.mjs", "../node_modules/graphql/language/tokenKind.mjs", "../node_modules/graphql/jsutils/inspect.mjs", "../node_modules/graphql/jsutils/devAssert.mjs", "../node_modules/graphql/jsutils/instanceOf.mjs", "../node_modules/graphql/language/source.mjs", "../node_modules/graphql/language/directiveLocation.mjs", "../node_modules/graphql/language/blockString.mjs", "../node_modules/graphql/language/lexer.mjs", "../node_modules/graphql/language/parser.mjs", "../node_modules/graphql/language/visitor.mjs", "../node_modules/graphql/polyfills/objectEntries.mjs", "../node_modules/graphql/jsutils/keyMap.mjs", "../node_modules/graphql/jsutils/mapValue.mjs", "../node_modules/graphql/jsutils/toObjMap.mjs", "../node_modules/graphql/jsutils/keyValMap.mjs", "../node_modules/graphql/jsutils/didYouMean.mjs", "../node_modules/graphql/jsutils/identityFunc.mjs", "../node_modules/graphql/jsutils/naturalCompare.mjs", "../node_modules/graphql/jsutils/suggestionList.mjs", "../node_modules/graphql/language/printer.mjs", "../node_modules/graphql/utilities/valueFromASTUntyped.mjs", "../node_modules/graphql/type/definition.mjs", "../src/utils/memoize.js", "../src/model/Query.js", "../src/model/RelationAttribute.js", "../src/model/ApplicationModel.js", "../node_modules/tslib/modules/index.js", "../node_modules/ts-invariant/src/invariant.ts", "../node_modules/@apollo/src/utilities/common/maybe.ts", "../node_modules/@apollo/src/utilities/common/global.ts", "../node_modules/@apollo/src/utilities/globals/DEV.ts", "../node_modules/ts-invariant/process/index.js", "../node_modules/@apollo/src/utilities/globals/graphql.ts", "../node_modules/@apollo/src/utilities/globals/index.ts", "../node_modules/@apollo/src/utilities/graphql/directives.ts", "../node_modules/@apollo/src/utilities/graphql/fragments.ts", "../node_modules/@apollo/src/utilities/common/objects.ts", "../node_modules/@apollo/src/utilities/graphql/storeUtils.ts", "../node_modules/@apollo/src/utilities/graphql/getFromAST.ts", "../node_modules/@apollo/src/utilities/common/filterInPlace.ts", "../node_modules/@apollo/src/utilities/graphql/transform.ts", "../node_modules/@apollo/src/utilities/common/mergeDeep.ts", "../node_modules/zen-observable-ts/module.js", "../node_modules/symbol-observable/es/ponyfill.js", "../node_modules/symbol-observable/es/index.js", "../node_modules/@apollo/src/utilities/observables/Observable.ts", "../node_modules/@apollo/src/utilities/common/cloneDeep.ts", "../node_modules/@apollo/src/utilities/common/maybeDeepFreeze.ts", "../node_modules/@apollo/src/utilities/observables/iteration.ts", "../node_modules/@apollo/src/utilities/observables/asyncMap.ts", "../node_modules/@apollo/src/utilities/observables/subclassing.ts", "../node_modules/@apollo/src/utilities/observables/Concast.ts", "../node_modules/@apollo/src/utilities/common/arrays.ts", "../node_modules/@apollo/src/utilities/common/errorHandling.ts", "../node_modules/@apollo/src/utilities/common/canUse.ts", "../node_modules/@apollo/src/utilities/common/compact.ts", "../node_modules/@apollo/src/utilities/common/makeUniqueId.ts", "../node_modules/@apollo/src/utilities/common/stringifyForDisplay.ts", "../node_modules/@apollo/src/utilities/index.ts", "../node_modules/@apollo/src/link/utils/fromError.ts", "../node_modules/@apollo/src/link/utils/throwServerError.ts", "../node_modules/@apollo/src/link/utils/validateOperation.ts", "../node_modules/@apollo/src/link/utils/createOperation.ts", "../node_modules/@apollo/src/link/utils/transformOperation.ts", "../node_modules/@apollo/src/link/core/ApolloLink.ts", "../node_modules/@apollo/src/link/core/from.ts", "../node_modules/@apollo/src/link/core/execute.ts", "../node_modules/@apollo/src/link/core/index.ts", "../node_modules/@apollo/src/version.ts", "../node_modules/@apollo/src/link/http/parseAndCheckHttpResponse.ts", "../node_modules/@apollo/src/link/http/serializeFetchParameter.ts", "../node_modules/@apollo/src/link/http/selectHttpOptionsAndBody.ts", "../node_modules/@apollo/src/link/http/checkFetcher.ts", "../node_modules/@apollo/src/link/http/createSignalIfSupported.ts", "../node_modules/@apollo/src/link/http/selectURI.ts", "../node_modules/@apollo/src/link/http/rewriteURIForGET.ts", "../node_modules/@apollo/src/link/http/createHttpLink.ts", "../node_modules/@apollo/src/link/http/HttpLink.ts", "../node_modules/@wry/equality/src/equality.ts", "../node_modules/@wry/trie/src/trie.ts", "../node_modules/@wry/context/src/slot.ts", "../node_modules/@wry/context/src/context.ts", "../node_modules/optimism/src/cache.ts", "../node_modules/optimism/src/context.ts", "../node_modules/optimism/src/helpers.ts", "../node_modules/optimism/src/entry.ts", "../node_modules/optimism/src/dep.ts", "../node_modules/optimism/src/index.ts", "../node_modules/@apollo/src/cache/core/cache.ts", "../node_modules/@apollo/src/cache/core/types/common.ts", "../node_modules/@apollo/src/cache/inmemory/helpers.ts", "../node_modules/@apollo/src/cache/inmemory/entityStore.ts", "../node_modules/@apollo/src/cache/inmemory/object-canon.ts", "../node_modules/@apollo/src/cache/inmemory/readFromStore.ts", "../node_modules/@apollo/src/cache/inmemory/writeToStore.ts", "../node_modules/@apollo/src/cache/inmemory/reactiveVars.ts", "../node_modules/@apollo/src/cache/inmemory/policies.ts", "../node_modules/@apollo/src/cache/inmemory/inMemoryCache.ts", "../node_modules/@apollo/src/cache/index.ts", "../node_modules/@apollo/src/errors/index.ts", "../node_modules/@apollo/src/core/networkStatus.ts", "../node_modules/@apollo/src/core/ObservableQuery.ts", "../node_modules/@apollo/src/core/LocalState.ts", "../node_modules/@apollo/src/core/QueryInfo.ts", "../node_modules/@apollo/src/core/QueryManager.ts", "../node_modules/@apollo/src/core/ApolloClient.ts", "../node_modules/graphql-tag/src/index.ts", "../node_modules/@apollo/src/core/index.ts", "../node_modules/@apollo/src/utilities/testing/mocking/mockLink.ts", "../src/model/ApolloModelClient.js", "../src/index.js"],
  "sourcesContent": ["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "(function UMD(name,context,definition){\n\t/* istanbul ignore next */if (typeof define === \"function\" && define.amd) { define(definition); }\n\t/* istanbul ignore next */else if (typeof module !== \"undefined\" && module.exports) { module.exports = definition(name,context); }\n\t/* istanbul ignore next */else { context[name] = definition(name,context); }\n})(\"CAF\",this,function DEF(name,context){\n\t\"use strict\";\n\n\tclass cancelToken {\n\t\tconstructor(controller = new AbortController()) {\n\t\t\tthis.controller = controller;\n\t\t\tthis.signal = controller.signal;\n\t\t\t// note: => arrow function used here for lexical this\n\t\t\tvar handleReject = (res,rej) => {\n\t\t\t\tonce(this.signal, \"abort\", r => {\n\t\t\t\t\tif (!(\"reason\" in this.signal)) {\n\t\t\t\t\t\tthis.signal.reason = r;\n\t\t\t\t\t}\n\t\t\t\t\trej(r);\n\t\t\t\t});\n\t\t\t\tthis.rej = rej;\n\t\t\t};\n\t\t\tthis.signal.pr = new Promise(handleReject);\n\t\t\t// silence unhandled rejection warnings\n\t\t\tthis.signal.pr.catch(v=>v);\n\t\t}\n\t\tabort(reason) {\n\t\t\tif (!(\"reason\" in this.signal)) {\n\t\t\t\tthis.signal.reason = reason;\n\t\t\t}\n\t\t\tthis.rej(reason);\n\t\t\tthis.controller.abort();\n\t\t}\n\t}\n\n\tconst TIMEOUT_TOKEN = Symbol(\"Timeout Token\");\n\n\t// assign public API to CAF namespace\n\tObject.assign(CAF,{\n\t\tcancelToken,\n\t\tdelay,\n\t\ttimeout,\n\t\tsignalRace,\n\t\tsignalAll,\n\t});\n\n\treturn CAF;\n\n\n\t// ***************************************\n\n\tfunction CAF(generatorFn) {\n\t\treturn function instance(tokenOrSignal,...args){\n\t\t\tvar signal, signalPr;\n\t\t\t({ tokenOrSignal, signal, signalPr, } = processTokenOrSignal(tokenOrSignal));\n\n\t\t\t// already aborted?\n\t\t\tif (signal.aborted) {\n\t\t\t\treturn signalPr;\n\t\t\t}\n\t\t\t// listen for abort signal\n\t\t\tvar cancelation = signalPr.catch(function onCancelation(reason){\n\t\t\t\ttry {\n\t\t\t\t\tvar ret = it.return();\n\t\t\t\t\tthrow ((ret.value !== undefined) ? ret.value : reason);\n\t\t\t\t}\n\t\t\t\t// clean up memory\n\t\t\t\tfinally { it = result = cancelation = completion = null; }\n\t\t\t});\n\t\t\tvar { it, result, } = _runner.call(this,generatorFn,signal,...args);\n\t\t\tvar completion = Promise.race([ result, cancelation, ]);\n\t\t\tif (\n\t\t\t\t// cancelation token passed in?\n\t\t\t\ttokenOrSignal !== signal &&\n\t\t\t\t// recognized special timeout token?\n\t\t\t\ttokenOrSignal[TIMEOUT_TOKEN]\n\t\t\t) {\n\t\t\t\t// cancel timeout upon instance completion\n\t\t\t\tcompletion.then(\n\t\t\t\t\tfunction t(){ tokenOrSignal.abort(); },\n\t\t\t\t\tfunction c(){ tokenOrSignal.abort(); }\n\t\t\t\t);\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// silence unhandled rejection warnings\n\t\t\t\tcompletion.catch(Function.prototype);\n\t\t\t}\n\t\t\tsignal = args = null; // clean up memory\n\t\t\treturn completion;\n\t\t};\n\t}\n\n\tfunction delay(tokenOrSignal,ms) {\n\t\t// was delay ms passed first?\n\t\tif (\n\t\t\ttypeof tokenOrSignal == \"number\" &&\n\t\t\ttypeof ms != \"number\"\n\t\t) {\n\t\t\t// swap arguments\n\t\t\t[ms,tokenOrSignal,] = [tokenOrSignal,ms,];\n\t\t}\n\n\t\tvar signal, signalPr;\n\t\tif (tokenOrSignal) {\n\t\t\t({ tokenOrSignal, signal, signalPr, } = processTokenOrSignal(tokenOrSignal));\n\t\t}\n\n\t\t// already aborted?\n\t\tif (signal && signal.aborted) {\n\t\t\treturn signalPr;\n\t\t}\n\n\t\treturn new Promise(function c(res,rej){\n\t\t\tif (signal) {\n\t\t\t\tsignalPr.catch(function onAbort(){\n\t\t\t\t\tif (intv) {\n\t\t\t\t\t\tclearTimeout(intv);\n\t\t\t\t\t\trej(`delay (${ms}) interrupted`);\n\t\t\t\t\t}\n\t\t\t\t\tres = rej = intv = signal = null;\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tvar intv = setTimeout(function onTimeout(){\n\t\t\t\tres(`delayed: ${ms}`);\n\t\t\t\tres = rej = intv = signal = null;\n\t\t\t},ms);\n\t\t});\n\t}\n\n\tfunction timeout(duration,message = \"Timeout\") {\n\t\tduration = Number(duration) || 0;\n\t\tvar timeoutToken = new cancelToken();\n\t\tdelay(timeoutToken.signal,duration).then(cleanup,cleanup);\n\n\t\t// branding\n\t\tObject.defineProperty(timeoutToken,TIMEOUT_TOKEN,{\n\t\t\tvalue: true,\n\t\t\twritable: false,\n\t\t\tenumerable: false,\n\t\t\tconfigurable: false,\n\t\t});\n\n\t\treturn timeoutToken;\n\n\n\t\t// *********************************\n\t\tfunction cleanup() {\n\t\t\ttimeoutToken.abort(message);\n\t\t\ttimeoutToken = null;\n\t\t}\n\t}\n\n\tfunction signalRace(signals) {\n\t\tvar token = new cancelToken();\n\t\tPromise.race(signals.map(getSignalPr)).catch(token.abort.bind(token));\n\t\treturn token.signal;\n\t}\n\n\tfunction signalAll(signals) {\n\t\tvar token = new cancelToken();\n\t\tvar prs = signals.map(function normalize(signal){\n\t\t\treturn getSignalPr(signal).catch(e => e);\n\t\t});\n\t\tPromise.all(prs).then(token.abort.bind(token));\n\t\treturn token.signal;\n\t}\n\n\tfunction getSignalPr(signal) {\n\t\treturn (\n\t\t\tsignal.pr ||\n\t\t\tnew Promise(function c(res,rej){\n\t\t\t\tonce(signal,\"abort\",rej);\n\t\t\t})\n\t\t);\n\t}\n\n\tfunction once(obj,evtName,fn) {\n\t\tobj.addEventListener(evtName,function onEvt(...args){\n\t\t\tobj.removeEventListener(evtName,onEvt);\n\t\t\tfn(...args);\n\t\t});\n\t}\n\n\tfunction processTokenOrSignal(tokenOrSignal) {\n\t\t// received a raw AbortController?\n\t\tif (tokenOrSignal instanceof AbortController) {\n\t\t\ttokenOrSignal = new cancelToken(tokenOrSignal);\n\t\t}\n\n\t\tvar signal = (tokenOrSignal && tokenOrSignal instanceof cancelToken) ?\n\t\t\ttokenOrSignal.signal :\n\t\t\ttokenOrSignal;\n\t\tvar signalPr = getSignalPr(signal);\n\n\t\treturn { tokenOrSignal, signal, signalPr, };\n\t}\n\n\t// thanks to Benjamin Gruenbaum (@benjamingr on GitHub) for\n\t// big improvements here!\n\tfunction _runner(gen,...args) {\n\t\t// initialize the generator in the current context\n\t\tvar it = gen.apply(this,args);\n\t\tgen = args = null; // clean up memory\n\n\t\treturn {\n\t\t\tit,\n\t\t\t// a promise for the generator completing\n\t\t\tresult: (function getNextResult(curValue){\n\t\t\t\t// NOTE: this `try` is only necessary to catch\n\t\t\t\t// an immediate exception on the first iteration\n\t\t\t\t// of the generator. The below .then(..) would\n\t\t\t\t// catch any subsequent exceptions.\n\t\t\t\ttry {\n\t\t\t\t\t// run to the next yielded value\n\t\t\t\t\tvar nextResult = it.next(curValue);\n\t\t\t\t\tcurValue = null; // clean up memory\n\t\t\t\t}\n\t\t\t\tcatch (err) {\n\t\t\t\t\t// exception becomes rejection\n\t\t\t\t\treturn Promise.reject(err);\n\t\t\t\t}\n\n\t\t\t\treturn (function processResult(nextResult){\n\t\t\t\t\tvar prNext = Promise.resolve(nextResult.value);\n\n\t\t\t\t\t// generator no longer running?\n\t\t\t\t\tif (nextResult.done) {\n\t\t\t\t\t\tit = null;\n\t\t\t\t\t}\n\t\t\t\t\t// otherwise keep going\n\t\t\t\t\telse {\n\t\t\t\t\t\tprNext = prNext.then(\n\t\t\t\t\t\t\t// resume on fulfillment, sending the\n\t\t\t\t\t\t\t// fulfilled value back into the generator\n\t\t\t\t\t\t\tgetNextResult,\n\n\t\t\t\t\t\t\t// if we receive a rejected promise,\n\t\t\t\t\t\t\t// throw the reason as exception back\n\t\t\t\t\t\t\t// into the generator for its own error\n\t\t\t\t\t\t\t// handling (if any)\n\t\t\t\t\t\t\tfunction onRejection(reason){\n\t\t\t\t\t\t\t\treturn Promise.resolve(\n\t\t\t\t\t\t\t\t\tit.throw(reason)\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t.then(processResult);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t);\n\t\t\t\t\t\t// clean up memory\n\t\t\t\t\t\tprNext.catch(function cleanup(){ it = null; });\n\t\t\t\t\t}\n\n\t\t\t\t\tnextResult = null; // clean up memory\n\t\t\t\t\treturn prNext;\n\t\t\t\t})(nextResult);\n\t\t\t})(),\n\t\t};\n\t}\n\n});\n", "/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global global, define, System, Reflect, Promise */\r\nvar __extends;\r\nvar __assign;\r\nvar __rest;\r\nvar __decorate;\r\nvar __param;\r\nvar __metadata;\r\nvar __awaiter;\r\nvar __generator;\r\nvar __exportStar;\r\nvar __values;\r\nvar __read;\r\nvar __spread;\r\nvar __spreadArrays;\r\nvar __spreadArray;\r\nvar __await;\r\nvar __asyncGenerator;\r\nvar __asyncDelegator;\r\nvar __asyncValues;\r\nvar __makeTemplateObject;\r\nvar __importStar;\r\nvar __importDefault;\r\nvar __classPrivateFieldGet;\r\nvar __classPrivateFieldSet;\r\nvar __createBinding;\r\n(function (factory) {\r\n    var root = typeof global === \"object\" ? global : typeof self === \"object\" ? self : typeof this === \"object\" ? this : {};\r\n    if (typeof define === \"function\" && define.amd) {\r\n        define(\"tslib\", [\"exports\"], function (exports) { factory(createExporter(root, createExporter(exports))); });\r\n    }\r\n    else if (typeof module === \"object\" && typeof module.exports === \"object\") {\r\n        factory(createExporter(root, createExporter(module.exports)));\r\n    }\r\n    else {\r\n        factory(createExporter(root));\r\n    }\r\n    function createExporter(exports, previous) {\r\n        if (exports !== root) {\r\n            if (typeof Object.create === \"function\") {\r\n                Object.defineProperty(exports, \"__esModule\", { value: true });\r\n            }\r\n            else {\r\n                exports.__esModule = true;\r\n            }\r\n        }\r\n        return function (id, v) { return exports[id] = previous ? previous(id, v) : v; };\r\n    }\r\n})\r\n(function (exporter) {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n\r\n    __extends = function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n\r\n    __assign = Object.assign || function (t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n\r\n    __rest = function (s, e) {\r\n        var t = {};\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n            t[p] = s[p];\r\n        if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n            for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n                if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                    t[p[i]] = s[p[i]];\r\n            }\r\n        return t;\r\n    };\r\n\r\n    __decorate = function (decorators, target, key, desc) {\r\n        var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n        if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n        else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n        return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n    };\r\n\r\n    __param = function (paramIndex, decorator) {\r\n        return function (target, key) { decorator(target, key, paramIndex); }\r\n    };\r\n\r\n    __metadata = function (metadataKey, metadataValue) {\r\n        if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n    };\r\n\r\n    __awaiter = function (thisArg, _arguments, P, generator) {\r\n        function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n        return new (P || (P = Promise))(function (resolve, reject) {\r\n            function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n            function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n            function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n            step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n        });\r\n    };\r\n\r\n    __generator = function (thisArg, body) {\r\n        var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n        return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n        function verb(n) { return function (v) { return step([n, v]); }; }\r\n        function step(op) {\r\n            if (f) throw new TypeError(\"Generator is already executing.\");\r\n            while (_) try {\r\n                if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n                if (y = 0, t) op = [op[0] & 2, t.value];\r\n                switch (op[0]) {\r\n                    case 0: case 1: t = op; break;\r\n                    case 4: _.label++; return { value: op[1], done: false };\r\n                    case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                    case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                    default:\r\n                        if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                        if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                        if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                        if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                        if (t[2]) _.ops.pop();\r\n                        _.trys.pop(); continue;\r\n                }\r\n                op = body.call(thisArg, _);\r\n            } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n            if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n        }\r\n    };\r\n\r\n    __exportStar = function(m, o) {\r\n        for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n    };\r\n\r\n    __createBinding = Object.create ? (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n    }) : (function(o, m, k, k2) {\r\n        if (k2 === undefined) k2 = k;\r\n        o[k2] = m[k];\r\n    });\r\n\r\n    __values = function (o) {\r\n        var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n        if (m) return m.call(o);\r\n        if (o && typeof o.length === \"number\") return {\r\n            next: function () {\r\n                if (o && i >= o.length) o = void 0;\r\n                return { value: o && o[i++], done: !o };\r\n            }\r\n        };\r\n        throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n    };\r\n\r\n    __read = function (o, n) {\r\n        var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n        if (!m) return o;\r\n        var i = m.call(o), r, ar = [], e;\r\n        try {\r\n            while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n        }\r\n        catch (error) { e = { error: error }; }\r\n        finally {\r\n            try {\r\n                if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n            }\r\n            finally { if (e) throw e.error; }\r\n        }\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spread = function () {\r\n        for (var ar = [], i = 0; i < arguments.length; i++)\r\n            ar = ar.concat(__read(arguments[i]));\r\n        return ar;\r\n    };\r\n\r\n    /** @deprecated */\r\n    __spreadArrays = function () {\r\n        for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n        for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n            for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n                r[k] = a[j];\r\n        return r;\r\n    };\r\n\r\n    __spreadArray = function (to, from, pack) {\r\n        if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n            if (ar || !(i in from)) {\r\n                if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n                ar[i] = from[i];\r\n            }\r\n        }\r\n        return to.concat(ar || Array.prototype.slice.call(from));\r\n    };\r\n\r\n    __await = function (v) {\r\n        return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n    };\r\n\r\n    __asyncGenerator = function (thisArg, _arguments, generator) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n        return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n        function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n        function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n        function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r);  }\r\n        function fulfill(value) { resume(\"next\", value); }\r\n        function reject(value) { resume(\"throw\", value); }\r\n        function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n    };\r\n\r\n    __asyncDelegator = function (o) {\r\n        var i, p;\r\n        return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n        function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n    };\r\n\r\n    __asyncValues = function (o) {\r\n        if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n        var m = o[Symbol.asyncIterator], i;\r\n        return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n        function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n        function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n    };\r\n\r\n    __makeTemplateObject = function (cooked, raw) {\r\n        if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n        return cooked;\r\n    };\r\n\r\n    var __setModuleDefault = Object.create ? (function(o, v) {\r\n        Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n    }) : function(o, v) {\r\n        o[\"default\"] = v;\r\n    };\r\n\r\n    __importStar = function (mod) {\r\n        if (mod && mod.__esModule) return mod;\r\n        var result = {};\r\n        if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n        __setModuleDefault(result, mod);\r\n        return result;\r\n    };\r\n\r\n    __importDefault = function (mod) {\r\n        return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n    };\r\n\r\n    __classPrivateFieldGet = function (receiver, state, kind, f) {\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n        return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n    };\r\n\r\n    __classPrivateFieldSet = function (receiver, state, value, kind, f) {\r\n        if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n        if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n        if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n        return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n    };\r\n\r\n    exporter(\"__extends\", __extends);\r\n    exporter(\"__assign\", __assign);\r\n    exporter(\"__rest\", __rest);\r\n    exporter(\"__decorate\", __decorate);\r\n    exporter(\"__param\", __param);\r\n    exporter(\"__metadata\", __metadata);\r\n    exporter(\"__awaiter\", __awaiter);\r\n    exporter(\"__generator\", __generator);\r\n    exporter(\"__exportStar\", __exportStar);\r\n    exporter(\"__createBinding\", __createBinding);\r\n    exporter(\"__values\", __values);\r\n    exporter(\"__read\", __read);\r\n    exporter(\"__spread\", __spread);\r\n    exporter(\"__spreadArrays\", __spreadArrays);\r\n    exporter(\"__spreadArray\", __spreadArray);\r\n    exporter(\"__await\", __await);\r\n    exporter(\"__asyncGenerator\", __asyncGenerator);\r\n    exporter(\"__asyncDelegator\", __asyncDelegator);\r\n    exporter(\"__asyncValues\", __asyncValues);\r\n    exporter(\"__makeTemplateObject\", __makeTemplateObject);\r\n    exporter(\"__importStar\", __importStar);\r\n    exporter(\"__importDefault\", __importDefault);\r\n    exporter(\"__classPrivateFieldGet\", __classPrivateFieldGet);\r\n    exporter(\"__classPrivateFieldSet\", __classPrivateFieldSet);\r\n});\r\n", "import React, { useContext, useEffect, useState } from 'react';\nimport { store } from '@aha-app/react-easy-state';\nimport Debug from 'debug';\n//import ReactiveRegister from 'javascripts/reactive_register';\nimport { randomId } from '../utils/randomId';\nimport CAF from 'caf';\nimport _ from 'lodash';\n\nconst debug = Debug('framework:controller');\n\nclass ControllerNoActionError extends Error {}\n\n/*\n * General rules to follow for using controllers:\n *\n * 1. Any data that should trigger React re-rendering should be stored in\n *    the `state` object.\n * 2. After adding data to `state` get a new reference to it, via the `state`\n *    object before using it again. This ensures that the new access or mutation\n *    is tracked.\n * 3. The `state` object, and any content within it, must only be mutated\n *    inside an `action...` function.\n * 4. Action functions can be called from anywhere, including event handlers,\n *    callbacks, after `await`, render methods, and from within other action\n *    functions.\n */\nclass ApplicationController {\n  constructor() {\n    this.id = randomId();\n    this.parent = null;\n    this.state = undefined;\n    this.subscriptions = [];\n    this.cancelTokens = {};\n\n    return new Proxy(this, {\n      // Traverse up through the controller hierarchy and find one that responds\n      // to the specified action.\n      get(targetController, prop, receiver) {\n        if (typeof prop === 'string' && prop.startsWith('action')) {\n          let currentController = targetController;\n          let currentProxy = receiver;\n          do {\n            if (prop in currentController) {\n              // We need to change this when the method is invoked, so rewrite\n              // the function.\n              return function (...args) {\n                return currentController[prop](...args);\n              };\n            }\n            // Look further up the hierarchy.\n            currentController = currentController.parent;\n            currentProxy = currentProxy.parent;\n          } while (currentController);\n\n          throw new ControllerNoActionError(\n            `Unable to find an action ${prop} on ${targetController.constructor.name}`\n          );\n        } else {\n          return Reflect.get(targetController, prop, receiver);\n        }\n      },\n      has(targetController, prop) {\n        if (typeof prop === 'string' && prop.startsWith('action')) {\n          let currentController = targetController;\n          do {\n            if (prop in currentController) {\n              return true;\n            }\n            currentController = currentController.parent;\n          } while (currentController);\n\n          return false;\n        } else {\n          return Reflect.has(targetController, prop);\n        }\n      },\n    });\n  }\n\n  internalInitialize(parentController, initialArgs) {\n    if (!this.initialized) {\n      this.parent = parentController;\n\n      debug(\n        `Initializing ${this.constructor.name}${\n          parentController ? ' > ' + parentController.constructor.name : ''\n        }`\n      );\n\n      this.state = store(_.cloneDeep(this.constructor.initialState));\n      if (this.initialize) this.initialize(initialArgs);\n      this.initialized = true;\n    } else {\n      this.changeProps(initialArgs);\n    }\n  }\n\n  internalDestroy() {\n    // Unregister reactive updates.\n    this.unsubscribeAll();\n    this.unlisten();\n  }\n\n  unlisten() {\n    // Override in child to unlisten all models\n  }\n\n  /**\n   * Subscribe to a reactive update based on pattern and action.\n   *\n   * @param {string | string[]} pattern a reactive update pattern. Example: \"Project-123/Feature-456\"\n   * @param {string} action_or_callback one of [\"create\", \"update\", \"destroy\"]\n   * @param {function} callback a function that receives the parentId and childId of a reactive update. Example: callback(\"projects-123\", \"features-456\")\n   */\n  subscribe(pattern, action_or_callback, callback) {\n    if (!callback) {\n      callback = action_or_callback;\n      action_or_callback = ['create', 'update', 'destroy'];\n    }\n    const subscribedActions =\n      action_or_callback instanceof Array\n        ? action_or_callback\n        : [action_or_callback];\n\n    // Use reactive updates to detect record changes.\n    const subscriptionId = `controller-${this.id}-${subscribedActions.join(\n      ','\n    )}-${pattern}`;\n\n    if (this.subscriptions.includes(subscriptionId)) {\n      console.warn(\n        `Re-registering an already registered reactive pattern for this controller: ${subscriptionId}`\n      );\n      this.unsubscribe(subscriptionId);\n    }\n\n    this.subscriptions.push(subscriptionId);\n    /*TODO: ReactiveRegister.register(\n      subscriptionId,\n      pattern,\n      async (change, ownPageChanges, ownComponentChanges, messageClientId) => {\n        if (messageClientId === window.frameworkClientId()) {\n          debug(`Ignoring our own change ${change.path}`);\n          return;\n        }\n\n        if (subscribedActions.includes(change.action)) {\n          debug(`Handling update ${change.path}`);\n          // Split parent and child key into components.\n          const [p, c] = change.path.split('/');\n\n          callback(p, c, change);\n        }\n      }\n    );*/\n    return subscriptionId;\n  }\n\n  unsubscribe(subscriptionId) {\n    // TODO: ReactiveRegister.deregister(subscriptionId);\n    const index = this.subscriptions.indexOf(subscriptionId);\n    if (index >= 0) this.subscriptions.splice(index, 1);\n  }\n\n  unsubscribeAll() {\n    this.subscriptions.slice().forEach(subscriptionId => {\n      this.unsubscribe(subscriptionId);\n    });\n  }\n\n  /**\n   *  Force a record to be an observed instance that will\n   *  trigger observers on the controller state.\n   *\n   *  You need this if you're using Spraypaint `.save()` to create a\n   *  record and want the updated record to trigger state updates.\n   */\n  observable(obj) {\n    this.state._tempObservable = obj;\n    return this.state._tempObservable;\n  }\n\n  /**\n   * Run an async function that can be canceled using\n   * `cancelPending`. When canceled, the async function will not run\n   * its `then` (or anything following the `await`).\n   *\n   * `scope` is an arbitrary string that can be used in\n   * `cancelPending` to cancel only pending functions of a certain\n   * type.\n   *\n   * For example:\n   *   await this.cancelable(\"loadFilters\", async () => ...)\n   *   this.cancelPending(\"loadFilters\")\n   */\n  cancelable(scope, fn) {\n    let token = this.cancelTokens[scope];\n    if (!token) {\n      token = this.cancelTokens[scope] = new CAF.cancelToken(); // eslint-disable-line new-cap\n    }\n\n    const cancelableFn = CAF(function* (signal) {\n      return yield fn(signal);\n    });\n\n    return cancelableFn(token.signal);\n  }\n\n  /**\n   * Cancel all running cancelable functions created using `scope`.\n   */\n  cancelPending(scope) {\n    if (this.cancelTokens[scope]) {\n      this.cancelTokens[scope].abort(\n        `Cancelled pending functions for ${this.constructor.name}/${scope}`\n      );\n    }\n    delete this.cancelTokens[scope];\n  }\n\n  /**\n   * Cancel all running cancelable functions.\n   */\n  cancelAllPending() {\n    Object.keys(this.cancelTokens).forEach(scope => this.cancelPending(scope));\n  }\n\n  /**\n   * Cleanup the cancelable state after the operation is complete.\n   */\n  finishPending(scope) {\n    delete this.cancelTokens[scope];\n  }\n\n  changeProps(newProps) {\n    // Override in sub-class to respond to changes in props.\n  }\n\n  /**\n   * Partially set state\n   */\n  setState(newState) {\n    Object.keys(newState).forEach(key => {\n      this.state[key] = newState[key];\n    });\n  }\n}\n\n/**\n * Wrap a root React component using a new instance of a\n * controller. The controller will receive any props passed to the\n * component in its `initialize` method.\n *\n * When wrapped, any child component can use the `useController` hook\n * to receive the controller instance of its closest ancestor with a\n * ControllerScope.\n *\n * Example:\n *   export default StartControllerScope(WorkflowBoardController, WorkflowBoard);\n *\n * Inside a child component:\n *   const controller = useController();\n *\n * A reference to the controller can be retrieved from the component by\n * passing the `controllerRef` prop a value returned by `useRef()`.\n *\n * Example:\n *\n *   const whiteboardController = useRef();\n *   <Whiteboard controllerRef={whiteboardController} />\n *   ...\n *   whiteboardController.current.actionPanIntoView();\n */\nfunction StartControllerScope(ControllerClass, ControlledComponent) {\n  // Use React.memo here so if props don't change then we don't re-render and\n  // allocate a new controller instance.\n  return React.memo(controllerInitialArgs => {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const [controller] = useState(new ControllerClass());\n\n    if (controllerInitialArgs?.controllerRef) {\n      if (typeof controllerInitialArgs.controllerRef === 'function') {\n        controllerInitialArgs.controllerRef(controller);\n      } else if (\n        controllerInitialArgs.controllerRef.hasOwnProperty('current')\n      ) {\n        controllerInitialArgs.controllerRef.current = controller;\n      } else {\n        throw new Error(\n          'The controllerRef prop must be passed the value provided by useRef() or useCallback().'\n        );\n      }\n    }\n\n    return (\n      <Controller\n        controller={controller}\n        controllerInitialArgs={controllerInitialArgs}\n        key={controller.id}\n      >\n        <ControlledComponent {...controllerInitialArgs} />\n      </Controller>\n    );\n  });\n}\n\nconst ControllerContext = React.createContext(null);\n\n/**\n * A component that initializes a controller instance and wraps its\n * child with a context containing that instance.\n */\nfunction Controller({ children, controller, controllerInitialArgs }) {\n  const parentController = useContext(ControllerContext);\n\n  controller.internalInitialize(parentController, controllerInitialArgs);\n\n  // Give controller a chance to deregister when it is removed.\n  useEffect(() => {\n    return () => {\n      debug('Destroying controller');\n      if (controller.destroy) controller.destroy();\n      controller.internalDestroy();\n    };\n  }, [controller]);\n\n  return (\n    <ControllerContext.Provider value={controller}>\n      {children}\n    </ControllerContext.Provider>\n  );\n}\n\n/**\n * Associate a controller with existing components. Useful if the same controller\n * needs to live longer than its direct parent in the component hierarchy.\n *\n */\nfunction ControlledComponent({ children, controller }) {\n  return (\n    <ControllerContext.Provider value={controller}>\n      {children}\n    </ControllerContext.Provider>\n  );\n}\n\n/**\n * Returns the controller instance created by the closest\n * ControllerContext.\n *\n * @template T\n * @returns {T}\n */\nconst useController = () => {\n  const controller = useContext(ControllerContext);\n\n  const statefulController = controller;\n\n  return statefulController;\n};\n\nexport {\n  ApplicationController,\n  StartControllerScope,\n  ControlledComponent,\n  useController,\n};\n", "export * from 'react-dom';\n", "var connectionStore = new WeakMap();\nvar ITERATION_KEY = Symbol('iteration key');\nfunction storeObservable(obj) {\n  // this will be used to save (obj.key -> reaction) connections later\n  connectionStore.set(obj, new Map());\n}\nfunction registerReactionForOperation(reaction, {\n  target,\n  key,\n  type\n}) {\n  if (type === 'iterate') {\n    key = ITERATION_KEY;\n  }\n\n  var reactionsForObj = connectionStore.get(target);\n  var reactionsForKey = reactionsForObj.get(key);\n\n  if (!reactionsForKey) {\n    reactionsForKey = new Set();\n    reactionsForObj.set(key, reactionsForKey);\n  } // save the fact that the key is used by the reaction during its current run\n\n\n  if (!reactionsForKey.has(reaction)) {\n    reactionsForKey.add(reaction);\n    reaction.cleaners.push(reactionsForKey);\n  }\n}\nfunction getReactionsForOperation({\n  target,\n  key,\n  type\n}) {\n  var reactionsForTarget = connectionStore.get(target);\n  var reactionsForKey = new Set();\n\n  if (type === 'clear') {\n    reactionsForTarget.forEach((_, key) => {\n      addReactionsForKey(reactionsForKey, reactionsForTarget, key);\n    });\n  } else {\n    addReactionsForKey(reactionsForKey, reactionsForTarget, key);\n  }\n\n  if (type === 'add' || type === 'delete' || type === 'clear') {\n    var iterationKey = Array.isArray(target) ? 'length' : ITERATION_KEY;\n    addReactionsForKey(reactionsForKey, reactionsForTarget, iterationKey);\n  }\n\n  return reactionsForKey;\n}\n\nfunction addReactionsForKey(reactionsForKey, reactionsForTarget, key) {\n  var reactions = reactionsForTarget.get(key);\n  reactions && reactions.forEach(reactionsForKey.add, reactionsForKey);\n}\n\nfunction releaseReaction(reaction) {\n  if (reaction.cleaners) {\n    reaction.cleaners.forEach(releaseReactionKeyConnection, reaction);\n  }\n\n  reaction.cleaners = [];\n}\n\nfunction releaseReactionKeyConnection(reactionsForKey) {\n  reactionsForKey.delete(this);\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        _defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar proxyToRaw = new WeakMap();\nvar rawToProxy = new WeakMap(); // stores custom proxy handlers for observables\n\nvar rawToOptions = new WeakMap();\n\n// this is a copy of the built-in Reflect object\n// Reflect keys are not enumerable, so a simple { ...Reflect } spread does not work here\n// we have to copy all Reflect handlers to the object instead\n\nvar proxyHandlers = Object.freeze(Object.getOwnPropertyNames(Reflect).reduce((handlers, key) => _objectSpread2(_objectSpread2({}, handlers), {}, {\n  [key]: Reflect[key]\n}), {})); // ES6 collection method related handlers\n\nvar collectionHandlers = Object.freeze({\n  has: (target, ...args) => target.has(...args),\n  get: (target, ...args) => target.get(...args),\n  add: (target, ...args) => target.add(...args),\n  set: (target, ...args) => target.set(...args),\n  delete: (target, ...args) => target.delete(...args),\n  clear: (target, ...args) => target.clear(...args),\n  forEach: (target, ...args) => target.forEach(...args),\n  keys: (target, ...args) => target.keys(...args),\n  values: (target, ...args) => target.values(...args),\n  entries: (target, ...args) => target.entries(...args),\n  [Symbol.iterator]: (target, ...args) => target[Symbol.iterator](...args),\n  size: target => target.size\n});\nvar reactionHandlers = Object.freeze({\n  // order/filter reactions triggered by an atomic observable mutation\n  transformReactions: (target, key, reactions) => reactions\n});\nvar defaultHandlers = {\n  proxyHandlers,\n  collectionHandlers,\n  reactionHandlers\n};\nvar runProxyHandler = (...args) => runHandler('proxyHandlers', ...args);\nvar runCollectionHandler = (...args) => runHandler('collectionHandlers', ...args);\nvar runReactionHandler = (...args) => runHandler('reactionHandlers', ...args); // runs the default or custom (user-provided) handler for the specific operation\n\nfunction runHandler(handlers, name, target, ...args) {\n  var _options$handlers;\n\n  var options = rawToOptions.get(target);\n  var handler = (options === null || options === void 0 ? void 0 : (_options$handlers = options[handlers]) === null || _options$handlers === void 0 ? void 0 : _options$handlers[name]) || defaultHandlers[handlers][name];\n  return handler(target, ...args);\n}\n\nvar reactionStack = [];\nvar isDebugging = false;\nfunction runAsReaction(reaction, fn, context, args) {\n  // do not build reactive relations, if the reaction is unobserved\n  if (reaction.unobserved) {\n    return Reflect.apply(fn, context, args);\n  } // only run the reaction if it is not already in the reaction stack\n  // TODO: improve this to allow explicitly recursive reactions\n\n\n  if (reactionStack.indexOf(reaction) === -1) {\n    // release the (obj -> key -> reactions) connections\n    // and reset the cleaner connections\n    releaseReaction(reaction);\n\n    try {\n      // set the reaction as the currently running one\n      // this is required so that we can create (observable.prop -> reaction) pairs in the get trap\n      reactionStack.push(reaction);\n      return Reflect.apply(fn, context, args);\n    } finally {\n      // always remove the currently running flag from the reaction when it stops execution\n      reactionStack.pop();\n    }\n  }\n} // register the currently running reaction to be queued again on obj.key mutations\n\nfunction registerRunningReactionForOperation(operation) {\n  // get the current reaction from the top of the stack\n  var runningReaction = reactionStack[reactionStack.length - 1];\n\n  if (runningReaction) {\n    debugOperation(runningReaction, operation);\n    registerReactionForOperation(runningReaction, operation);\n  }\n}\nfunction queueReactionsForOperation(operation) {\n  // iterate and queue every reaction, which is triggered by obj.key mutation\n  var target = operation.target,\n      key = operation.key;\n  var reactions = getReactionsForOperation(operation);\n  runReactionHandler('transformReactions', target, key, Array.from(reactions)).forEach(queueReaction, operation);\n}\n\nfunction queueReaction(reaction) {\n  debugOperation(reaction, this); // queue the reaction for later execution or run it immediately\n\n  if (typeof reaction.scheduler === 'function') {\n    reaction.scheduler(reaction);\n  } else if (typeof reaction.scheduler === 'object') {\n    reaction.scheduler.add(reaction);\n  } else {\n    reaction();\n  }\n}\n\nfunction debugOperation(reaction, operation) {\n  if (reaction.debugger && !isDebugging) {\n    try {\n      isDebugging = true;\n      reaction.debugger(operation);\n    } finally {\n      isDebugging = false;\n    }\n  }\n}\n\nvar IS_REACTION = Symbol('is reaction');\nfunction observe(fn, options = {}) {\n  // wrap the passed function in a reaction, if it is not already one\n  var reaction = fn[IS_REACTION] ? fn : function reaction() {\n    return runAsReaction(reaction, fn, this, arguments);\n  }; // save the scheduler and debugger on the reaction\n\n  reaction.scheduler = options.scheduler;\n  reaction.debugger = options.debugger; // save the fact that this is a reaction\n\n  reaction[IS_REACTION] = true; // run the reaction once if it is not a lazy one\n\n  if (!options.lazy) {\n    reaction();\n  }\n\n  return reaction;\n}\nfunction unobserve(reaction) {\n  // do nothing, if the reaction is already unobserved\n  if (!reaction.unobserved) {\n    // indicate that the reaction should not be triggered any more\n    reaction.unobserved = true; // release (obj -> key -> reaction) connections\n\n    releaseReaction(reaction);\n  } // unschedule the reaction, if it is scheduled\n\n\n  if (typeof reaction.scheduler === 'object') {\n    reaction.scheduler.delete(reaction);\n  }\n}\n\nfunction patchIterator(iterator, target, isEntries) {\n  var originalNext = iterator.next;\n\n  iterator.next = () => {\n    var _originalNext$call = originalNext.call(iterator),\n        done = _originalNext$call.done,\n        value = _originalNext$call.value;\n\n    if (!done) {\n      if (isEntries) {\n        value[1] = observableChild(value[1], target);\n      } else {\n        value = observableChild(value, target);\n      }\n    }\n\n    return {\n      done,\n      value\n    };\n  };\n\n  return iterator;\n}\n\nvar collectionHandlers$1 = {\n  has(key) {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      key,\n      type: 'has'\n    });\n    return runCollectionHandler('has', target, ...arguments);\n  },\n\n  get(key) {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      key,\n      type: 'get'\n    });\n    return observableChild(runCollectionHandler('get', target, ...arguments), target);\n  },\n\n  add(key) {\n    var target = proxyToRaw.get(this);\n    var hadKey = target.has(key); // forward the operation before queueing reactions\n\n    var result = runCollectionHandler('add', target, ...arguments);\n\n    if (!hadKey) {\n      queueReactionsForOperation({\n        target,\n        key,\n        value: key,\n        type: 'add'\n      });\n    }\n\n    return result;\n  },\n\n  set(key, value) {\n    var target = proxyToRaw.get(this);\n    var hadKey = target.has(key);\n    var oldValue = target.get(key); // forward the operation before queueing reactions\n\n    var result = runCollectionHandler('set', target, ...arguments);\n\n    if (!hadKey) {\n      queueReactionsForOperation({\n        target,\n        key,\n        value,\n        type: 'add'\n      });\n    } else if (value !== oldValue) {\n      queueReactionsForOperation({\n        target,\n        key,\n        value,\n        oldValue,\n        type: 'set'\n      });\n    }\n\n    return result;\n  },\n\n  delete(key) {\n    var target = proxyToRaw.get(this);\n    var hadKey = target.has(key);\n    var oldValue = target.get ? target.get(key) : undefined; // forward the operation before queueing reactions\n\n    var result = runCollectionHandler('delete', target, ...arguments);\n\n    if (hadKey) {\n      queueReactionsForOperation({\n        target,\n        key,\n        oldValue,\n        type: 'delete'\n      });\n    }\n\n    return result;\n  },\n\n  clear() {\n    var target = proxyToRaw.get(this);\n    var hadItems = target.size !== 0;\n    var oldTarget = target instanceof Map ? new Map(target) : new Set(target); // forward the operation before queueing reactions\n\n    var result = runCollectionHandler('clear', target, ...arguments);\n\n    if (hadItems) {\n      queueReactionsForOperation({\n        target,\n        oldTarget,\n        type: 'clear'\n      });\n    }\n\n    return result;\n  },\n\n  forEach(callback, ...args) {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      type: 'iterate'\n    }); // swap out the raw values with their observable pairs\n    // before passing them to the callback\n\n    var wrappedCallback = (value, ...rest) => callback(observableChild(value, target), ...rest);\n\n    return runCollectionHandler('forEach', target, wrappedCallback, ...args);\n  },\n\n  keys() {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      type: 'iterate'\n    }); // TODO: no need to patch this?\n\n    return runCollectionHandler('keys', target, ...arguments);\n  },\n\n  values() {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      type: 'iterate'\n    });\n    var iterator = runCollectionHandler('values', target, ...arguments);\n    return patchIterator(iterator, target, false);\n  },\n\n  entries() {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      type: 'iterate'\n    });\n    var iterator = runCollectionHandler('entries', target, ...arguments);\n    return patchIterator(iterator, target, true);\n  },\n\n  [Symbol.iterator]() {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      type: 'iterate'\n    });\n    var iterator = runCollectionHandler(Symbol.iterator, target, ...arguments);\n    return patchIterator(iterator, target, target instanceof Map);\n  },\n\n  get size() {\n    var target = proxyToRaw.get(this);\n    registerRunningReactionForOperation({\n      target,\n      type: 'iterate'\n    });\n    return runCollectionHandler('size', target);\n  }\n\n};\nvar collectionHandlers$2 = {\n  get(target, key, receiver) {\n    // instrument methods and property accessors to be reactive\n    // eslint-disable-next-line no-prototype-builtins\n    target = collectionHandlers$1.hasOwnProperty(key) ? collectionHandlers$1 : target;\n    return Reflect.get(target, key, receiver);\n  }\n\n};\n\nvar globalObj = // eslint-disable-next-line no-new-func\ntypeof window === 'object' ? window : Function('return this')(); // these stateful built-in objects can and should be wrapped by Proxies if they are part of a store\n// simple ones - like arrays - ar wrapped with the normal observable Proxy\n// complex ones - like Map and Set - are wrapped with a Proxy of instrumented methods\n\nvar handlers = new Map([[Map, collectionHandlers$2], [Set, collectionHandlers$2], [WeakMap, collectionHandlers$2], [WeakSet, collectionHandlers$2], [Object, false], [Array, false], [Int8Array, false], [Uint8Array, false], [Uint8ClampedArray, false], [Int16Array, false], [Uint16Array, false], [Int32Array, false], [Uint32Array, false], [Float32Array, false], [Float64Array, false]]); // some (usually stateless) built-in objects can not be and should not be wrapped by Proxies\n// their methods expect the object instance as the receiver ('this') instead of the Proxy wrapper\n// wrapping them and calling their methods causes erros like: \"TypeError: this is not a Date object.\"\n\nfunction shouldInstrument(obj) {\n  var constructor = obj.constructor; // functions and objects in the above handlers array are safe to instrument\n\n  if (typeof obj === 'function' || handlers.has(constructor)) {\n    return true;\n  } // other built-in objects should not be implemented\n\n\n  var isBuiltIn = typeof constructor === 'function' && constructor.name in globalObj && globalObj[constructor.name] === constructor;\n  return !isBuiltIn;\n}\nfunction getHandlers(obj) {\n  return handlers.get(obj.constructor);\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\nvar wellKnownSymbols = new Set(Object.getOwnPropertyNames(Symbol).map(key => Symbol[key]).filter(value => typeof value === 'symbol')); // intercept get operations on observables to know which reaction uses their properties\n\nfunction get(target, key, receiver) {\n  var result = runProxyHandler('get', target, key, receiver); // do not register (observable.prop -> reaction) pairs for well known symbols\n  // these symbols are frequently retrieved in low level JavaScript under the hood\n\n  if (typeof key === 'symbol' && wellKnownSymbols.has(key)) {\n    return result;\n  } // register and save the (observable.prop -> runningReaction) relation\n\n\n  registerRunningReactionForOperation({\n    target,\n    key,\n    receiver,\n    type: 'get'\n  }); // do not violate the none-configurable none-writable prop get handler invariant\n  // fall back to none reactive mode in this case, instead of letting the Proxy throw a TypeError\n\n  var descriptor = Reflect.getOwnPropertyDescriptor(target, key);\n\n  if (descriptor && descriptor.writable === false && descriptor.configurable === false) {\n    return result;\n  } // otherwise return the observable wrapper if it is already created and cached or the raw object\n\n\n  return observableChild(result, target);\n}\n\nfunction has(target, key) {\n  var result = runProxyHandler('has', target, key); // register and save (observable.prop -> runningReaction)\n\n  registerRunningReactionForOperation({\n    target,\n    key,\n    type: 'has'\n  });\n  return result;\n}\n\nfunction ownKeys$1(target) {\n  registerRunningReactionForOperation({\n    target,\n    type: 'iterate'\n  });\n  return runProxyHandler('ownKeys', target);\n} // intercept set operations on observables to know when to trigger reactions\n\n\nfunction set(target, key, value, receiver) {\n  // make sure to do not pollute the raw object with observables\n  value = proxyToRaw.get(value) || value; // save if the object had a descriptor for this key\n\n  var hadKey = hasOwnProperty.call(target, key); // save if the value changed because of this set operation\n\n  var oldValue = target[key]; // execute the set operation before running any reaction\n\n  var result = runProxyHandler('set', target, key, value, receiver); // do not queue reactions if the target of the operation is not the raw receiver\n  // this possible because of prototypal inheritance\n  // when the prototype has a setter the set operation traverses the whole prototype chain\n  // and calls the set trap on every object until it finds the setter\n  // this is undesired, it is enough for us to trigger the reactions in the set trap of\n  // the receiver (child) object to avoid duplicate reactions\n\n  if (target !== proxyToRaw.get(receiver)) {\n    return result;\n  } // queue a reaction if it's a new property or its value changed\n\n\n  if (!hadKey) {\n    queueReactionsForOperation({\n      target,\n      key,\n      value,\n      receiver,\n      type: 'add'\n    });\n  } else if (value !== oldValue) {\n    queueReactionsForOperation({\n      target,\n      key,\n      value,\n      oldValue,\n      receiver,\n      type: 'set'\n    });\n  }\n\n  return result;\n}\n\nfunction deleteProperty(target, key) {\n  // save if the object had the key\n  var hadKey = hasOwnProperty.call(target, key);\n  var oldValue = target[key]; // execute the delete operation before running any reaction\n\n  var result = runProxyHandler('deleteProperty', target, key); // only queue reactions for delete operations which resulted in an actual change\n\n  if (hadKey) {\n    queueReactionsForOperation({\n      target,\n      key,\n      oldValue,\n      type: 'delete'\n    });\n  }\n\n  return result;\n} // return an observable object instance when an observable class is instantiated\n\n\nfunction construct(target, args, newTarget) {\n  return observable(runProxyHandler('construct', target, args, newTarget));\n}\n\nvar proxyHandlers$1 = {\n  get,\n  has,\n  ownKeys: ownKeys$1,\n  set,\n  deleteProperty,\n  construct\n};\n\nfunction observable(obj = {}, options) {\n  // if it is already an observable or it should not be wrapped, return it\n  if (proxyToRaw.has(obj) || !shouldInstrument(obj)) {\n    return obj;\n  } // if it already has a cached observable wrapper, return it\n  // otherwise create a new observable\n\n\n  return rawToProxy.get(obj) || createObservable(obj, options);\n}\n\nfunction createObservable(obj, options) {\n  // if it is a complex built-in object or a normal object, wrap it\n  var baseHandlers = getHandlers(obj) || proxyHandlers$1;\n  var observable = new Proxy(obj, _objectSpread2(_objectSpread2({}, options === null || options === void 0 ? void 0 : options.proxyHandlers), baseHandlers)); // save these to switch between the raw object and the wrapped object with ease later\n\n  rawToProxy.set(obj, observable);\n  proxyToRaw.set(observable, obj); // add custom options to the raw object\n\n  if (options) {\n    rawToOptions.set(obj, options);\n  } // init basic data structures to save and cleanup later (observable.prop -> reaction) connections\n\n\n  storeObservable(obj);\n  return observable;\n} // if observable.prop is an object, wrap it in an observable too\n// this is needed to intercept property access on that object too\n\n\nfunction observableChild(child, parent) {\n  if (typeof child === 'object' && child !== null || typeof child === 'function') {\n    // pass the parent's options to the child object\n    // this creates a 'deep proxy' which shares custom handlers deeply with its object children\n    var options = rawToOptions.get(parent);\n    return observable(child, options);\n  }\n\n  return child;\n}\nfunction isObservable(obj) {\n  return proxyToRaw.has(obj);\n}\nfunction raw(obj) {\n  return proxyToRaw.get(obj) || obj;\n}\n\nexport { collectionHandlers, isObservable, observable, observe, proxyHandlers, raw, reactionHandlers, unobserve };\n", "import { useState } from 'react';\n\n// try to find the global object\n// it is window in the DOM and global in NodeJS and React Native\nconst isDOM = typeof window !== 'undefined';\nconst isNative = typeof global !== 'undefined';\nexport const globalObj = isDOM\n  ? window\n  : isNative\n  ? global\n  : undefined;\n\nexport const hasHooks = typeof useState === 'function';\n", "/* eslint camelcase: 0 */\n\nimport { Component, useState, useEffect, useMemo, memo } from 'react';\n// eslint-disable-next-line import/no-unresolved\nimport { unstable_batchedUpdates } from 'react-platform';\nimport {\n  observe,\n  unobserve,\n  raw,\n  isObservable,\n} from '@nx-js/observer-util';\n\nimport { hasHooks } from './utils';\n\nexport let isInsideFunctionComponent = false;\nexport let isInsideClassComponentRender = false;\nexport let isInsideFunctionComponentWithoutHooks = false;\nconst COMPONENT = Symbol('owner component');\n\nfunction mapStateToStores(state) {\n  // find store properties and map them to their none observable raw value\n  // to do not trigger none static this.setState calls\n  // from the static getDerivedStateFromProps lifecycle method\n  const component = state[COMPONENT];\n  return Object.keys(component)\n    .map(key => component[key])\n    .filter(isObservable)\n    .map(raw);\n}\n\n// We batch all updates to the view until the end of the current task. This\n// is to prevent excessive rendering in situations where updates can occur\n// outside of React's built-in batching. e.g. after resolving a promise,\n// in a setTimeout callback, in an event handler.\nlet batchesPending = {};\nlet taskPending = false;\nlet viewIndexCounter = 0;\nfunction batchSetState(viewIndex, fn) {\n  batchesPending[viewIndex] = fn;\n  if (!taskPending) {\n    taskPending = true;\n    queueMicrotask(() => {\n      const batchesToRun = batchesPending;\n      taskPending = false;\n      batchesPending = {};\n      unstable_batchedUpdates(() =>\n        Object.values(batchesToRun).forEach(setStateFn =>\n          setStateFn(),\n        ),\n      );\n    });\n  }\n}\n\n// No need to trigger an update for this view since it has been removed.\nfunction clearBatch(viewIndex) {\n  delete batchesPending[viewIndex];\n}\n\nexport function view(Comp) {\n  const isStatelessComp = !(\n    Comp.prototype && Comp.prototype.isReactComponent\n  );\n\n  let ReactiveComp;\n\n  if (isStatelessComp && hasHooks) {\n    // use a hook based reactive wrapper when we can\n    ReactiveComp = props => {\n      // Unique ID for each view instance.\n      viewIndexCounter += 1;\n      const viewIndex = viewIndexCounter;\n      // use a dummy setState to update the component\n      const [, setState] = useState();\n      // create a memoized reactive wrapper of the original component (render)\n      // at the very first run of the component function\n      const render = useMemo(\n        () =>\n          observe(Comp, {\n            scheduler: () =>\n              batchSetState(viewIndex, () => {\n                setState({});\n              }),\n            lazy: true,\n          }),\n        // Adding the original Comp here is necessary to make React Hot Reload work\n        // it does not affect behavior otherwise\n        [Comp],\n      );\n\n      // cleanup the reactive connections after the very last render of the component\n      useEffect(() => {\n        return () => {\n          // We don't need to trigger a render after the component is removed.\n          clearBatch(viewIndex);\n          unobserve(render);\n        };\n      }, []);\n\n      // the isInsideFunctionComponent flag is used to toggle `store` behavior\n      // based on where it was called from\n      isInsideFunctionComponent = true;\n      try {\n        // run the reactive render instead of the original one\n        return render(props);\n      } finally {\n        isInsideFunctionComponent = false;\n      }\n    };\n  } else {\n    const BaseComp = isStatelessComp ? Component : Comp;\n    // a HOC which overwrites render, shouldComponentUpdate and componentWillUnmount\n    // it decides when to run the new reactive methods and when to proxy to the original methods\n    class ReactiveClassComp extends BaseComp {\n      constructor(props, context) {\n        super(props, context);\n\n        // Unique ID for each class insance.\n        viewIndexCounter += 1;\n        this.viewIndex = viewIndexCounter;\n        this.state = this.state || {};\n        this.state[COMPONENT] = this;\n\n        // create a reactive render for the component\n        this.render = observe(this.render, {\n          scheduler: () =>\n            batchSetState(this.viewIndex, () => this.setState({})),\n          lazy: true,\n        });\n      }\n\n      render() {\n        isInsideClassComponentRender = !isStatelessComp;\n        isInsideFunctionComponentWithoutHooks = isStatelessComp;\n        try {\n          return isStatelessComp\n            ? Comp(this.props, this.context)\n            : super.render();\n        } finally {\n          isInsideClassComponentRender = false;\n          isInsideFunctionComponentWithoutHooks = false;\n        }\n      }\n\n      // react should trigger updates on prop changes, while easyState handles store changes\n      shouldComponentUpdate(nextProps, nextState) {\n        const { props, state } = this;\n\n        // respect the case when the user defines a shouldComponentUpdate\n        if (super.shouldComponentUpdate) {\n          return super.shouldComponentUpdate(nextProps, nextState);\n        }\n\n        // return true if it is a reactive render or state changes\n        if (state !== nextState) {\n          return true;\n        }\n\n        // the component should update if any of its props shallowly changed value\n        const keys = Object.keys(props);\n        const nextKeys = Object.keys(nextProps);\n        return (\n          nextKeys.length !== keys.length ||\n          nextKeys.some(key => props[key] !== nextProps[key])\n        );\n      }\n\n      // add a custom deriveStoresFromProps lifecyle method\n      static getDerivedStateFromProps(props, state) {\n        if (super.deriveStoresFromProps) {\n          // inject all local stores and let the user mutate them directly\n          const stores = mapStateToStores(state);\n          super.deriveStoresFromProps(props, ...stores);\n        }\n        // respect user defined getDerivedStateFromProps\n        if (super.getDerivedStateFromProps) {\n          return super.getDerivedStateFromProps(props, state);\n        }\n        return null;\n      }\n\n      componentWillUnmount() {\n        // call user defined componentWillUnmount\n        if (super.componentWillUnmount) {\n          super.componentWillUnmount();\n        }\n        // We don't need to trigger a render.\n        clearBatch(this.viewIndex);\n        // clean up memory used by Easy State\n        unobserve(this.render);\n      }\n    }\n\n    ReactiveComp = ReactiveClassComp;\n  }\n\n  ReactiveComp.displayName = Comp.displayName || Comp.name;\n  // static props are inherited by class components,\n  // but have to be copied for function components\n  if (isStatelessComp) {\n    Object.keys(Comp).forEach(key => {\n      ReactiveComp[key] = Comp[key];\n    });\n  }\n\n  return isStatelessComp && hasHooks\n    ? memo(ReactiveComp)\n    : ReactiveComp;\n}\n", "const taskQueue = new Set();\n\nconst scheduler = {\n  isOn: false,\n  add(task) {\n    if (scheduler.isOn) {\n      taskQueue.add(task);\n    } else {\n      task();\n    }\n  },\n  flush() {\n    taskQueue.forEach(task => task());\n    taskQueue.clear();\n  },\n  on() {\n    scheduler.isOn = true;\n  },\n  off() {\n    scheduler.isOn = false;\n  },\n};\n\nexport default scheduler;\n", "/* eslint camelcase: 0 */\n\n// react-platform is set to either react-dom or react-native during test and execution\n// eslint-disable-next-line import/no-unresolved\nimport { unstable_batchedUpdates } from 'react-platform';\nimport scheduler from './scheduler';\n\n// this runs the passed function and delays all re-renders\n// until the function is finished running\n// react renders are batched by unstable_batchedUpdates\n// autoEffects and other custom reactions are batched by our scheduler\nexport function batch(fn, ctx, args) {\n  // do not apply scheduler logic if it is already applied from a parent function\n  // it would flush in the middle of the parent's batch\n  if (scheduler.isOn) {\n    return unstable_batchedUpdates(() => fn.apply(ctx, args));\n  }\n  try {\n    scheduler.on();\n    return unstable_batchedUpdates(() => fn.apply(ctx, args));\n  } finally {\n    scheduler.flush();\n    scheduler.off();\n  }\n}\n\n// this creates and returns a batched version of the passed function\n// the cache is necessary to always map the same thing to the same function\n// which makes sure that addEventListener/removeEventListener pairs don't break\nconst cache = new WeakMap();\nfunction batchFn(fn) {\n  if (typeof fn !== 'function') {\n    return fn;\n  }\n  let batched = cache.get(fn);\n  if (!batched) {\n    batched = new Proxy(fn, {\n      apply(target, thisArg, args) {\n        return batch(target, thisArg, args);\n      },\n    });\n    cache.set(fn, batched);\n  }\n  return batched;\n}\n\nfunction batchMethod(obj, method) {\n  const descriptor = Object.getOwnPropertyDescriptor(obj, method);\n  if (!descriptor) {\n    return;\n  }\n  const { value, writable, set, configurable } = descriptor;\n\n  if (configurable && typeof set === 'function') {\n    Object.defineProperty(obj, method, {\n      ...descriptor,\n      set: batchFn(set),\n    });\n  } else if (writable && typeof value === 'function') {\n    obj[method] = batchFn(value);\n  }\n}\n\n// batches obj.onevent = fn like calls and store methods\nexport function batchMethods(obj, methods) {\n  methods = methods || Object.getOwnPropertyNames(obj);\n  methods.forEach(method => batchMethod(obj, method));\n  return obj;\n}\n", "import { useMemo } from 'react';\nimport { observable } from '@nx-js/observer-util';\n\nimport { batchMethods } from './batch';\nimport {\n  isInsideFunctionComponent,\n  isInsideClassComponentRender,\n  isInsideFunctionComponentWithoutHooks,\n} from './view';\n\nfunction createStore(obj) {\n  return batchMethods(\n    observable(typeof obj === 'function' ? obj() : obj),\n  );\n}\n\nexport function store(obj) {\n  // do not create new versions of the store on every render\n  // if it is a local store in a function component\n  // create a memoized store at the first call instead\n  if (isInsideFunctionComponent) {\n    // useMemo is not a semantic guarantee\n    // In the future, React may choose to \u201Cforget\u201D some previously memoized values and recalculate them on next render\n    // see this docs for more explanation: https://reactjs.org/docs/hooks-reference.html#usememo\n    return useMemo(() => createStore(obj), []);\n  }\n  if (isInsideFunctionComponentWithoutHooks) {\n    throw new Error(\n      'You cannot use state inside a function component with a pre-hooks version of React. Please update your React version to at least v16.8.0 to use this feature.',\n    );\n  }\n  if (isInsideClassComponentRender) {\n    throw new Error(\n      'You cannot use state inside a render of a class component. Please create your store outside of the render function.',\n    );\n  }\n  return createStore(obj);\n}\n", "import { useEffect } from 'react';\nimport { observe, unobserve } from '@nx-js/observer-util';\nimport scheduler from './scheduler';\n\nimport {\n  isInsideFunctionComponent,\n  isInsideClassComponentRender,\n  isInsideFunctionComponentWithoutHooks,\n} from './view';\n\nexport function autoEffect(fn, deps = []) {\n  if (isInsideFunctionComponent) {\n    return useEffect(() => {\n      const observer = observe(fn, {\n        scheduler: () => scheduler.add(observer),\n      });\n      return () => unobserve(observer);\n    }, deps);\n  }\n  if (isInsideFunctionComponentWithoutHooks) {\n    throw new Error(\n      'You cannot use autoEffect inside a function component with a pre-hooks version of React. Please update your React version to at least v16.8.0 to use this feature.',\n    );\n  }\n  if (isInsideClassComponentRender) {\n    throw new Error(\n      'You cannot use autoEffect inside a render of a class component. Please use it in the constructor or lifecycle methods instead.',\n    );\n  }\n\n  const observer = observe(fn, {\n    scheduler: () => scheduler.add(observer),\n  });\n  return observer;\n}\n\nexport { unobserve as clearEffect };\n", "\n// Adds two arrays for the given base (10 or 16), returning the result.\n// This turns out to be the only \"primitive\" operation we need.\nconst add = function (x, y, base) {\n  const z = [];\n  const n = Math.max(x.length, y.length);\n  let carry = 0;\n  let i = 0;\n  while (i < n || carry) {\n    const xi = i < x.length ? x[i] : 0;\n    const yi = i < y.length ? y[i] : 0;\n    const zi = carry + xi + yi;\n    z.push(zi % base);\n    carry = Math.floor(zi / base);\n    i++;\n  }\n  return z;\n};\n\n// Returns a*x, where x is an array of decimal digits and a is an ordinary\n// JavaScript number. base is the number base of the array x.\nconst multiplyByNumber = function (num, x, base) {\n  if (num < 0) {\n    return null;\n  }\n  if (num === 0) {\n    return [];\n  }\n  let result = [];\n  let power = x;\n  while (true) {\n    if (num & 1) {\n      result = add(result, power, base);\n    }\n    num = num >> 1;\n    if (num === 0) {\n      break;\n    }\n    power = add(power, power, base);\n  }\n  return result;\n};\nconst parseToDigitsArray = function (str, base) {\n  const digits = str.split('');\n  const ary = [];\n  let i = digits.length - 1;\n\n  while (i >= 0) {\n    const n = parseInt(digits[i], base);\n    if (isNaN(n)) {\n      return null;\n    }\n    ary.push(n);\n    i--;\n  }\n  return ary;\n};\nconst convertBase = function (str, fromBase, toBase) {\n  const digits = parseToDigitsArray(str, fromBase);\n  if (digits === null) {\n    return null;\n  }\n  let outArray = [];\n  let power = [1];\n  let i = 0;\n\n  while (i < digits.length) {\n    // invariant: at this point, fromBase^i = power\n    if (digits[i]) {\n      outArray = add(\n        outArray,\n        multiplyByNumber(digits[i], power, toBase),\n        toBase\n      );\n    }\n    power = multiplyByNumber(fromBase, power, toBase);\n    i++;\n  }\n  let out = '';\n  i = outArray.length - 1;\n\n  while (i >= 0) {\n    out += outArray[i].toString(toBase);\n    i--;\n  }\n  return out;\n};\n\n//\n// Generate a random ID that can be used in the database.\n//\nexport const randomId = function () {\n  const time = new Date();\n  const now = Math.round((time.getTime() / 1000) * 256);\n  // We want to take the lower 5 bytes from the timestamp, but JS bitwise ops\n  // coerce ints to 4 bytes first. So, we split our 64-bit version of our timestamp\n  // into high and low 32 bits.\n  const now_low = now & 0xffffffff;\n  const now_high = (now - now_low) / 0x100000000 - 0x00000001;\n  const num = [];\n  num[0] = (now_high >> 0) & 0xff;\n  num[1] = (now_low >> 24) & 0xff;\n  num[2] = (now_low >> 16) & 0xff;\n  num[3] = (now_low >> 8) & 0xff;\n  num[4] = (now_low >> 0) & 0xff;\n  num[5] = Math.floor(Math.random() * 255);\n  num[6] = Math.floor(Math.random() * 255);\n  num[7] = Math.floor(Math.random() * 255);\n\n  let hex = '';\n  let _i = 0;\n  const _len = num.length;\n  while (_i < _len) {\n    const n = num[_i];\n    const h = n.toString(16);\n    if (n < 16) {\n      hex = `${hex}0${h}`;\n    } else {\n      hex = hex + h;\n    }\n    _i++;\n  }\n  return convertBase(hex, 16, 10);\n};", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n", "import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n", "import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nexport default isSymbol;\n", "import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.toNumber` which doesn't ensure correct\n * conversions of binary, hexadecimal, or octal string values.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n */\nfunction baseToNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  return +value;\n}\n\nexport default baseToNumber;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nexport default arrayMap;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n", "import Symbol from './_Symbol.js';\nimport arrayMap from './_arrayMap.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default baseToString;\n", "import baseToNumber from './_baseToNumber.js';\nimport baseToString from './_baseToString.js';\n\n/**\n * Creates a function that performs a mathematical operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @param {number} [defaultValue] The value used for `undefined` arguments.\n * @returns {Function} Returns the new mathematical operation function.\n */\nfunction createMathOperation(operator, defaultValue) {\n  return function(value, other) {\n    var result;\n    if (value === undefined && other === undefined) {\n      return defaultValue;\n    }\n    if (value !== undefined) {\n      result = value;\n    }\n    if (other !== undefined) {\n      if (result === undefined) {\n        return other;\n      }\n      if (typeof value == 'string' || typeof other == 'string') {\n        value = baseToString(value);\n        other = baseToString(other);\n      } else {\n        value = baseToNumber(value);\n        other = baseToNumber(other);\n      }\n      result = operator(value, other);\n    }\n    return result;\n  };\n}\n\nexport default createMathOperation;\n", "import createMathOperation from './_createMathOperation.js';\n\n/**\n * Adds two numbers.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {number} augend The first number in an addition.\n * @param {number} addend The second number in an addition.\n * @returns {number} Returns the total.\n * @example\n *\n * _.add(6, 4);\n * // => 10\n */\nvar add = createMathOperation(function(augend, addend) {\n  return augend + addend;\n}, 0);\n\nexport default add;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nexport default trimmedEndIndex;\n", "import trimmedEndIndex from './_trimmedEndIndex.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nexport default baseTrim;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n", "import baseTrim from './_baseTrim.js';\nimport isObject from './isObject.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nexport default toNumber;\n", "import toNumber from './toNumber.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nexport default toFinite;\n", "import toFinite from './toFinite.js';\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nexport default toInteger;\n", "import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The opposite of `_.before`; this method creates a function that invokes\n * `func` once it's called `n` or more times.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {number} n The number of calls before `func` is invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var saves = ['profile', 'settings'];\n *\n * var done = _.after(saves.length, function() {\n *   console.log('done saving!');\n * });\n *\n * _.forEach(saves, function(type) {\n *   asyncSave({ 'type': type, 'complete': done });\n * });\n * // => Logs 'done saving!' after the two async saves have completed.\n */\nfunction after(n, func) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n < 1) {\n      return func.apply(this, arguments);\n    }\n  };\n}\n\nexport default after;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nexport default identity;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n", "import root from './_root.js';\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nexport default coreJsData;\n", "import coreJsData from './_coreJsData.js';\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nexport default isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nexport default toSource;\n", "import isFunction from './isFunction.js';\nimport isMasked from './_isMasked.js';\nimport isObject from './isObject.js';\nimport toSource from './_toSource.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nexport default baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nexport default getValue;\n", "import baseIsNative from './_baseIsNative.js';\nimport getValue from './_getValue.js';\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nexport default getNative;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nexport default WeakMap;\n", "import WeakMap from './_WeakMap.js';\n\n/** Used to store function metadata. */\nvar metaMap = WeakMap && new WeakMap;\n\nexport default metaMap;\n", "import identity from './identity.js';\nimport metaMap from './_metaMap.js';\n\n/**\n * The base implementation of `setData` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar baseSetData = !metaMap ? identity : function(func, data) {\n  metaMap.set(func, data);\n  return func;\n};\n\nexport default baseSetData;\n", "import isObject from './isObject.js';\n\n/** Built-in value references. */\nvar objectCreate = Object.create;\n\n/**\n * The base implementation of `_.create` without support for assigning\n * properties to the created object.\n *\n * @private\n * @param {Object} proto The object to inherit from.\n * @returns {Object} Returns the new object.\n */\nvar baseCreate = (function() {\n  function object() {}\n  return function(proto) {\n    if (!isObject(proto)) {\n      return {};\n    }\n    if (objectCreate) {\n      return objectCreate(proto);\n    }\n    object.prototype = proto;\n    var result = new object;\n    object.prototype = undefined;\n    return result;\n  };\n}());\n\nexport default baseCreate;\n", "import baseCreate from './_baseCreate.js';\nimport isObject from './isObject.js';\n\n/**\n * Creates a function that produces an instance of `Ctor` regardless of\n * whether it was invoked as part of a `new` expression or by `call` or `apply`.\n *\n * @private\n * @param {Function} Ctor The constructor to wrap.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCtor(Ctor) {\n  return function() {\n    // Use a `switch` statement to work with class constructors. See\n    // http://ecma-international.org/ecma-262/7.0/#sec-ecmascript-function-objects-call-thisargument-argumentslist\n    // for more details.\n    var args = arguments;\n    switch (args.length) {\n      case 0: return new Ctor;\n      case 1: return new Ctor(args[0]);\n      case 2: return new Ctor(args[0], args[1]);\n      case 3: return new Ctor(args[0], args[1], args[2]);\n      case 4: return new Ctor(args[0], args[1], args[2], args[3]);\n      case 5: return new Ctor(args[0], args[1], args[2], args[3], args[4]);\n      case 6: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5]);\n      case 7: return new Ctor(args[0], args[1], args[2], args[3], args[4], args[5], args[6]);\n    }\n    var thisBinding = baseCreate(Ctor.prototype),\n        result = Ctor.apply(thisBinding, args);\n\n    // Mimic the constructor's `return` behavior.\n    // See https://es5.github.io/#x13.2.2 for more details.\n    return isObject(result) ? result : thisBinding;\n  };\n}\n\nexport default createCtor;\n", "import createCtor from './_createCtor.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the optional `this`\n * binding of `thisArg`.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createBind(func, bitmask, thisArg) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return fn.apply(isBind ? thisArg : this, arguments);\n  }\n  return wrapper;\n}\n\nexport default createBind;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nexport default apply;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates an array that is the composition of partially applied arguments,\n * placeholders, and provided arguments into a single array of arguments.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to prepend to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgs(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersLength = holders.length,\n      leftIndex = -1,\n      leftLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(leftLength + rangeLength),\n      isUncurried = !isCurried;\n\n  while (++leftIndex < leftLength) {\n    result[leftIndex] = partials[leftIndex];\n  }\n  while (++argsIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[holders[argsIndex]] = args[argsIndex];\n    }\n  }\n  while (rangeLength--) {\n    result[leftIndex++] = args[argsIndex++];\n  }\n  return result;\n}\n\nexport default composeArgs;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This function is like `composeArgs` except that the arguments composition\n * is tailored for `_.partialRight`.\n *\n * @private\n * @param {Array} args The provided arguments.\n * @param {Array} partials The arguments to append to those provided.\n * @param {Array} holders The `partials` placeholder indexes.\n * @params {boolean} [isCurried] Specify composing for a curried function.\n * @returns {Array} Returns the new array of composed arguments.\n */\nfunction composeArgsRight(args, partials, holders, isCurried) {\n  var argsIndex = -1,\n      argsLength = args.length,\n      holdersIndex = -1,\n      holdersLength = holders.length,\n      rightIndex = -1,\n      rightLength = partials.length,\n      rangeLength = nativeMax(argsLength - holdersLength, 0),\n      result = Array(rangeLength + rightLength),\n      isUncurried = !isCurried;\n\n  while (++argsIndex < rangeLength) {\n    result[argsIndex] = args[argsIndex];\n  }\n  var offset = argsIndex;\n  while (++rightIndex < rightLength) {\n    result[offset + rightIndex] = partials[rightIndex];\n  }\n  while (++holdersIndex < holdersLength) {\n    if (isUncurried || argsIndex < argsLength) {\n      result[offset + holders[holdersIndex]] = args[argsIndex++];\n    }\n  }\n  return result;\n}\n\nexport default composeArgsRight;\n", "/**\n * Gets the number of `placeholder` occurrences in `array`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} placeholder The placeholder to search for.\n * @returns {number} Returns the placeholder count.\n */\nfunction countHolders(array, placeholder) {\n  var length = array.length,\n      result = 0;\n\n  while (length--) {\n    if (array[length] === placeholder) {\n      ++result;\n    }\n  }\n  return result;\n}\n\nexport default countHolders;\n", "/**\n * The function whose prototype chain sequence wrappers inherit from.\n *\n * @private\n */\nfunction baseLodash() {\n  // No operation performed.\n}\n\nexport default baseLodash;\n", "import baseCreate from './_baseCreate.js';\nimport baseLodash from './_baseLodash.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Creates a lazy wrapper object which wraps `value` to enable lazy evaluation.\n *\n * @private\n * @constructor\n * @param {*} value The value to wrap.\n */\nfunction LazyWrapper(value) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__dir__ = 1;\n  this.__filtered__ = false;\n  this.__iteratees__ = [];\n  this.__takeCount__ = MAX_ARRAY_LENGTH;\n  this.__views__ = [];\n}\n\n// Ensure `LazyWrapper` is an instance of `baseLodash`.\nLazyWrapper.prototype = baseCreate(baseLodash.prototype);\nLazyWrapper.prototype.constructor = LazyWrapper;\n\nexport default LazyWrapper;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n", "import metaMap from './_metaMap.js';\nimport noop from './noop.js';\n\n/**\n * Gets metadata for `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {*} Returns the metadata for `func`.\n */\nvar getData = !metaMap ? noop : function(func) {\n  return metaMap.get(func);\n};\n\nexport default getData;\n", "/** Used to lookup unminified function names. */\nvar realNames = {};\n\nexport default realNames;\n", "import realNames from './_realNames.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the name of `func`.\n *\n * @private\n * @param {Function} func The function to query.\n * @returns {string} Returns the function name.\n */\nfunction getFuncName(func) {\n  var result = (func.name + ''),\n      array = realNames[result],\n      length = hasOwnProperty.call(realNames, result) ? array.length : 0;\n\n  while (length--) {\n    var data = array[length],\n        otherFunc = data.func;\n    if (otherFunc == null || otherFunc == func) {\n      return data.name;\n    }\n  }\n  return result;\n}\n\nexport default getFuncName;\n", "import baseCreate from './_baseCreate.js';\nimport baseLodash from './_baseLodash.js';\n\n/**\n * The base constructor for creating `lodash` wrapper objects.\n *\n * @private\n * @param {*} value The value to wrap.\n * @param {boolean} [chainAll] Enable explicit method chain sequences.\n */\nfunction LodashWrapper(value, chainAll) {\n  this.__wrapped__ = value;\n  this.__actions__ = [];\n  this.__chain__ = !!chainAll;\n  this.__index__ = 0;\n  this.__values__ = undefined;\n}\n\nLodashWrapper.prototype = baseCreate(baseLodash.prototype);\nLodashWrapper.prototype.constructor = LodashWrapper;\n\nexport default LodashWrapper;\n", "/**\n * Copies the values of `source` to `array`.\n *\n * @private\n * @param {Array} source The array to copy values from.\n * @param {Array} [array=[]] The array to copy values to.\n * @returns {Array} Returns `array`.\n */\nfunction copyArray(source, array) {\n  var index = -1,\n      length = source.length;\n\n  array || (array = Array(length));\n  while (++index < length) {\n    array[index] = source[index];\n  }\n  return array;\n}\n\nexport default copyArray;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport copyArray from './_copyArray.js';\n\n/**\n * Creates a clone of `wrapper`.\n *\n * @private\n * @param {Object} wrapper The wrapper to clone.\n * @returns {Object} Returns the cloned wrapper.\n */\nfunction wrapperClone(wrapper) {\n  if (wrapper instanceof LazyWrapper) {\n    return wrapper.clone();\n  }\n  var result = new LodashWrapper(wrapper.__wrapped__, wrapper.__chain__);\n  result.__actions__ = copyArray(wrapper.__actions__);\n  result.__index__  = wrapper.__index__;\n  result.__values__ = wrapper.__values__;\n  return result;\n}\n\nexport default wrapperClone;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport baseLodash from './_baseLodash.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\nimport wrapperClone from './_wrapperClone.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a `lodash` object which wraps `value` to enable implicit method\n * chain sequences. Methods that operate on and return arrays, collections,\n * and functions can be chained together. Methods that retrieve a single value\n * or may return a primitive value will automatically end the chain sequence\n * and return the unwrapped value. Otherwise, the value must be unwrapped\n * with `_#value`.\n *\n * Explicit chain sequences, which must be unwrapped with `_#value`, may be\n * enabled using `_.chain`.\n *\n * The execution of chained methods is lazy, that is, it's deferred until\n * `_#value` is implicitly or explicitly called.\n *\n * Lazy evaluation allows several methods to support shortcut fusion.\n * Shortcut fusion is an optimization to merge iteratee calls; this avoids\n * the creation of intermediate arrays and can greatly reduce the number of\n * iteratee executions. Sections of a chain sequence qualify for shortcut\n * fusion if the section is applied to an array and iteratees accept only\n * one argument. The heuristic for whether a section qualifies for shortcut\n * fusion is subject to change.\n *\n * Chaining is supported in custom builds as long as the `_#value` method is\n * directly or indirectly included in the build.\n *\n * In addition to lodash methods, wrappers have `Array` and `String` methods.\n *\n * The wrapper `Array` methods are:\n * `concat`, `join`, `pop`, `push`, `shift`, `sort`, `splice`, and `unshift`\n *\n * The wrapper `String` methods are:\n * `replace` and `split`\n *\n * The wrapper methods that support shortcut fusion are:\n * `at`, `compact`, `drop`, `dropRight`, `dropWhile`, `filter`, `find`,\n * `findLast`, `head`, `initial`, `last`, `map`, `reject`, `reverse`, `slice`,\n * `tail`, `take`, `takeRight`, `takeRightWhile`, `takeWhile`, and `toArray`\n *\n * The chainable wrapper methods are:\n * `after`, `ary`, `assign`, `assignIn`, `assignInWith`, `assignWith`, `at`,\n * `before`, `bind`, `bindAll`, `bindKey`, `castArray`, `chain`, `chunk`,\n * `commit`, `compact`, `concat`, `conforms`, `constant`, `countBy`, `create`,\n * `curry`, `debounce`, `defaults`, `defaultsDeep`, `defer`, `delay`,\n * `difference`, `differenceBy`, `differenceWith`, `drop`, `dropRight`,\n * `dropRightWhile`, `dropWhile`, `extend`, `extendWith`, `fill`, `filter`,\n * `flatMap`, `flatMapDeep`, `flatMapDepth`, `flatten`, `flattenDeep`,\n * `flattenDepth`, `flip`, `flow`, `flowRight`, `fromPairs`, `functions`,\n * `functionsIn`, `groupBy`, `initial`, `intersection`, `intersectionBy`,\n * `intersectionWith`, `invert`, `invertBy`, `invokeMap`, `iteratee`, `keyBy`,\n * `keys`, `keysIn`, `map`, `mapKeys`, `mapValues`, `matches`, `matchesProperty`,\n * `memoize`, `merge`, `mergeWith`, `method`, `methodOf`, `mixin`, `negate`,\n * `nthArg`, `omit`, `omitBy`, `once`, `orderBy`, `over`, `overArgs`,\n * `overEvery`, `overSome`, `partial`, `partialRight`, `partition`, `pick`,\n * `pickBy`, `plant`, `property`, `propertyOf`, `pull`, `pullAll`, `pullAllBy`,\n * `pullAllWith`, `pullAt`, `push`, `range`, `rangeRight`, `rearg`, `reject`,\n * `remove`, `rest`, `reverse`, `sampleSize`, `set`, `setWith`, `shuffle`,\n * `slice`, `sort`, `sortBy`, `splice`, `spread`, `tail`, `take`, `takeRight`,\n * `takeRightWhile`, `takeWhile`, `tap`, `throttle`, `thru`, `toArray`,\n * `toPairs`, `toPairsIn`, `toPath`, `toPlainObject`, `transform`, `unary`,\n * `union`, `unionBy`, `unionWith`, `uniq`, `uniqBy`, `uniqWith`, `unset`,\n * `unshift`, `unzip`, `unzipWith`, `update`, `updateWith`, `values`,\n * `valuesIn`, `without`, `wrap`, `xor`, `xorBy`, `xorWith`, `zip`,\n * `zipObject`, `zipObjectDeep`, and `zipWith`\n *\n * The wrapper methods that are **not** chainable by default are:\n * `add`, `attempt`, `camelCase`, `capitalize`, `ceil`, `clamp`, `clone`,\n * `cloneDeep`, `cloneDeepWith`, `cloneWith`, `conformsTo`, `deburr`,\n * `defaultTo`, `divide`, `each`, `eachRight`, `endsWith`, `eq`, `escape`,\n * `escapeRegExp`, `every`, `find`, `findIndex`, `findKey`, `findLast`,\n * `findLastIndex`, `findLastKey`, `first`, `floor`, `forEach`, `forEachRight`,\n * `forIn`, `forInRight`, `forOwn`, `forOwnRight`, `get`, `gt`, `gte`, `has`,\n * `hasIn`, `head`, `identity`, `includes`, `indexOf`, `inRange`, `invoke`,\n * `isArguments`, `isArray`, `isArrayBuffer`, `isArrayLike`, `isArrayLikeObject`,\n * `isBoolean`, `isBuffer`, `isDate`, `isElement`, `isEmpty`, `isEqual`,\n * `isEqualWith`, `isError`, `isFinite`, `isFunction`, `isInteger`, `isLength`,\n * `isMap`, `isMatch`, `isMatchWith`, `isNaN`, `isNative`, `isNil`, `isNull`,\n * `isNumber`, `isObject`, `isObjectLike`, `isPlainObject`, `isRegExp`,\n * `isSafeInteger`, `isSet`, `isString`, `isUndefined`, `isTypedArray`,\n * `isWeakMap`, `isWeakSet`, `join`, `kebabCase`, `last`, `lastIndexOf`,\n * `lowerCase`, `lowerFirst`, `lt`, `lte`, `max`, `maxBy`, `mean`, `meanBy`,\n * `min`, `minBy`, `multiply`, `noConflict`, `noop`, `now`, `nth`, `pad`,\n * `padEnd`, `padStart`, `parseInt`, `pop`, `random`, `reduce`, `reduceRight`,\n * `repeat`, `result`, `round`, `runInContext`, `sample`, `shift`, `size`,\n * `snakeCase`, `some`, `sortedIndex`, `sortedIndexBy`, `sortedLastIndex`,\n * `sortedLastIndexBy`, `startCase`, `startsWith`, `stubArray`, `stubFalse`,\n * `stubObject`, `stubString`, `stubTrue`, `subtract`, `sum`, `sumBy`,\n * `template`, `times`, `toFinite`, `toInteger`, `toJSON`, `toLength`,\n * `toLower`, `toNumber`, `toSafeInteger`, `toString`, `toUpper`, `trim`,\n * `trimEnd`, `trimStart`, `truncate`, `unescape`, `uniqueId`, `upperCase`,\n * `upperFirst`, `value`, and `words`\n *\n * @name _\n * @constructor\n * @category Seq\n * @param {*} value The value to wrap in a `lodash` instance.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2, 3]);\n *\n * // Returns an unwrapped value.\n * wrapped.reduce(_.add);\n * // => 6\n *\n * // Returns a wrapped value.\n * var squares = wrapped.map(square);\n *\n * _.isArray(squares);\n * // => false\n *\n * _.isArray(squares.value());\n * // => true\n */\nfunction lodash(value) {\n  if (isObjectLike(value) && !isArray(value) && !(value instanceof LazyWrapper)) {\n    if (value instanceof LodashWrapper) {\n      return value;\n    }\n    if (hasOwnProperty.call(value, '__wrapped__')) {\n      return wrapperClone(value);\n    }\n  }\n  return new LodashWrapper(value);\n}\n\n// Ensure wrappers are instances of `baseLodash`.\nlodash.prototype = baseLodash.prototype;\nlodash.prototype.constructor = lodash;\n\nexport default lodash;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport getData from './_getData.js';\nimport getFuncName from './_getFuncName.js';\nimport lodash from './wrapperLodash.js';\n\n/**\n * Checks if `func` has a lazy counterpart.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` has a lazy counterpart,\n *  else `false`.\n */\nfunction isLaziable(func) {\n  var funcName = getFuncName(func),\n      other = lodash[funcName];\n\n  if (typeof other != 'function' || !(funcName in LazyWrapper.prototype)) {\n    return false;\n  }\n  if (func === other) {\n    return true;\n  }\n  var data = getData(other);\n  return !!data && func === data[0];\n}\n\nexport default isLaziable;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nexport default shortOut;\n", "import baseSetData from './_baseSetData.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets metadata for `func`.\n *\n * **Note:** If this function becomes hot, i.e. is invoked a lot in a short\n * period of time, it will trip its breaker and transition to an identity\n * function to avoid garbage collection pauses in V8. See\n * [V8 issue 2070](https://bugs.chromium.org/p/v8/issues/detail?id=2070)\n * for more details.\n *\n * @private\n * @param {Function} func The function to associate metadata with.\n * @param {*} data The metadata.\n * @returns {Function} Returns `func`.\n */\nvar setData = shortOut(baseSetData);\n\nexport default setData;\n", "/** Used to match wrap detail comments. */\nvar reWrapDetails = /\\{\\n\\/\\* \\[wrapped with (.+)\\] \\*/,\n    reSplitDetails = /,? & /;\n\n/**\n * Extracts wrapper details from the `source` body comment.\n *\n * @private\n * @param {string} source The source to inspect.\n * @returns {Array} Returns the wrapper details.\n */\nfunction getWrapDetails(source) {\n  var match = source.match(reWrapDetails);\n  return match ? match[1].split(reSplitDetails) : [];\n}\n\nexport default getWrapDetails;\n", "/** Used to match wrap detail comments. */\nvar reWrapComment = /\\{(?:\\n\\/\\* \\[wrapped with .+\\] \\*\\/)?\\n?/;\n\n/**\n * Inserts wrapper `details` in a comment at the top of the `source` body.\n *\n * @private\n * @param {string} source The source to modify.\n * @returns {Array} details The details to insert.\n * @returns {string} Returns the modified source.\n */\nfunction insertWrapDetails(source, details) {\n  var length = details.length;\n  if (!length) {\n    return source;\n  }\n  var lastIndex = length - 1;\n  details[lastIndex] = (length > 1 ? '& ' : '') + details[lastIndex];\n  details = details.join(length > 2 ? ', ' : ' ');\n  return source.replace(reWrapComment, '{\\n/* [wrapped with ' + details + '] */\\n');\n}\n\nexport default insertWrapDetails;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nexport default constant;\n", "import getNative from './_getNative.js';\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nexport default defineProperty;\n", "import constant from './constant.js';\nimport defineProperty from './_defineProperty.js';\nimport identity from './identity.js';\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nexport default baseSetToString;\n", "import baseSetToString from './_baseSetToString.js';\nimport shortOut from './_shortOut.js';\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nexport default setToString;\n", "/**\n * A specialized version of `_.forEach` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEach(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (iteratee(array[index], index, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEach;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseFindIndex;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nexport default baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default strictIndexOf;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictIndexOf from './_strictIndexOf.js';\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nexport default baseIndexOf;\n", "import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nexport default arrayIncludes;\n", "import arrayEach from './_arrayEach.js';\nimport arrayIncludes from './_arrayIncludes.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256,\n    WRAP_FLIP_FLAG = 512;\n\n/** Used to associate wrap methods with their bit flags. */\nvar wrapFlags = [\n  ['ary', WRAP_ARY_FLAG],\n  ['bind', WRAP_BIND_FLAG],\n  ['bindKey', WRAP_BIND_KEY_FLAG],\n  ['curry', WRAP_CURRY_FLAG],\n  ['curryRight', WRAP_CURRY_RIGHT_FLAG],\n  ['flip', WRAP_FLIP_FLAG],\n  ['partial', WRAP_PARTIAL_FLAG],\n  ['partialRight', WRAP_PARTIAL_RIGHT_FLAG],\n  ['rearg', WRAP_REARG_FLAG]\n];\n\n/**\n * Updates wrapper `details` based on `bitmask` flags.\n *\n * @private\n * @returns {Array} details The details to modify.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Array} Returns `details`.\n */\nfunction updateWrapDetails(details, bitmask) {\n  arrayEach(wrapFlags, function(pair) {\n    var value = '_.' + pair[0];\n    if ((bitmask & pair[1]) && !arrayIncludes(details, value)) {\n      details.push(value);\n    }\n  });\n  return details.sort();\n}\n\nexport default updateWrapDetails;\n", "import getWrapDetails from './_getWrapDetails.js';\nimport insertWrapDetails from './_insertWrapDetails.js';\nimport setToString from './_setToString.js';\nimport updateWrapDetails from './_updateWrapDetails.js';\n\n/**\n * Sets the `toString` method of `wrapper` to mimic the source of `reference`\n * with wrapper details in a comment at the top of the source body.\n *\n * @private\n * @param {Function} wrapper The function to modify.\n * @param {Function} reference The reference function.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @returns {Function} Returns `wrapper`.\n */\nfunction setWrapToString(wrapper, reference, bitmask) {\n  var source = (reference + '');\n  return setToString(wrapper, insertWrapDetails(source, updateWrapDetails(getWrapDetails(source), bitmask)));\n}\n\nexport default setWrapToString;\n", "import isLaziable from './_isLaziable.js';\nimport setData from './_setData.js';\nimport setWrapToString from './_setWrapToString.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * Creates a function that wraps `func` to continue currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {Function} wrapFunc The function to create the `func` wrapper.\n * @param {*} placeholder The placeholder value.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createRecurry(func, bitmask, wrapFunc, placeholder, thisArg, partials, holders, argPos, ary, arity) {\n  var isCurry = bitmask & WRAP_CURRY_FLAG,\n      newHolders = isCurry ? holders : undefined,\n      newHoldersRight = isCurry ? undefined : holders,\n      newPartials = isCurry ? partials : undefined,\n      newPartialsRight = isCurry ? undefined : partials;\n\n  bitmask |= (isCurry ? WRAP_PARTIAL_FLAG : WRAP_PARTIAL_RIGHT_FLAG);\n  bitmask &= ~(isCurry ? WRAP_PARTIAL_RIGHT_FLAG : WRAP_PARTIAL_FLAG);\n\n  if (!(bitmask & WRAP_CURRY_BOUND_FLAG)) {\n    bitmask &= ~(WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG);\n  }\n  var newData = [\n    func, bitmask, thisArg, newPartials, newHolders, newPartialsRight,\n    newHoldersRight, argPos, ary, arity\n  ];\n\n  var result = wrapFunc.apply(undefined, newData);\n  if (isLaziable(func)) {\n    setData(result, newData);\n  }\n  result.placeholder = placeholder;\n  return setWrapToString(result, func, bitmask);\n}\n\nexport default createRecurry;\n", "/**\n * Gets the argument placeholder value for `func`.\n *\n * @private\n * @param {Function} func The function to inspect.\n * @returns {*} Returns the placeholder value.\n */\nfunction getHolder(func) {\n  var object = func;\n  return object.placeholder;\n}\n\nexport default getHolder;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n", "import copyArray from './_copyArray.js';\nimport isIndex from './_isIndex.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Reorder `array` according to the specified indexes where the element at\n * the first index is assigned as the first element, the element at\n * the second index is assigned as the second element, and so on.\n *\n * @private\n * @param {Array} array The array to reorder.\n * @param {Array} indexes The arranged array indexes.\n * @returns {Array} Returns `array`.\n */\nfunction reorder(array, indexes) {\n  var arrLength = array.length,\n      length = nativeMin(indexes.length, arrLength),\n      oldArray = copyArray(array);\n\n  while (length--) {\n    var index = indexes[length];\n    array[length] = isIndex(index, arrLength) ? oldArray[index] : undefined;\n  }\n  return array;\n}\n\nexport default reorder;\n", "/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/**\n * Replaces all `placeholder` elements in `array` with an internal placeholder\n * and returns an array of their indexes.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {*} placeholder The placeholder to replace.\n * @returns {Array} Returns the new array of placeholder indexes.\n */\nfunction replaceHolders(array, placeholder) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value === placeholder || value === PLACEHOLDER) {\n      array[index] = PLACEHOLDER;\n      result[resIndex++] = index;\n    }\n  }\n  return result;\n}\n\nexport default replaceHolders;\n", "import composeArgs from './_composeArgs.js';\nimport composeArgsRight from './_composeArgsRight.js';\nimport countHolders from './_countHolders.js';\nimport createCtor from './_createCtor.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport reorder from './_reorder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_ARY_FLAG = 128,\n    WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that wraps `func` to invoke it with optional `this`\n * binding of `thisArg`, partial application, and currying.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to prepend to those provided to\n *  the new function.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [partialsRight] The arguments to append to those provided\n *  to the new function.\n * @param {Array} [holdersRight] The `partialsRight` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createHybrid(func, bitmask, thisArg, partials, holders, partialsRight, holdersRight, argPos, ary, arity) {\n  var isAry = bitmask & WRAP_ARY_FLAG,\n      isBind = bitmask & WRAP_BIND_FLAG,\n      isBindKey = bitmask & WRAP_BIND_KEY_FLAG,\n      isCurried = bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG),\n      isFlip = bitmask & WRAP_FLIP_FLAG,\n      Ctor = isBindKey ? undefined : createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length;\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    if (isCurried) {\n      var placeholder = getHolder(wrapper),\n          holdersCount = countHolders(args, placeholder);\n    }\n    if (partials) {\n      args = composeArgs(args, partials, holders, isCurried);\n    }\n    if (partialsRight) {\n      args = composeArgsRight(args, partialsRight, holdersRight, isCurried);\n    }\n    length -= holdersCount;\n    if (isCurried && length < arity) {\n      var newHolders = replaceHolders(args, placeholder);\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, thisArg,\n        args, newHolders, argPos, ary, arity - length\n      );\n    }\n    var thisBinding = isBind ? thisArg : this,\n        fn = isBindKey ? thisBinding[func] : func;\n\n    length = args.length;\n    if (argPos) {\n      args = reorder(args, argPos);\n    } else if (isFlip && length > 1) {\n      args.reverse();\n    }\n    if (isAry && ary < length) {\n      args.length = ary;\n    }\n    if (this && this !== root && this instanceof wrapper) {\n      fn = Ctor || createCtor(fn);\n    }\n    return fn.apply(thisBinding, args);\n  }\n  return wrapper;\n}\n\nexport default createHybrid;\n", "import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport createHybrid from './_createHybrid.js';\nimport createRecurry from './_createRecurry.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\nimport root from './_root.js';\n\n/**\n * Creates a function that wraps `func` to enable currying.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {number} arity The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createCurry(func, bitmask, arity) {\n  var Ctor = createCtor(func);\n\n  function wrapper() {\n    var length = arguments.length,\n        args = Array(length),\n        index = length,\n        placeholder = getHolder(wrapper);\n\n    while (index--) {\n      args[index] = arguments[index];\n    }\n    var holders = (length < 3 && args[0] !== placeholder && args[length - 1] !== placeholder)\n      ? []\n      : replaceHolders(args, placeholder);\n\n    length -= holders.length;\n    if (length < arity) {\n      return createRecurry(\n        func, bitmask, createHybrid, wrapper.placeholder, undefined,\n        args, holders, undefined, undefined, arity - length);\n    }\n    var fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n    return apply(fn, this, args);\n  }\n  return wrapper;\n}\n\nexport default createCurry;\n", "import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nexport default createPartial;\n", "import composeArgs from './_composeArgs.js';\nimport composeArgsRight from './_composeArgsRight.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used as the internal argument placeholder. */\nvar PLACEHOLDER = '__lodash_placeholder__';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_BOUND_FLAG = 4,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Merges the function metadata of `source` into `data`.\n *\n * Merging metadata reduces the number of wrappers used to invoke a function.\n * This is possible because methods like `_.bind`, `_.curry`, and `_.partial`\n * may be applied regardless of execution order. Methods like `_.ary` and\n * `_.rearg` modify function arguments, making the order in which they are\n * executed important, preventing the merging of metadata. However, we make\n * an exception for a safe combined case where curried functions have `_.ary`\n * and or `_.rearg` applied.\n *\n * @private\n * @param {Array} data The destination metadata.\n * @param {Array} source The source metadata.\n * @returns {Array} Returns `data`.\n */\nfunction mergeData(data, source) {\n  var bitmask = data[1],\n      srcBitmask = source[1],\n      newBitmask = bitmask | srcBitmask,\n      isCommon = newBitmask < (WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG | WRAP_ARY_FLAG);\n\n  var isCombo =\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_CURRY_FLAG)) ||\n    ((srcBitmask == WRAP_ARY_FLAG) && (bitmask == WRAP_REARG_FLAG) && (data[7].length <= source[8])) ||\n    ((srcBitmask == (WRAP_ARY_FLAG | WRAP_REARG_FLAG)) && (source[7].length <= source[8]) && (bitmask == WRAP_CURRY_FLAG));\n\n  // Exit early if metadata can't be merged.\n  if (!(isCommon || isCombo)) {\n    return data;\n  }\n  // Use source `thisArg` if available.\n  if (srcBitmask & WRAP_BIND_FLAG) {\n    data[2] = source[2];\n    // Set when currying a bound function.\n    newBitmask |= bitmask & WRAP_BIND_FLAG ? 0 : WRAP_CURRY_BOUND_FLAG;\n  }\n  // Compose partial arguments.\n  var value = source[3];\n  if (value) {\n    var partials = data[3];\n    data[3] = partials ? composeArgs(partials, value, source[4]) : value;\n    data[4] = partials ? replaceHolders(data[3], PLACEHOLDER) : source[4];\n  }\n  // Compose partial right arguments.\n  value = source[5];\n  if (value) {\n    partials = data[5];\n    data[5] = partials ? composeArgsRight(partials, value, source[6]) : value;\n    data[6] = partials ? replaceHolders(data[5], PLACEHOLDER) : source[6];\n  }\n  // Use source `argPos` if available.\n  value = source[7];\n  if (value) {\n    data[7] = value;\n  }\n  // Use source `ary` if it's smaller.\n  if (srcBitmask & WRAP_ARY_FLAG) {\n    data[8] = data[8] == null ? source[8] : nativeMin(data[8], source[8]);\n  }\n  // Use source `arity` if one is not provided.\n  if (data[9] == null) {\n    data[9] = source[9];\n  }\n  // Use source `func` and merge bitmasks.\n  data[0] = source[0];\n  data[1] = newBitmask;\n\n  return data;\n}\n\nexport default mergeData;\n", "import baseSetData from './_baseSetData.js';\nimport createBind from './_createBind.js';\nimport createCurry from './_createCurry.js';\nimport createHybrid from './_createHybrid.js';\nimport createPartial from './_createPartial.js';\nimport getData from './_getData.js';\nimport mergeData from './_mergeData.js';\nimport setData from './_setData.js';\nimport setWrapToString from './_setWrapToString.js';\nimport toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_CURRY_FLAG = 8,\n    WRAP_CURRY_RIGHT_FLAG = 16,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that either curries or invokes `func` with optional\n * `this` binding and partially applied arguments.\n *\n * @private\n * @param {Function|string} func The function or method name to wrap.\n * @param {number} bitmask The bitmask flags.\n *    1 - `_.bind`\n *    2 - `_.bindKey`\n *    4 - `_.curry` or `_.curryRight` of a bound function\n *    8 - `_.curry`\n *   16 - `_.curryRight`\n *   32 - `_.partial`\n *   64 - `_.partialRight`\n *  128 - `_.rearg`\n *  256 - `_.ary`\n *  512 - `_.flip`\n * @param {*} [thisArg] The `this` binding of `func`.\n * @param {Array} [partials] The arguments to be partially applied.\n * @param {Array} [holders] The `partials` placeholder indexes.\n * @param {Array} [argPos] The argument positions of the new function.\n * @param {number} [ary] The arity cap of `func`.\n * @param {number} [arity] The arity of `func`.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createWrap(func, bitmask, thisArg, partials, holders, argPos, ary, arity) {\n  var isBindKey = bitmask & WRAP_BIND_KEY_FLAG;\n  if (!isBindKey && typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var length = partials ? partials.length : 0;\n  if (!length) {\n    bitmask &= ~(WRAP_PARTIAL_FLAG | WRAP_PARTIAL_RIGHT_FLAG);\n    partials = holders = undefined;\n  }\n  ary = ary === undefined ? ary : nativeMax(toInteger(ary), 0);\n  arity = arity === undefined ? arity : toInteger(arity);\n  length -= holders ? holders.length : 0;\n\n  if (bitmask & WRAP_PARTIAL_RIGHT_FLAG) {\n    var partialsRight = partials,\n        holdersRight = holders;\n\n    partials = holders = undefined;\n  }\n  var data = isBindKey ? undefined : getData(func);\n\n  var newData = [\n    func, bitmask, thisArg, partials, holders, partialsRight, holdersRight,\n    argPos, ary, arity\n  ];\n\n  if (data) {\n    mergeData(newData, data);\n  }\n  func = newData[0];\n  bitmask = newData[1];\n  thisArg = newData[2];\n  partials = newData[3];\n  holders = newData[4];\n  arity = newData[9] = newData[9] === undefined\n    ? (isBindKey ? 0 : func.length)\n    : nativeMax(newData[9] - length, 0);\n\n  if (!arity && bitmask & (WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG)) {\n    bitmask &= ~(WRAP_CURRY_FLAG | WRAP_CURRY_RIGHT_FLAG);\n  }\n  if (!bitmask || bitmask == WRAP_BIND_FLAG) {\n    var result = createBind(func, bitmask, thisArg);\n  } else if (bitmask == WRAP_CURRY_FLAG || bitmask == WRAP_CURRY_RIGHT_FLAG) {\n    result = createCurry(func, bitmask, arity);\n  } else if ((bitmask == WRAP_PARTIAL_FLAG || bitmask == (WRAP_BIND_FLAG | WRAP_PARTIAL_FLAG)) && !holders.length) {\n    result = createPartial(func, bitmask, thisArg, partials);\n  } else {\n    result = createHybrid.apply(undefined, newData);\n  }\n  var setter = data ? baseSetData : setData;\n  return setWrapToString(setter(result, newData), func, bitmask);\n}\n\nexport default createWrap;\n", "import createWrap from './_createWrap.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_ARY_FLAG = 128;\n\n/**\n * Creates a function that invokes `func`, with up to `n` arguments,\n * ignoring any additional arguments.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @param {number} [n=func.length] The arity cap.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.ary(parseInt, 1));\n * // => [6, 8, 10]\n */\nfunction ary(func, n, guard) {\n  n = guard ? undefined : n;\n  n = (func && n == null) ? func.length : n;\n  return createWrap(func, WRAP_ARY_FLAG, undefined, undefined, undefined, undefined, n);\n}\n\nexport default ary;\n", "import defineProperty from './_defineProperty.js';\n\n/**\n * The base implementation of `assignValue` and `assignMergeValue` without\n * value checks.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction baseAssignValue(object, key, value) {\n  if (key == '__proto__' && defineProperty) {\n    defineProperty(object, key, {\n      'configurable': true,\n      'enumerable': true,\n      'value': value,\n      'writable': true\n    });\n  } else {\n    object[key] = value;\n  }\n}\n\nexport default baseAssignValue;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nexport default eq;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns `value` to `key` of `object` if the existing value is not equivalent\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignValue(object, key, value) {\n  var objValue = object[key];\n  if (!(hasOwnProperty.call(object, key) && eq(objValue, value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignValue;\n", "import assignValue from './_assignValue.js';\nimport baseAssignValue from './_baseAssignValue.js';\n\n/**\n * Copies properties of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy properties from.\n * @param {Array} props The property identifiers to copy.\n * @param {Object} [object={}] The object to copy properties to.\n * @param {Function} [customizer] The function to customize copied values.\n * @returns {Object} Returns `object`.\n */\nfunction copyObject(source, props, object, customizer) {\n  var isNew = !object;\n  object || (object = {});\n\n  var index = -1,\n      length = props.length;\n\n  while (++index < length) {\n    var key = props[index];\n\n    var newValue = customizer\n      ? customizer(object[key], source[key], key, object, source)\n      : undefined;\n\n    if (newValue === undefined) {\n      newValue = source[key];\n    }\n    if (isNew) {\n      baseAssignValue(object, key, newValue);\n    } else {\n      assignValue(object, key, newValue);\n    }\n  }\n  return object;\n}\n\nexport default copyObject;\n", "import apply from './_apply.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nexport default overRest;\n", "import identity from './identity.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nexport default baseRest;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n", "import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n", "import eq from './eq.js';\nimport isArrayLike from './isArrayLike.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\nexport default isIterateeCall;\n", "import baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates a function like `_.assign`.\n *\n * @private\n * @param {Function} assigner The function to assign values.\n * @returns {Function} Returns the new assigner function.\n */\nfunction createAssigner(assigner) {\n  return baseRest(function(object, sources) {\n    var index = -1,\n        length = sources.length,\n        customizer = length > 1 ? sources[length - 1] : undefined,\n        guard = length > 2 ? sources[2] : undefined;\n\n    customizer = (assigner.length > 3 && typeof customizer == 'function')\n      ? (length--, customizer)\n      : undefined;\n\n    if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n      customizer = length < 3 ? undefined : customizer;\n      length = 1;\n    }\n    object = Object(object);\n    while (++index < length) {\n      var source = sources[index];\n      if (source) {\n        assigner(object, source, index, customizer);\n      }\n    }\n    return object;\n  });\n}\n\nexport default createAssigner;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n", "import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n", "import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n", "import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n", "import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n", "import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n", "import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n", "import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n", "import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n", "import assignValue from './_assignValue.js';\nimport copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport isArrayLike from './isArrayLike.js';\nimport isPrototype from './_isPrototype.js';\nimport keys from './keys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own enumerable string keyed properties of source objects to the\n * destination object. Source objects are applied from left to right.\n * Subsequent sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object` and is loosely based on\n * [`Object.assign`](https://mdn.io/Object/assign).\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assignIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assign({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'c': 3 }\n */\nvar assign = createAssigner(function(object, source) {\n  if (isPrototype(source) || isArrayLike(source)) {\n    copyObject(source, keys(source), object);\n    return;\n  }\n  for (var key in source) {\n    if (hasOwnProperty.call(source, key)) {\n      assignValue(object, key, source[key]);\n    }\n  }\n});\n\nexport default assign;\n", "/**\n * This function is like\n * [`Object.keys`](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * except that it includes inherited enumerable properties.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction nativeKeysIn(object) {\n  var result = [];\n  if (object != null) {\n    for (var key in Object(object)) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default nativeKeysIn;\n", "import isObject from './isObject.js';\nimport isPrototype from './_isPrototype.js';\nimport nativeKeysIn from './_nativeKeysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keysIn` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeysIn(object) {\n  if (!isObject(object)) {\n    return nativeKeysIn(object);\n  }\n  var isProto = isPrototype(object),\n      result = [];\n\n  for (var key in object) {\n    if (!(key == 'constructor' && (isProto || !hasOwnProperty.call(object, key)))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeysIn;\n", "import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeysIn from './_baseKeysIn.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own and inherited enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keysIn(new Foo);\n * // => ['a', 'b', 'c'] (iteration order is not guaranteed)\n */\nfunction keysIn(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object, true) : baseKeysIn(object);\n}\n\nexport default keysIn;\n", "import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assign` except that it iterates over own and\n * inherited source properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extend\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.assign\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * function Bar() {\n *   this.c = 3;\n * }\n *\n * Foo.prototype.b = 2;\n * Bar.prototype.d = 4;\n *\n * _.assignIn({ 'a': 0 }, new Foo, new Bar);\n * // => { 'a': 1, 'b': 2, 'c': 3, 'd': 4 }\n */\nvar assignIn = createAssigner(function(object, source) {\n  copyObject(source, keysIn(source), object);\n});\n\nexport default assignIn;\n", "import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.assignIn` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias extendWith\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignInWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignInWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keysIn(source), object, customizer);\n});\n\nexport default assignInWith;\n", "import copyObject from './_copyObject.js';\nimport createAssigner from './_createAssigner.js';\nimport keys from './keys.js';\n\n/**\n * This method is like `_.assign` except that it accepts `customizer`\n * which is invoked to produce the assigned values. If `customizer` returns\n * `undefined`, assignment is handled by the method instead. The `customizer`\n * is invoked with five arguments: (objValue, srcValue, key, object, source).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @see _.assignInWith\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   return _.isUndefined(objValue) ? srcValue : objValue;\n * }\n *\n * var defaults = _.partialRight(_.assignWith, customizer);\n *\n * defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar assignWith = createAssigner(function(object, source, srcIndex, customizer) {\n  copyObject(source, keys(source), object, customizer);\n});\n\nexport default assignWith;\n", "import isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nexport default isKey;\n", "import getNative from './_getNative.js';\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nexport default nativeCreate;\n", "import nativeCreate from './_nativeCreate.js';\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nexport default hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default hashDelete;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nexport default hashGet;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nexport default hashHas;\n", "import nativeCreate from './_nativeCreate.js';\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nexport default hashSet;\n", "import hashClear from './_hashClear.js';\nimport hashDelete from './_hashDelete.js';\nimport hashGet from './_hashGet.js';\nimport hashHas from './_hashHas.js';\nimport hashSet from './_hashSet.js';\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nexport default Hash;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nexport default listCacheClear;\n", "import eq from './eq.js';\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nexport default assocIndexOf;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nexport default listCacheDelete;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nexport default listCacheGet;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nexport default listCacheHas;\n", "import assocIndexOf from './_assocIndexOf.js';\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nexport default listCacheSet;\n", "import listCacheClear from './_listCacheClear.js';\nimport listCacheDelete from './_listCacheDelete.js';\nimport listCacheGet from './_listCacheGet.js';\nimport listCacheHas from './_listCacheHas.js';\nimport listCacheSet from './_listCacheSet.js';\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nexport default ListCache;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nexport default Map;\n", "import Hash from './_Hash.js';\nimport ListCache from './_ListCache.js';\nimport Map from './_Map.js';\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nexport default mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nexport default isKeyable;\n", "import isKeyable from './_isKeyable.js';\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nexport default getMapData;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nexport default mapCacheDelete;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nexport default mapCacheGet;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nexport default mapCacheHas;\n", "import getMapData from './_getMapData.js';\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nexport default mapCacheSet;\n", "import mapCacheClear from './_mapCacheClear.js';\nimport mapCacheDelete from './_mapCacheDelete.js';\nimport mapCacheGet from './_mapCacheGet.js';\nimport mapCacheHas from './_mapCacheHas.js';\nimport mapCacheSet from './_mapCacheSet.js';\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nexport default MapCache;\n", "import MapCache from './_MapCache.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nexport default memoize;\n", "import memoize from './memoize.js';\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nexport default memoizeCapped;\n", "import memoizeCapped from './_memoizeCapped.js';\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nexport default stringToPath;\n", "import baseToString from './_baseToString.js';\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nexport default toString;\n", "import isArray from './isArray.js';\nimport isKey from './_isKey.js';\nimport stringToPath from './_stringToPath.js';\nimport toString from './toString.js';\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nexport default castPath;\n", "import isSymbol from './isSymbol.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nexport default toKey;\n", "import castPath from './_castPath.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nexport default baseGet;\n", "import baseGet from './_baseGet.js';\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nexport default get;\n", "import get from './get.js';\n\n/**\n * The base implementation of `_.at` without support for individual paths.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {string[]} paths The property paths to pick.\n * @returns {Array} Returns the picked elements.\n */\nfunction baseAt(object, paths) {\n  var index = -1,\n      length = paths.length,\n      result = Array(length),\n      skip = object == null;\n\n  while (++index < length) {\n    result[index] = skip ? undefined : get(object, paths[index]);\n  }\n  return result;\n}\n\nexport default baseAt;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nexport default arrayPush;\n", "import Symbol from './_Symbol.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nexport default isFlattenable;\n", "import arrayPush from './_arrayPush.js';\nimport isFlattenable from './_isFlattenable.js';\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nexport default baseFlatten;\n", "import baseFlatten from './_baseFlatten.js';\n\n/**\n * Flattens `array` a single level deep.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flatten([1, [2, [3, [4]], 5]]);\n * // => [1, 2, [3, [4]], 5]\n */\nfunction flatten(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, 1) : [];\n}\n\nexport default flatten;\n", "import flatten from './flatten.js';\nimport overRest from './_overRest.js';\nimport setToString from './_setToString.js';\n\n/**\n * A specialized version of `baseRest` which flattens the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nfunction flatRest(func) {\n  return setToString(overRest(func, undefined, flatten), func + '');\n}\n\nexport default flatRest;\n", "import baseAt from './_baseAt.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an array of values corresponding to `paths` of `object`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Array} Returns the picked values.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _.at(object, ['a[0].b.c', 'a[1]']);\n * // => [3, 4]\n */\nvar at = flatRest(baseAt);\n\nexport default at;\n", "import overArg from './_overArg.js';\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\nexport default getPrototype;\n", "import baseGetTag from './_baseGetTag.js';\nimport getPrototype from './_getPrototype.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) || baseGetTag(value) != objectTag) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return typeof Ctor == 'function' && Ctor instanceof Ctor &&\n    funcToString.call(Ctor) == objectCtorString;\n}\n\nexport default isPlainObject;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/** `Object#toString` result references. */\nvar domExcTag = '[object DOMException]',\n    errorTag = '[object Error]';\n\n/**\n * Checks if `value` is an `Error`, `EvalError`, `RangeError`, `ReferenceError`,\n * `SyntaxError`, `TypeError`, or `URIError` object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an error object, else `false`.\n * @example\n *\n * _.isError(new Error);\n * // => true\n *\n * _.isError(Error);\n * // => false\n */\nfunction isError(value) {\n  if (!isObjectLike(value)) {\n    return false;\n  }\n  var tag = baseGetTag(value);\n  return tag == errorTag || tag == domExcTag ||\n    (typeof value.message == 'string' && typeof value.name == 'string' && !isPlainObject(value));\n}\n\nexport default isError;\n", "import apply from './_apply.js';\nimport baseRest from './_baseRest.js';\nimport isError from './isError.js';\n\n/**\n * Attempts to invoke `func`, returning either the result or the caught error\n * object. Any additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Function} func The function to attempt.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {*} Returns the `func` result or error object.\n * @example\n *\n * // Avoid throwing errors for invalid selectors.\n * var elements = _.attempt(function(selector) {\n *   return document.querySelectorAll(selector);\n * }, '>_>');\n *\n * if (_.isError(elements)) {\n *   elements = [];\n * }\n */\nvar attempt = baseRest(function(func, args) {\n  try {\n    return apply(func, undefined, args);\n  } catch (e) {\n    return isError(e) ? e : new Error(e);\n  }\n});\n\nexport default attempt;\n", "import toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func`, with the `this` binding and arguments\n * of the created function, while it's called less than `n` times. Subsequent\n * calls to the created function return the result of the last `func` invocation.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {number} n The number of calls at which `func` is no longer invoked.\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * jQuery(element).on('click', _.before(5, addContactToList));\n * // => Allows adding up to 4 contacts to the list.\n */\nfunction before(n, func) {\n  var result;\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  n = toInteger(n);\n  return function() {\n    if (--n > 0) {\n      result = func.apply(this, arguments);\n    }\n    if (n <= 1) {\n      func = undefined;\n    }\n    return result;\n  };\n}\n\nexport default before;\n", "import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of `thisArg`\n * and `partials` prepended to the arguments it receives.\n *\n * The `_.bind.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for partially applied arguments.\n *\n * **Note:** Unlike native `Function#bind`, this method doesn't set the \"length\"\n * property of bound functions.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to bind.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * function greet(greeting, punctuation) {\n *   return greeting + ' ' + this.user + punctuation;\n * }\n *\n * var object = { 'user': 'fred' };\n *\n * var bound = _.bind(greet, object, 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bind(greet, object, _, '!');\n * bound('hi');\n * // => 'hi fred!'\n */\nvar bind = baseRest(function(func, thisArg, partials) {\n  var bitmask = WRAP_BIND_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bind));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(func, bitmask, thisArg, partials, holders);\n});\n\n// Assign default placeholders.\nbind.placeholder = {};\n\nexport default bind;\n", "import arrayEach from './_arrayEach.js';\nimport baseAssignValue from './_baseAssignValue.js';\nimport bind from './bind.js';\nimport flatRest from './_flatRest.js';\nimport toKey from './_toKey.js';\n\n/**\n * Binds methods of an object to the object itself, overwriting the existing\n * method.\n *\n * **Note:** This method doesn't set the \"length\" property of bound functions.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Object} object The object to bind and assign the bound methods to.\n * @param {...(string|string[])} methodNames The object method names to bind.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var view = {\n *   'label': 'docs',\n *   'click': function() {\n *     console.log('clicked ' + this.label);\n *   }\n * };\n *\n * _.bindAll(view, ['click']);\n * jQuery(element).on('click', view.click);\n * // => Logs 'clicked docs' when clicked.\n */\nvar bindAll = flatRest(function(object, methodNames) {\n  arrayEach(methodNames, function(key) {\n    key = toKey(key);\n    baseAssignValue(object, key, bind(object[key], object));\n  });\n  return object;\n});\n\nexport default bindAll;\n", "import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1,\n    WRAP_BIND_KEY_FLAG = 2,\n    WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes the method at `object[key]` with `partials`\n * prepended to the arguments it receives.\n *\n * This method differs from `_.bind` by allowing bound functions to reference\n * methods that may be redefined or don't yet exist. See\n * [Peter Michaux's article](http://peter.michaux.ca/articles/lazy-function-definition-pattern)\n * for more details.\n *\n * The `_.bindKey.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * @static\n * @memberOf _\n * @since 0.10.0\n * @category Function\n * @param {Object} object The object to invoke the method on.\n * @param {string} key The key of the method.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new bound function.\n * @example\n *\n * var object = {\n *   'user': 'fred',\n *   'greet': function(greeting, punctuation) {\n *     return greeting + ' ' + this.user + punctuation;\n *   }\n * };\n *\n * var bound = _.bindKey(object, 'greet', 'hi');\n * bound('!');\n * // => 'hi fred!'\n *\n * object.greet = function(greeting, punctuation) {\n *   return greeting + 'ya ' + this.user + punctuation;\n * };\n *\n * bound('!');\n * // => 'hiya fred!'\n *\n * // Bound with placeholders.\n * var bound = _.bindKey(object, 'greet', _, '!');\n * bound('hi');\n * // => 'hiya fred!'\n */\nvar bindKey = baseRest(function(object, key, partials) {\n  var bitmask = WRAP_BIND_FLAG | WRAP_BIND_KEY_FLAG;\n  if (partials.length) {\n    var holders = replaceHolders(partials, getHolder(bindKey));\n    bitmask |= WRAP_PARTIAL_FLAG;\n  }\n  return createWrap(key, bitmask, object, partials, holders);\n});\n\n// Assign default placeholders.\nbindKey.placeholder = {};\n\nexport default bindKey;\n", "/**\n * The base implementation of `_.slice` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseSlice(array, start, end) {\n  var index = -1,\n      length = array.length;\n\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = end > length ? length : end;\n  if (end < 0) {\n    end += length;\n  }\n  length = start > end ? 0 : ((end - start) >>> 0);\n  start >>>= 0;\n\n  var result = Array(length);\n  while (++index < length) {\n    result[index] = array[index + start];\n  }\n  return result;\n}\n\nexport default baseSlice;\n", "import baseSlice from './_baseSlice.js';\n\n/**\n * Casts `array` to a slice if it's needed.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {number} start The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the cast slice.\n */\nfunction castSlice(array, start, end) {\n  var length = array.length;\n  end = end === undefined ? length : end;\n  return (!start && end >= length) ? array : baseSlice(array, start, end);\n}\n\nexport default castSlice;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsZWJ = '\\\\u200d';\n\n/** Used to detect strings with [zero-width joiners or code points from the astral planes](http://eev.ee/blog/2015/09/12/dark-corners-of-unicode/). */\nvar reHasUnicode = RegExp('[' + rsZWJ + rsAstralRange  + rsComboRange + rsVarRange + ']');\n\n/**\n * Checks if `string` contains Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a symbol is found, else `false`.\n */\nfunction hasUnicode(string) {\n  return reHasUnicode.test(string);\n}\n\nexport default hasUnicode;\n", "/**\n * Converts an ASCII `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction asciiToArray(string) {\n  return string.split('');\n}\n\nexport default asciiToArray;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Converts a Unicode `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction unicodeToArray(string) {\n  return string.match(reUnicode) || [];\n}\n\nexport default unicodeToArray;\n", "import asciiToArray from './_asciiToArray.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeToArray from './_unicodeToArray.js';\n\n/**\n * Converts `string` to an array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction stringToArray(string) {\n  return hasUnicode(string)\n    ? unicodeToArray(string)\n    : asciiToArray(string);\n}\n\nexport default stringToArray;\n", "import castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Creates a function like `_.lowerFirst`.\n *\n * @private\n * @param {string} methodName The name of the `String` case method to use.\n * @returns {Function} Returns the new case function.\n */\nfunction createCaseFirst(methodName) {\n  return function(string) {\n    string = toString(string);\n\n    var strSymbols = hasUnicode(string)\n      ? stringToArray(string)\n      : undefined;\n\n    var chr = strSymbols\n      ? strSymbols[0]\n      : string.charAt(0);\n\n    var trailing = strSymbols\n      ? castSlice(strSymbols, 1).join('')\n      : string.slice(1);\n\n    return chr[methodName]() + trailing;\n  };\n}\n\nexport default createCaseFirst;\n", "import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.upperFirst('fred');\n * // => 'Fred'\n *\n * _.upperFirst('FRED');\n * // => 'FRED'\n */\nvar upperFirst = createCaseFirst('toUpperCase');\n\nexport default upperFirst;\n", "import toString from './toString.js';\nimport upperFirst from './upperFirst.js';\n\n/**\n * Converts the first character of `string` to upper case and the remaining\n * to lower case.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to capitalize.\n * @returns {string} Returns the capitalized string.\n * @example\n *\n * _.capitalize('FRED');\n * // => 'Fred'\n */\nfunction capitalize(string) {\n  return upperFirst(toString(string).toLowerCase());\n}\n\nexport default capitalize;\n", "/**\n * A specialized version of `_.reduce` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the first element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduce(array, iteratee, accumulator, initAccum) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  if (initAccum && length) {\n    accumulator = array[++index];\n  }\n  while (++index < length) {\n    accumulator = iteratee(accumulator, array[index], index, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduce;\n", "/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default basePropertyOf;\n", "import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 's'\n};\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\nexport default deburrLetter;\n", "import deburrLetter from './_deburrLetter.js';\nimport toString from './toString.js';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange;\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('d\u00E9j\u00E0 vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nexport default deburr;\n", "/** Used to match words composed of alphanumeric characters. */\nvar reAsciiWord = /[^\\x00-\\x2f\\x3a-\\x40\\x5b-\\x60\\x7b-\\x7f]+/g;\n\n/**\n * Splits an ASCII `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction asciiWords(string) {\n  return string.match(reAsciiWord) || [];\n}\n\nexport default asciiWords;\n", "/** Used to detect strings that need a more robust regexp to match words. */\nvar reHasUnicodeWord = /[a-z][A-Z]|[A-Z]{2}[a-z]|[0-9][a-zA-Z]|[a-zA-Z][0-9]|[^a-zA-Z0-9 ]/;\n\n/**\n * Checks if `string` contains a word composed of Unicode symbols.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {boolean} Returns `true` if a word is found, else `false`.\n */\nfunction hasUnicodeWord(string) {\n  return reHasUnicodeWord.test(string);\n}\n\nexport default hasUnicodeWord;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsDingbatRange = '\\\\u2700-\\\\u27bf',\n    rsLowerRange = 'a-z\\\\xdf-\\\\xf6\\\\xf8-\\\\xff',\n    rsMathOpRange = '\\\\xac\\\\xb1\\\\xd7\\\\xf7',\n    rsNonCharRange = '\\\\x00-\\\\x2f\\\\x3a-\\\\x40\\\\x5b-\\\\x60\\\\x7b-\\\\xbf',\n    rsPunctuationRange = '\\\\u2000-\\\\u206f',\n    rsSpaceRange = ' \\\\t\\\\x0b\\\\f\\\\xa0\\\\ufeff\\\\n\\\\r\\\\u2028\\\\u2029\\\\u1680\\\\u180e\\\\u2000\\\\u2001\\\\u2002\\\\u2003\\\\u2004\\\\u2005\\\\u2006\\\\u2007\\\\u2008\\\\u2009\\\\u200a\\\\u202f\\\\u205f\\\\u3000',\n    rsUpperRange = 'A-Z\\\\xc0-\\\\xd6\\\\xd8-\\\\xde',\n    rsVarRange = '\\\\ufe0e\\\\ufe0f',\n    rsBreakRange = rsMathOpRange + rsNonCharRange + rsPunctuationRange + rsSpaceRange;\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\",\n    rsBreak = '[' + rsBreakRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsDigits = '\\\\d+',\n    rsDingbat = '[' + rsDingbatRange + ']',\n    rsLower = '[' + rsLowerRange + ']',\n    rsMisc = '[^' + rsAstralRange + rsBreakRange + rsDigits + rsDingbatRange + rsLowerRange + rsUpperRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsUpper = '[' + rsUpperRange + ']',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar rsMiscLower = '(?:' + rsLower + '|' + rsMisc + ')',\n    rsMiscUpper = '(?:' + rsUpper + '|' + rsMisc + ')',\n    rsOptContrLower = '(?:' + rsApos + '(?:d|ll|m|re|s|t|ve))?',\n    rsOptContrUpper = '(?:' + rsApos + '(?:D|LL|M|RE|S|T|VE))?',\n    reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsOrdLower = '\\\\d*(?:1st|2nd|3rd|(?![123])\\\\dth)(?=\\\\b|[A-Z_])',\n    rsOrdUpper = '\\\\d*(?:1ST|2ND|3RD|(?![123])\\\\dTH)(?=\\\\b|[a-z_])',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsEmoji = '(?:' + [rsDingbat, rsRegional, rsSurrPair].join('|') + ')' + rsSeq;\n\n/** Used to match complex or compound words. */\nvar reUnicodeWord = RegExp([\n  rsUpper + '?' + rsLower + '+' + rsOptContrLower + '(?=' + [rsBreak, rsUpper, '$'].join('|') + ')',\n  rsMiscUpper + '+' + rsOptContrUpper + '(?=' + [rsBreak, rsUpper + rsMiscLower, '$'].join('|') + ')',\n  rsUpper + '?' + rsMiscLower + '+' + rsOptContrLower,\n  rsUpper + '+' + rsOptContrUpper,\n  rsOrdUpper,\n  rsOrdLower,\n  rsDigits,\n  rsEmoji\n].join('|'), 'g');\n\n/**\n * Splits a Unicode `string` into an array of its words.\n *\n * @private\n * @param {string} The string to inspect.\n * @returns {Array} Returns the words of `string`.\n */\nfunction unicodeWords(string) {\n  return string.match(reUnicodeWord) || [];\n}\n\nexport default unicodeWords;\n", "import asciiWords from './_asciiWords.js';\nimport hasUnicodeWord from './_hasUnicodeWord.js';\nimport toString from './toString.js';\nimport unicodeWords from './_unicodeWords.js';\n\n/**\n * Splits `string` into an array of its words.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {RegExp|string} [pattern] The pattern to match words.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the words of `string`.\n * @example\n *\n * _.words('fred, barney, & pebbles');\n * // => ['fred', 'barney', 'pebbles']\n *\n * _.words('fred, barney, & pebbles', /[^, ]+/g);\n * // => ['fred', 'barney', '&', 'pebbles']\n */\nfunction words(string, pattern, guard) {\n  string = toString(string);\n  pattern = guard ? undefined : pattern;\n\n  if (pattern === undefined) {\n    return hasUnicodeWord(string) ? unicodeWords(string) : asciiWords(string);\n  }\n  return string.match(pattern) || [];\n}\n\nexport default words;\n", "import arrayReduce from './_arrayReduce.js';\nimport deburr from './deburr.js';\nimport words from './words.js';\n\n/** Used to compose unicode capture groups. */\nvar rsApos = \"['\\u2019]\";\n\n/** Used to match apostrophes. */\nvar reApos = RegExp(rsApos, 'g');\n\n/**\n * Creates a function like `_.camelCase`.\n *\n * @private\n * @param {Function} callback The function to combine each word.\n * @returns {Function} Returns the new compounder function.\n */\nfunction createCompounder(callback) {\n  return function(string) {\n    return arrayReduce(words(deburr(string).replace(reApos, '')), callback, '');\n  };\n}\n\nexport default createCompounder;\n", "import capitalize from './capitalize.js';\nimport createCompounder from './_createCompounder.js';\n\n/**\n * Converts `string` to [camel case](https://en.wikipedia.org/wiki/CamelCase).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the camel cased string.\n * @example\n *\n * _.camelCase('Foo Bar');\n * // => 'fooBar'\n *\n * _.camelCase('--foo-bar--');\n * // => 'fooBar'\n *\n * _.camelCase('__FOO_BAR__');\n * // => 'fooBar'\n */\nvar camelCase = createCompounder(function(result, word, index) {\n  word = word.toLowerCase();\n  return result + (index ? capitalize(word) : word);\n});\n\nexport default camelCase;\n", "import isArray from './isArray.js';\n\n/**\n * Casts `value` as an array if it's not one.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Lang\n * @param {*} value The value to inspect.\n * @returns {Array} Returns the cast array.\n * @example\n *\n * _.castArray(1);\n * // => [1]\n *\n * _.castArray({ 'a': 1 });\n * // => [{ 'a': 1 }]\n *\n * _.castArray('abc');\n * // => ['abc']\n *\n * _.castArray(null);\n * // => [null]\n *\n * _.castArray(undefined);\n * // => [undefined]\n *\n * _.castArray();\n * // => []\n *\n * var array = [1, 2, 3];\n * console.log(_.castArray(array) === array);\n * // => true\n */\nfunction castArray() {\n  if (!arguments.length) {\n    return [];\n  }\n  var value = arguments[0];\n  return isArray(value) ? value : [value];\n}\n\nexport default castArray;\n", "import root from './_root.js';\nimport toInteger from './toInteger.js';\nimport toNumber from './toNumber.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite,\n    nativeMin = Math.min;\n\n/**\n * Creates a function like `_.round`.\n *\n * @private\n * @param {string} methodName The name of the `Math` method to use when rounding.\n * @returns {Function} Returns the new round function.\n */\nfunction createRound(methodName) {\n  var func = Math[methodName];\n  return function(number, precision) {\n    number = toNumber(number);\n    precision = precision == null ? 0 : nativeMin(toInteger(precision), 292);\n    if (precision && nativeIsFinite(number)) {\n      // Shift with exponential notation to avoid floating-point issues.\n      // See [MDN](https://mdn.io/round#Examples) for more details.\n      var pair = (toString(number) + 'e').split('e'),\n          value = func(pair[0] + 'e' + (+pair[1] + precision));\n\n      pair = (toString(value) + 'e').split('e');\n      return +(pair[0] + 'e' + (+pair[1] - precision));\n    }\n    return func(number);\n  };\n}\n\nexport default createRound;\n", "import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded up to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round up.\n * @param {number} [precision=0] The precision to round up to.\n * @returns {number} Returns the rounded up number.\n * @example\n *\n * _.ceil(4.006);\n * // => 5\n *\n * _.ceil(6.004, 2);\n * // => 6.01\n *\n * _.ceil(6040, -2);\n * // => 6100\n */\nvar ceil = createRound('ceil');\n\nexport default ceil;\n", "import lodash from './wrapperLodash.js';\n\n/**\n * Creates a `lodash` wrapper instance that wraps `value` with explicit method\n * chain sequences enabled. The result of such sequences must be unwrapped\n * with `_#value`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Seq\n * @param {*} value The value to wrap.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36 },\n *   { 'user': 'fred',    'age': 40 },\n *   { 'user': 'pebbles', 'age': 1 }\n * ];\n *\n * var youngest = _\n *   .chain(users)\n *   .sortBy('age')\n *   .map(function(o) {\n *     return o.user + ' is ' + o.age;\n *   })\n *   .head()\n *   .value();\n * // => 'pebbles is 1'\n */\nfunction chain(value) {\n  var result = lodash(value);\n  result.__chain__ = true;\n  return result;\n}\n\nexport default chain;\n", "import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * Creates an array of elements split into groups the length of `size`.\n * If `array` can't be split evenly, the final chunk will be the remaining\n * elements.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to process.\n * @param {number} [size=1] The length of each chunk\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the new array of chunks.\n * @example\n *\n * _.chunk(['a', 'b', 'c', 'd'], 2);\n * // => [['a', 'b'], ['c', 'd']]\n *\n * _.chunk(['a', 'b', 'c', 'd'], 3);\n * // => [['a', 'b', 'c'], ['d']]\n */\nfunction chunk(array, size, guard) {\n  if ((guard ? isIterateeCall(array, size, guard) : size === undefined)) {\n    size = 1;\n  } else {\n    size = nativeMax(toInteger(size), 0);\n  }\n  var length = array == null ? 0 : array.length;\n  if (!length || size < 1) {\n    return [];\n  }\n  var index = 0,\n      resIndex = 0,\n      result = Array(nativeCeil(length / size));\n\n  while (index < length) {\n    result[resIndex++] = baseSlice(array, index, (index += size));\n  }\n  return result;\n}\n\nexport default chunk;\n", "/**\n * The base implementation of `_.clamp` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n */\nfunction baseClamp(number, lower, upper) {\n  if (number === number) {\n    if (upper !== undefined) {\n      number = number <= upper ? number : upper;\n    }\n    if (lower !== undefined) {\n      number = number >= lower ? number : lower;\n    }\n  }\n  return number;\n}\n\nexport default baseClamp;\n", "import baseClamp from './_baseClamp.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Clamps `number` within the inclusive `lower` and `upper` bounds.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Number\n * @param {number} number The number to clamp.\n * @param {number} [lower] The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the clamped number.\n * @example\n *\n * _.clamp(-10, -5, 5);\n * // => -5\n *\n * _.clamp(10, -5, 5);\n * // => 5\n */\nfunction clamp(number, lower, upper) {\n  if (upper === undefined) {\n    upper = lower;\n    lower = undefined;\n  }\n  if (upper !== undefined) {\n    upper = toNumber(upper);\n    upper = upper === upper ? upper : 0;\n  }\n  if (lower !== undefined) {\n    lower = toNumber(lower);\n    lower = lower === lower ? lower : 0;\n  }\n  return baseClamp(toNumber(number), lower, upper);\n}\n\nexport default clamp;\n", "import ListCache from './_ListCache.js';\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nexport default stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nexport default stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nexport default stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nexport default stackHas;\n", "import ListCache from './_ListCache.js';\nimport Map from './_Map.js';\nimport MapCache from './_MapCache.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nexport default stackSet;\n", "import ListCache from './_ListCache.js';\nimport stackClear from './_stackClear.js';\nimport stackDelete from './_stackDelete.js';\nimport stackGet from './_stackGet.js';\nimport stackHas from './_stackHas.js';\nimport stackSet from './_stackSet.js';\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nexport default Stack;\n", "import copyObject from './_copyObject.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.assign` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssign(object, source) {\n  return object && copyObject(source, keys(source), object);\n}\n\nexport default baseAssign;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * The base implementation of `_.assignIn` without support for multiple sources\n * or `customizer` functions.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @returns {Object} Returns `object`.\n */\nfunction baseAssignIn(object, source) {\n  return object && copyObject(source, keysIn(source), object);\n}\n\nexport default baseAssignIn;\n", "import root from './_root.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined,\n    allocUnsafe = Buffer ? Buffer.allocUnsafe : undefined;\n\n/**\n * Creates a clone of  `buffer`.\n *\n * @private\n * @param {Buffer} buffer The buffer to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Buffer} Returns the cloned buffer.\n */\nfunction cloneBuffer(buffer, isDeep) {\n  if (isDeep) {\n    return buffer.slice();\n  }\n  var length = buffer.length,\n      result = allocUnsafe ? allocUnsafe(length) : new buffer.constructor(length);\n\n  buffer.copy(result);\n  return result;\n}\n\nexport default cloneBuffer;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nexport default stubArray;\n", "import arrayFilter from './_arrayFilter.js';\nimport stubArray from './stubArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nexport default getSymbols;\n", "import copyObject from './_copyObject.js';\nimport getSymbols from './_getSymbols.js';\n\n/**\n * Copies own symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbols(source, object) {\n  return copyObject(source, getSymbols(source), object);\n}\n\nexport default copySymbols;\n", "import arrayPush from './_arrayPush.js';\nimport getPrototype from './_getPrototype.js';\nimport getSymbols from './_getSymbols.js';\nimport stubArray from './stubArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own and inherited enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbolsIn = !nativeGetSymbols ? stubArray : function(object) {\n  var result = [];\n  while (object) {\n    arrayPush(result, getSymbols(object));\n    object = getPrototype(object);\n  }\n  return result;\n};\n\nexport default getSymbolsIn;\n", "import copyObject from './_copyObject.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\n\n/**\n * Copies own and inherited symbols of `source` to `object`.\n *\n * @private\n * @param {Object} source The object to copy symbols from.\n * @param {Object} [object={}] The object to copy symbols to.\n * @returns {Object} Returns `object`.\n */\nfunction copySymbolsIn(source, object) {\n  return copyObject(source, getSymbolsIn(source), object);\n}\n\nexport default copySymbolsIn;\n", "import arrayPush from './_arrayPush.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nexport default baseGetAllKeys;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbols from './_getSymbols.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nexport default getAllKeys;\n", "import baseGetAllKeys from './_baseGetAllKeys.js';\nimport getSymbolsIn from './_getSymbolsIn.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeysIn(object) {\n  return baseGetAllKeys(object, keysIn, getSymbolsIn);\n}\n\nexport default getAllKeysIn;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nexport default DataView;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nexport default Promise;\n", "import getNative from './_getNative.js';\nimport root from './_root.js';\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nexport default Set;\n", "import DataView from './_DataView.js';\nimport Map from './_Map.js';\nimport Promise from './_Promise.js';\nimport Set from './_Set.js';\nimport WeakMap from './_WeakMap.js';\nimport baseGetTag from './_baseGetTag.js';\nimport toSource from './_toSource.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nexport default getTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Initializes an array clone.\n *\n * @private\n * @param {Array} array The array to clone.\n * @returns {Array} Returns the initialized clone.\n */\nfunction initCloneArray(array) {\n  var length = array.length,\n      result = new array.constructor(length);\n\n  // Add properties assigned by `RegExp#exec`.\n  if (length && typeof array[0] == 'string' && hasOwnProperty.call(array, 'index')) {\n    result.index = array.index;\n    result.input = array.input;\n  }\n  return result;\n}\n\nexport default initCloneArray;\n", "import root from './_root.js';\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nexport default Uint8Array;\n", "import Uint8Array from './_Uint8Array.js';\n\n/**\n * Creates a clone of `arrayBuffer`.\n *\n * @private\n * @param {ArrayBuffer} arrayBuffer The array buffer to clone.\n * @returns {ArrayBuffer} Returns the cloned array buffer.\n */\nfunction cloneArrayBuffer(arrayBuffer) {\n  var result = new arrayBuffer.constructor(arrayBuffer.byteLength);\n  new Uint8Array(result).set(new Uint8Array(arrayBuffer));\n  return result;\n}\n\nexport default cloneArrayBuffer;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `dataView`.\n *\n * @private\n * @param {Object} dataView The data view to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned data view.\n */\nfunction cloneDataView(dataView, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(dataView.buffer) : dataView.buffer;\n  return new dataView.constructor(buffer, dataView.byteOffset, dataView.byteLength);\n}\n\nexport default cloneDataView;\n", "/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Creates a clone of `regexp`.\n *\n * @private\n * @param {Object} regexp The regexp to clone.\n * @returns {Object} Returns the cloned regexp.\n */\nfunction cloneRegExp(regexp) {\n  var result = new regexp.constructor(regexp.source, reFlags.exec(regexp));\n  result.lastIndex = regexp.lastIndex;\n  return result;\n}\n\nexport default cloneRegExp;\n", "import Symbol from './_Symbol.js';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * Creates a clone of the `symbol` object.\n *\n * @private\n * @param {Object} symbol The symbol object to clone.\n * @returns {Object} Returns the cloned symbol object.\n */\nfunction cloneSymbol(symbol) {\n  return symbolValueOf ? Object(symbolValueOf.call(symbol)) : {};\n}\n\nexport default cloneSymbol;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\n\n/**\n * Creates a clone of `typedArray`.\n *\n * @private\n * @param {Object} typedArray The typed array to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the cloned typed array.\n */\nfunction cloneTypedArray(typedArray, isDeep) {\n  var buffer = isDeep ? cloneArrayBuffer(typedArray.buffer) : typedArray.buffer;\n  return new typedArray.constructor(buffer, typedArray.byteOffset, typedArray.length);\n}\n\nexport default cloneTypedArray;\n", "import cloneArrayBuffer from './_cloneArrayBuffer.js';\nimport cloneDataView from './_cloneDataView.js';\nimport cloneRegExp from './_cloneRegExp.js';\nimport cloneSymbol from './_cloneSymbol.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/**\n * Initializes an object clone based on its `toStringTag`.\n *\n * **Note:** This function only supports cloning values with tags of\n * `Boolean`, `Date`, `Error`, `Map`, `Number`, `RegExp`, `Set`, or `String`.\n *\n * @private\n * @param {Object} object The object to clone.\n * @param {string} tag The `toStringTag` of the object to clone.\n * @param {boolean} [isDeep] Specify a deep clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneByTag(object, tag, isDeep) {\n  var Ctor = object.constructor;\n  switch (tag) {\n    case arrayBufferTag:\n      return cloneArrayBuffer(object);\n\n    case boolTag:\n    case dateTag:\n      return new Ctor(+object);\n\n    case dataViewTag:\n      return cloneDataView(object, isDeep);\n\n    case float32Tag: case float64Tag:\n    case int8Tag: case int16Tag: case int32Tag:\n    case uint8Tag: case uint8ClampedTag: case uint16Tag: case uint32Tag:\n      return cloneTypedArray(object, isDeep);\n\n    case mapTag:\n      return new Ctor;\n\n    case numberTag:\n    case stringTag:\n      return new Ctor(object);\n\n    case regexpTag:\n      return cloneRegExp(object);\n\n    case setTag:\n      return new Ctor;\n\n    case symbolTag:\n      return cloneSymbol(object);\n  }\n}\n\nexport default initCloneByTag;\n", "import baseCreate from './_baseCreate.js';\nimport getPrototype from './_getPrototype.js';\nimport isPrototype from './_isPrototype.js';\n\n/**\n * Initializes an object clone.\n *\n * @private\n * @param {Object} object The object to clone.\n * @returns {Object} Returns the initialized clone.\n */\nfunction initCloneObject(object) {\n  return (typeof object.constructor == 'function' && !isPrototype(object))\n    ? baseCreate(getPrototype(object))\n    : {};\n}\n\nexport default initCloneObject;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]';\n\n/**\n * The base implementation of `_.isMap` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n */\nfunction baseIsMap(value) {\n  return isObjectLike(value) && getTag(value) == mapTag;\n}\n\nexport default baseIsMap;\n", "import baseIsMap from './_baseIsMap.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsMap = nodeUtil && nodeUtil.isMap;\n\n/**\n * Checks if `value` is classified as a `Map` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a map, else `false`.\n * @example\n *\n * _.isMap(new Map);\n * // => true\n *\n * _.isMap(new WeakMap);\n * // => false\n */\nvar isMap = nodeIsMap ? baseUnary(nodeIsMap) : baseIsMap;\n\nexport default isMap;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar setTag = '[object Set]';\n\n/**\n * The base implementation of `_.isSet` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n */\nfunction baseIsSet(value) {\n  return isObjectLike(value) && getTag(value) == setTag;\n}\n\nexport default baseIsSet;\n", "import baseIsSet from './_baseIsSet.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsSet = nodeUtil && nodeUtil.isSet;\n\n/**\n * Checks if `value` is classified as a `Set` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a set, else `false`.\n * @example\n *\n * _.isSet(new Set);\n * // => true\n *\n * _.isSet(new WeakSet);\n * // => false\n */\nvar isSet = nodeIsSet ? baseUnary(nodeIsSet) : baseIsSet;\n\nexport default isSet;\n", "import Stack from './_Stack.js';\nimport arrayEach from './_arrayEach.js';\nimport assignValue from './_assignValue.js';\nimport baseAssign from './_baseAssign.js';\nimport baseAssignIn from './_baseAssignIn.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport copyArray from './_copyArray.js';\nimport copySymbols from './_copySymbols.js';\nimport copySymbolsIn from './_copySymbolsIn.js';\nimport getAllKeys from './_getAllKeys.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\nimport getTag from './_getTag.js';\nimport initCloneArray from './_initCloneArray.js';\nimport initCloneByTag from './_initCloneByTag.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isMap from './isMap.js';\nimport isObject from './isObject.js';\nimport isSet from './isSet.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values supported by `_.clone`. */\nvar cloneableTags = {};\ncloneableTags[argsTag] = cloneableTags[arrayTag] =\ncloneableTags[arrayBufferTag] = cloneableTags[dataViewTag] =\ncloneableTags[boolTag] = cloneableTags[dateTag] =\ncloneableTags[float32Tag] = cloneableTags[float64Tag] =\ncloneableTags[int8Tag] = cloneableTags[int16Tag] =\ncloneableTags[int32Tag] = cloneableTags[mapTag] =\ncloneableTags[numberTag] = cloneableTags[objectTag] =\ncloneableTags[regexpTag] = cloneableTags[setTag] =\ncloneableTags[stringTag] = cloneableTags[symbolTag] =\ncloneableTags[uint8Tag] = cloneableTags[uint8ClampedTag] =\ncloneableTags[uint16Tag] = cloneableTags[uint32Tag] = true;\ncloneableTags[errorTag] = cloneableTags[funcTag] =\ncloneableTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.clone` and `_.cloneDeep` which tracks\n * traversed objects.\n *\n * @private\n * @param {*} value The value to clone.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Deep clone\n *  2 - Flatten inherited properties\n *  4 - Clone symbols\n * @param {Function} [customizer] The function to customize cloning.\n * @param {string} [key] The key of `value`.\n * @param {Object} [object] The parent object of `value`.\n * @param {Object} [stack] Tracks traversed objects and their clone counterparts.\n * @returns {*} Returns the cloned value.\n */\nfunction baseClone(value, bitmask, customizer, key, object, stack) {\n  var result,\n      isDeep = bitmask & CLONE_DEEP_FLAG,\n      isFlat = bitmask & CLONE_FLAT_FLAG,\n      isFull = bitmask & CLONE_SYMBOLS_FLAG;\n\n  if (customizer) {\n    result = object ? customizer(value, key, object, stack) : customizer(value);\n  }\n  if (result !== undefined) {\n    return result;\n  }\n  if (!isObject(value)) {\n    return value;\n  }\n  var isArr = isArray(value);\n  if (isArr) {\n    result = initCloneArray(value);\n    if (!isDeep) {\n      return copyArray(value, result);\n    }\n  } else {\n    var tag = getTag(value),\n        isFunc = tag == funcTag || tag == genTag;\n\n    if (isBuffer(value)) {\n      return cloneBuffer(value, isDeep);\n    }\n    if (tag == objectTag || tag == argsTag || (isFunc && !object)) {\n      result = (isFlat || isFunc) ? {} : initCloneObject(value);\n      if (!isDeep) {\n        return isFlat\n          ? copySymbolsIn(value, baseAssignIn(result, value))\n          : copySymbols(value, baseAssign(result, value));\n      }\n    } else {\n      if (!cloneableTags[tag]) {\n        return object ? value : {};\n      }\n      result = initCloneByTag(value, tag, isDeep);\n    }\n  }\n  // Check for circular references and return its corresponding clone.\n  stack || (stack = new Stack);\n  var stacked = stack.get(value);\n  if (stacked) {\n    return stacked;\n  }\n  stack.set(value, result);\n\n  if (isSet(value)) {\n    value.forEach(function(subValue) {\n      result.add(baseClone(subValue, bitmask, customizer, subValue, value, stack));\n    });\n  } else if (isMap(value)) {\n    value.forEach(function(subValue, key) {\n      result.set(key, baseClone(subValue, bitmask, customizer, key, value, stack));\n    });\n  }\n\n  var keysFunc = isFull\n    ? (isFlat ? getAllKeysIn : getAllKeys)\n    : (isFlat ? keysIn : keys);\n\n  var props = isArr ? undefined : keysFunc(value);\n  arrayEach(props || value, function(subValue, key) {\n    if (props) {\n      key = subValue;\n      subValue = value[key];\n    }\n    // Recursively populate clone (susceptible to call stack limits).\n    assignValue(result, key, baseClone(subValue, bitmask, customizer, key, value, stack));\n  });\n  return result;\n}\n\nexport default baseClone;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * Creates a shallow clone of `value`.\n *\n * **Note:** This method is loosely based on the\n * [structured clone algorithm](https://mdn.io/Structured_clone_algorithm)\n * and supports cloning arrays, array buffers, booleans, date objects, maps,\n * numbers, `Object` objects, regexes, sets, strings, symbols, and typed\n * arrays. The own enumerable properties of `arguments` objects are cloned\n * as plain objects. An empty object is returned for uncloneable values such\n * as error objects, functions, DOM nodes, and WeakMaps.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to clone.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeep\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var shallow = _.clone(objects);\n * console.log(shallow[0] === objects[0]);\n * // => true\n */\nfunction clone(value) {\n  return baseClone(value, CLONE_SYMBOLS_FLAG);\n}\n\nexport default clone;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @returns {*} Returns the deep cloned value.\n * @see _.clone\n * @example\n *\n * var objects = [{ 'a': 1 }, { 'b': 2 }];\n *\n * var deep = _.cloneDeep(objects);\n * console.log(deep[0] === objects[0]);\n * // => false\n */\nfunction cloneDeep(value) {\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG);\n}\n\nexport default cloneDeep;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.cloneWith` except that it recursively clones `value`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to recursively clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the deep cloned value.\n * @see _.cloneWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(true);\n *   }\n * }\n *\n * var el = _.cloneDeepWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 20\n */\nfunction cloneDeepWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_DEEP_FLAG | CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneDeepWith;\n", "import baseClone from './_baseClone.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * This method is like `_.clone` except that it accepts `customizer` which\n * is invoked to produce the cloned value. If `customizer` returns `undefined`,\n * cloning is handled by the method instead. The `customizer` is invoked with\n * up to four arguments; (value [, index|key, object, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to clone.\n * @param {Function} [customizer] The function to customize cloning.\n * @returns {*} Returns the cloned value.\n * @see _.cloneDeepWith\n * @example\n *\n * function customizer(value) {\n *   if (_.isElement(value)) {\n *     return value.cloneNode(false);\n *   }\n * }\n *\n * var el = _.cloneWith(document.body, customizer);\n *\n * console.log(el === document.body);\n * // => false\n * console.log(el.nodeName);\n * // => 'BODY'\n * console.log(el.childNodes.length);\n * // => 0\n */\nfunction cloneWith(value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseClone(value, CLONE_SYMBOLS_FLAG, customizer);\n}\n\nexport default cloneWith;\n", "import LodashWrapper from './_LodashWrapper.js';\n\n/**\n * Executes the chain sequence and returns the wrapped result.\n *\n * @name commit\n * @memberOf _\n * @since 3.2.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2];\n * var wrapped = _(array).push(3);\n *\n * console.log(array);\n * // => [1, 2]\n *\n * wrapped = wrapped.commit();\n * console.log(array);\n * // => [1, 2, 3]\n *\n * wrapped.last();\n * // => 3\n *\n * console.log(array);\n * // => [1, 2, 3]\n */\nfunction wrapperCommit() {\n  return new LodashWrapper(this.value(), this.__chain__);\n}\n\nexport default wrapperCommit;\n", "/**\n * Creates an array with all falsey values removed. The values `false`, `null`,\n * `0`, `\"\"`, `undefined`, and `NaN` are falsey.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to compact.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.compact([0, 1, false, 2, '', 3]);\n * // => [1, 2, 3]\n */\nfunction compact(array) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (value) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nexport default compact;\n", "import arrayPush from './_arrayPush.js';\nimport baseFlatten from './_baseFlatten.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a new array concatenating `array` with any additional arrays\n * and/or values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to concatenate.\n * @param {...*} [values] The values to concatenate.\n * @returns {Array} Returns the new concatenated array.\n * @example\n *\n * var array = [1];\n * var other = _.concat(array, 2, [3], [[4]]);\n *\n * console.log(other);\n * // => [1, 2, 3, [4]]\n *\n * console.log(array);\n * // => [1]\n */\nfunction concat() {\n  var length = arguments.length;\n  if (!length) {\n    return [];\n  }\n  var args = Array(length - 1),\n      array = arguments[0],\n      index = length;\n\n  while (index--) {\n    args[index - 1] = arguments[index];\n  }\n  return arrayPush(isArray(array) ? copyArray(array) : [array], baseFlatten(args, 1));\n}\n\nexport default concat;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nexport default setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nexport default setCacheHas;\n", "import MapCache from './_MapCache.js';\nimport setCacheAdd from './_setCacheAdd.js';\nimport setCacheHas from './_setCacheHas.js';\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nexport default SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nexport default cacheHas;\n", "import SetCache from './_SetCache.js';\nimport arraySome from './_arraySome.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalArrays;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nexport default mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nexport default setToArray;\n", "import Symbol from './_Symbol.js';\nimport Uint8Array from './_Uint8Array.js';\nimport eq from './eq.js';\nimport equalArrays from './_equalArrays.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nexport default equalByTag;\n", "import getAllKeys from './_getAllKeys.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nexport default equalObjects;\n", "import Stack from './_Stack.js';\nimport equalArrays from './_equalArrays.js';\nimport equalByTag from './_equalByTag.js';\nimport equalObjects from './_equalObjects.js';\nimport getTag from './_getTag.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nexport default baseIsEqualDeep;\n", "import baseIsEqualDeep from './_baseIsEqualDeep.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nexport default baseIsEqual;\n", "import Stack from './_Stack.js';\nimport baseIsEqual from './_baseIsEqual.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nexport default baseIsMatch;\n", "import isObject from './isObject.js';\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nexport default isStrictComparable;\n", "import isStrictComparable from './_isStrictComparable.js';\nimport keys from './keys.js';\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nexport default getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nexport default matchesStrictComparable;\n", "import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nexport default baseMatches;\n", "/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nexport default baseHasIn;\n", "import castPath from './_castPath.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isIndex from './_isIndex.js';\nimport isLength from './isLength.js';\nimport toKey from './_toKey.js';\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nexport default hasPath;\n", "import baseHasIn from './_baseHasIn.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nexport default hasIn;\n", "import baseIsEqual from './_baseIsEqual.js';\nimport get from './get.js';\nimport hasIn from './hasIn.js';\nimport isKey from './_isKey.js';\nimport isStrictComparable from './_isStrictComparable.js';\nimport matchesStrictComparable from './_matchesStrictComparable.js';\nimport toKey from './_toKey.js';\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nexport default baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nexport default baseProperty;\n", "import baseGet from './_baseGet.js';\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nexport default basePropertyDeep;\n", "import baseProperty from './_baseProperty.js';\nimport basePropertyDeep from './_basePropertyDeep.js';\nimport isKey from './_isKey.js';\nimport toKey from './_toKey.js';\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nexport default property;\n", "import baseMatches from './_baseMatches.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport property from './property.js';\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nexport default baseIteratee;\n", "import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that iterates over `pairs` and invokes the corresponding\n * function of the first predicate to return truthy. The predicate-function\n * pairs are invoked with the `this` binding and arguments of the created\n * function.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {Array} pairs The predicate-function pairs.\n * @returns {Function} Returns the new composite function.\n * @example\n *\n * var func = _.cond([\n *   [_.matches({ 'a': 1 }),           _.constant('matches A')],\n *   [_.conforms({ 'b': _.isNumber }), _.constant('matches B')],\n *   [_.stubTrue,                      _.constant('no match')]\n * ]);\n *\n * func({ 'a': 1, 'b': 2 });\n * // => 'matches A'\n *\n * func({ 'a': 0, 'b': 1 });\n * // => 'matches B'\n *\n * func({ 'a': '1', 'b': '2' });\n * // => 'no match'\n */\nfunction cond(pairs) {\n  var length = pairs == null ? 0 : pairs.length,\n      toIteratee = baseIteratee;\n\n  pairs = !length ? [] : arrayMap(pairs, function(pair) {\n    if (typeof pair[1] != 'function') {\n      throw new TypeError(FUNC_ERROR_TEXT);\n    }\n    return [toIteratee(pair[0]), pair[1]];\n  });\n\n  return baseRest(function(args) {\n    var index = -1;\n    while (++index < length) {\n      var pair = pairs[index];\n      if (apply(pair[0], this, args)) {\n        return apply(pair[1], this, args);\n      }\n    }\n  });\n}\n\nexport default cond;\n", "/**\n * The base implementation of `_.conformsTo` which accepts `props` to check.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n */\nfunction baseConformsTo(object, source, props) {\n  var length = props.length;\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (length--) {\n    var key = props[length],\n        predicate = source[key],\n        value = object[key];\n\n    if ((value === undefined && !(key in object)) || !predicate(value)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default baseConformsTo;\n", "import baseConformsTo from './_baseConformsTo.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.conforms` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property predicates to conform to.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseConforms(source) {\n  var props = keys(source);\n  return function(object) {\n    return baseConformsTo(object, source, props);\n  };\n}\n\nexport default baseConforms;\n", "import baseClone from './_baseClone.js';\nimport baseConforms from './_baseConforms.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that invokes the predicate properties of `source` with\n * the corresponding property values of a given object, returning `true` if\n * all predicates return truthy, else `false`.\n *\n * **Note:** The created function is equivalent to `_.conformsTo` with\n * `source` partially applied.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {Object} source The object of property predicates to conform to.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 2, 'b': 1 },\n *   { 'a': 1, 'b': 2 }\n * ];\n *\n * _.filter(objects, _.conforms({ 'b': function(n) { return n > 1; } }));\n * // => [{ 'a': 1, 'b': 2 }]\n */\nfunction conforms(source) {\n  return baseConforms(baseClone(source, CLONE_DEEP_FLAG));\n}\n\nexport default conforms;\n", "import baseConformsTo from './_baseConformsTo.js';\nimport keys from './keys.js';\n\n/**\n * Checks if `object` conforms to `source` by invoking the predicate\n * properties of `source` with the corresponding property values of `object`.\n *\n * **Note:** This method is equivalent to `_.conforms` when `source` is\n * partially applied.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property predicates to conform to.\n * @returns {boolean} Returns `true` if `object` conforms, else `false`.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n *\n * _.conformsTo(object, { 'b': function(n) { return n > 1; } });\n * // => true\n *\n * _.conformsTo(object, { 'b': function(n) { return n > 2; } });\n * // => false\n */\nfunction conformsTo(object, source) {\n  return source == null || baseConformsTo(object, source, keys(source));\n}\n\nexport default conformsTo;\n", "/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n", "/**\n * Creates a base function for methods like `_.forIn` and `_.forOwn`.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseFor(fromRight) {\n  return function(object, iteratee, keysFunc) {\n    var index = -1,\n        iterable = Object(object),\n        props = keysFunc(object),\n        length = props.length;\n\n    while (length--) {\n      var key = props[fromRight ? length : ++index];\n      if (iteratee(iterable[key], key, iterable) === false) {\n        break;\n      }\n    }\n    return object;\n  };\n}\n\nexport default createBaseFor;\n", "import createBaseFor from './_createBaseFor.js';\n\n/**\n * The base implementation of `baseForOwn` which iterates over `object`\n * properties returned by `keysFunc` and invokes `iteratee` for each property.\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseFor = createBaseFor();\n\nexport default baseFor;\n", "import baseFor from './_baseFor.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwn` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwn(object, iteratee) {\n  return object && baseFor(object, iteratee, keys);\n}\n\nexport default baseForOwn;\n", "import isArrayLike from './isArrayLike.js';\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nexport default createBaseEach;\n", "import baseForOwn from './_baseForOwn.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEach` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEach = createBaseEach(baseForOwn);\n\nexport default baseEach;\n", "import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n", "import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the number of times the key was returned by `iteratee`. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.countBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': 1, '6': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.countBy(['one', 'two', 'three'], 'length');\n * // => { '3': 2, '5': 1 }\n */\nvar countBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    ++result[key];\n  } else {\n    baseAssignValue(result, key, 1);\n  }\n});\n\nexport default countBy;\n", "import baseAssign from './_baseAssign.js';\nimport baseCreate from './_baseCreate.js';\n\n/**\n * Creates an object that inherits from the `prototype` object. If a\n * `properties` object is given, its own enumerable string keyed properties\n * are assigned to the created object.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Object\n * @param {Object} prototype The object to inherit from.\n * @param {Object} [properties] The properties to assign to the object.\n * @returns {Object} Returns the new object.\n * @example\n *\n * function Shape() {\n *   this.x = 0;\n *   this.y = 0;\n * }\n *\n * function Circle() {\n *   Shape.call(this);\n * }\n *\n * Circle.prototype = _.create(Shape.prototype, {\n *   'constructor': Circle\n * });\n *\n * var circle = new Circle;\n * circle instanceof Circle;\n * // => true\n *\n * circle instanceof Shape;\n * // => true\n */\nfunction create(prototype, properties) {\n  var result = baseCreate(prototype);\n  return properties == null ? result : baseAssign(result, properties);\n}\n\nexport default create;\n", "import createWrap from './_createWrap.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8;\n\n/**\n * Creates a function that accepts arguments of `func` and either invokes\n * `func` returning its result, if at least `arity` number of arguments have\n * been provided, or returns a function that accepts the remaining `func`\n * arguments, and so on. The arity of `func` may be specified if `func.length`\n * is not sufficient.\n *\n * The `_.curry.placeholder` value, which defaults to `_` in monolithic builds,\n * may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curry(abc);\n *\n * curried(1)(2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2)(3);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(1)(_, 3)(2);\n * // => [1, 2, 3]\n */\nfunction curry(func, arity, guard) {\n  arity = guard ? undefined : arity;\n  var result = createWrap(func, WRAP_CURRY_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n  result.placeholder = curry.placeholder;\n  return result;\n}\n\n// Assign default placeholders.\ncurry.placeholder = {};\n\nexport default curry;\n", "import createWrap from './_createWrap.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_RIGHT_FLAG = 16;\n\n/**\n * This method is like `_.curry` except that arguments are applied to `func`\n * in the manner of `_.partialRight` instead of `_.partial`.\n *\n * The `_.curryRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for provided arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of curried functions.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to curry.\n * @param {number} [arity=func.length] The arity of `func`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the new curried function.\n * @example\n *\n * var abc = function(a, b, c) {\n *   return [a, b, c];\n * };\n *\n * var curried = _.curryRight(abc);\n *\n * curried(3)(2)(1);\n * // => [1, 2, 3]\n *\n * curried(2, 3)(1);\n * // => [1, 2, 3]\n *\n * curried(1, 2, 3);\n * // => [1, 2, 3]\n *\n * // Curried with placeholders.\n * curried(3)(1, _)(2);\n * // => [1, 2, 3]\n */\nfunction curryRight(func, arity, guard) {\n  arity = guard ? undefined : arity;\n  var result = createWrap(func, WRAP_CURRY_RIGHT_FLAG, undefined, undefined, undefined, undefined, undefined, arity);\n  result.placeholder = curryRight.placeholder;\n  return result;\n}\n\n// Assign default placeholders.\ncurryRight.placeholder = {};\n\nexport default curryRight;\n", "import root from './_root.js';\n\n/**\n * Gets the timestamp of the number of milliseconds that have elapsed since\n * the Unix epoch (1 January 1970 00:00:00 UTC).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Date\n * @returns {number} Returns the timestamp.\n * @example\n *\n * _.defer(function(stamp) {\n *   console.log(_.now() - stamp);\n * }, _.now());\n * // => Logs the number of milliseconds it took for the deferred invocation.\n */\nvar now = function() {\n  return root.Date.now();\n};\n\nexport default now;\n", "import isObject from './isObject.js';\nimport now from './now.js';\nimport toNumber from './toNumber.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked. The debounced function comes with a `cancel` method to cancel\n * delayed `func` invocations and a `flush` method to immediately invoke them.\n * Provide `options` to indicate whether `func` should be invoked on the\n * leading and/or trailing edge of the `wait` timeout. The `func` is invoked\n * with the last arguments provided to the debounced function. Subsequent\n * calls to the debounced function return the result of the last `func`\n * invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the debounced function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.debounce` and `_.throttle`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to debounce.\n * @param {number} [wait=0] The number of milliseconds to delay.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=false]\n *  Specify invoking on the leading edge of the timeout.\n * @param {number} [options.maxWait]\n *  The maximum time `func` is allowed to be delayed before it's invoked.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new debounced function.\n * @example\n *\n * // Avoid costly calculations while the window size is in flux.\n * jQuery(window).on('resize', _.debounce(calculateLayout, 150));\n *\n * // Invoke `sendMail` when clicked, debouncing subsequent calls.\n * jQuery(element).on('click', _.debounce(sendMail, 300, {\n *   'leading': true,\n *   'trailing': false\n * }));\n *\n * // Ensure `batchLog` is invoked once after 1 second of debounced calls.\n * var debounced = _.debounce(batchLog, 250, { 'maxWait': 1000 });\n * var source = new EventSource('/stream');\n * jQuery(source).on('message', debounced);\n *\n * // Cancel the trailing debounced invocation.\n * jQuery(window).on('popstate', debounced.cancel);\n */\nfunction debounce(func, wait, options) {\n  var lastArgs,\n      lastThis,\n      maxWait,\n      result,\n      timerId,\n      lastCallTime,\n      lastInvokeTime = 0,\n      leading = false,\n      maxing = false,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  wait = toNumber(wait) || 0;\n  if (isObject(options)) {\n    leading = !!options.leading;\n    maxing = 'maxWait' in options;\n    maxWait = maxing ? nativeMax(toNumber(options.maxWait) || 0, wait) : maxWait;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n\n  function invokeFunc(time) {\n    var args = lastArgs,\n        thisArg = lastThis;\n\n    lastArgs = lastThis = undefined;\n    lastInvokeTime = time;\n    result = func.apply(thisArg, args);\n    return result;\n  }\n\n  function leadingEdge(time) {\n    // Reset any `maxWait` timer.\n    lastInvokeTime = time;\n    // Start the timer for the trailing edge.\n    timerId = setTimeout(timerExpired, wait);\n    // Invoke the leading edge.\n    return leading ? invokeFunc(time) : result;\n  }\n\n  function remainingWait(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime,\n        timeWaiting = wait - timeSinceLastCall;\n\n    return maxing\n      ? nativeMin(timeWaiting, maxWait - timeSinceLastInvoke)\n      : timeWaiting;\n  }\n\n  function shouldInvoke(time) {\n    var timeSinceLastCall = time - lastCallTime,\n        timeSinceLastInvoke = time - lastInvokeTime;\n\n    // Either this is the first call, activity has stopped and we're at the\n    // trailing edge, the system time has gone backwards and we're treating\n    // it as the trailing edge, or we've hit the `maxWait` limit.\n    return (lastCallTime === undefined || (timeSinceLastCall >= wait) ||\n      (timeSinceLastCall < 0) || (maxing && timeSinceLastInvoke >= maxWait));\n  }\n\n  function timerExpired() {\n    var time = now();\n    if (shouldInvoke(time)) {\n      return trailingEdge(time);\n    }\n    // Restart the timer.\n    timerId = setTimeout(timerExpired, remainingWait(time));\n  }\n\n  function trailingEdge(time) {\n    timerId = undefined;\n\n    // Only invoke if we have `lastArgs` which means `func` has been\n    // debounced at least once.\n    if (trailing && lastArgs) {\n      return invokeFunc(time);\n    }\n    lastArgs = lastThis = undefined;\n    return result;\n  }\n\n  function cancel() {\n    if (timerId !== undefined) {\n      clearTimeout(timerId);\n    }\n    lastInvokeTime = 0;\n    lastArgs = lastCallTime = lastThis = timerId = undefined;\n  }\n\n  function flush() {\n    return timerId === undefined ? result : trailingEdge(now());\n  }\n\n  function debounced() {\n    var time = now(),\n        isInvoking = shouldInvoke(time);\n\n    lastArgs = arguments;\n    lastThis = this;\n    lastCallTime = time;\n\n    if (isInvoking) {\n      if (timerId === undefined) {\n        return leadingEdge(lastCallTime);\n      }\n      if (maxing) {\n        // Handle invocations in a tight loop.\n        clearTimeout(timerId);\n        timerId = setTimeout(timerExpired, wait);\n        return invokeFunc(lastCallTime);\n      }\n    }\n    if (timerId === undefined) {\n      timerId = setTimeout(timerExpired, wait);\n    }\n    return result;\n  }\n  debounced.cancel = cancel;\n  debounced.flush = flush;\n  return debounced;\n}\n\nexport default debounce;\n", "/**\n * Checks `value` to determine whether a default value should be returned in\n * its place. The `defaultValue` is returned if `value` is `NaN`, `null`,\n * or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.14.0\n * @category Util\n * @param {*} value The value to check.\n * @param {*} defaultValue The default value.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * _.defaultTo(1, 10);\n * // => 1\n *\n * _.defaultTo(undefined, 10);\n * // => 10\n */\nfunction defaultTo(value, defaultValue) {\n  return (value == null || value !== value) ? defaultValue : value;\n}\n\nexport default defaultTo;\n", "import baseRest from './_baseRest.js';\nimport eq from './eq.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keysIn from './keysIn.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Assigns own and inherited enumerable string keyed properties of source\n * objects to the destination object for all destination properties that\n * resolve to `undefined`. Source objects are applied from left to right.\n * Once a property is set, additional values of the same property are ignored.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaultsDeep\n * @example\n *\n * _.defaults({ 'a': 1 }, { 'b': 2 }, { 'a': 3 });\n * // => { 'a': 1, 'b': 2 }\n */\nvar defaults = baseRest(function(object, sources) {\n  object = Object(object);\n\n  var index = -1;\n  var length = sources.length;\n  var guard = length > 2 ? sources[2] : undefined;\n\n  if (guard && isIterateeCall(sources[0], sources[1], guard)) {\n    length = 1;\n  }\n\n  while (++index < length) {\n    var source = sources[index];\n    var props = keysIn(source);\n    var propsIndex = -1;\n    var propsLength = props.length;\n\n    while (++propsIndex < propsLength) {\n      var key = props[propsIndex];\n      var value = object[key];\n\n      if (value === undefined ||\n          (eq(value, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n        object[key] = source[key];\n      }\n    }\n  }\n\n  return object;\n});\n\nexport default defaults;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport eq from './eq.js';\n\n/**\n * This function is like `assignValue` except that it doesn't assign\n * `undefined` values.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {string} key The key of the property to assign.\n * @param {*} value The value to assign.\n */\nfunction assignMergeValue(object, key, value) {\n  if ((value !== undefined && !eq(object[key], value)) ||\n      (value === undefined && !(key in object))) {\n    baseAssignValue(object, key, value);\n  }\n}\n\nexport default assignMergeValue;\n", "import isArrayLike from './isArrayLike.js';\nimport isObjectLike from './isObjectLike.js';\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nexport default isArrayLikeObject;\n", "/**\n * Gets the value at `key`, unless `key` is \"__proto__\" or \"constructor\".\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction safeGet(object, key) {\n  if (key === 'constructor' && typeof object[key] === 'function') {\n    return;\n  }\n\n  if (key == '__proto__') {\n    return;\n  }\n\n  return object[key];\n}\n\nexport default safeGet;\n", "import copyObject from './_copyObject.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Converts `value` to a plain object flattening inherited enumerable string\n * keyed properties of `value` to own properties of the plain object.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Object} Returns the converted plain object.\n * @example\n *\n * function Foo() {\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.assign({ 'a': 1 }, new Foo);\n * // => { 'a': 1, 'b': 2 }\n *\n * _.assign({ 'a': 1 }, _.toPlainObject(new Foo));\n * // => { 'a': 1, 'b': 2, 'c': 3 }\n */\nfunction toPlainObject(value) {\n  return copyObject(value, keysIn(value));\n}\n\nexport default toPlainObject;\n", "import assignMergeValue from './_assignMergeValue.js';\nimport cloneBuffer from './_cloneBuffer.js';\nimport cloneTypedArray from './_cloneTypedArray.js';\nimport copyArray from './_copyArray.js';\nimport initCloneObject from './_initCloneObject.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isPlainObject from './isPlainObject.js';\nimport isTypedArray from './isTypedArray.js';\nimport safeGet from './_safeGet.js';\nimport toPlainObject from './toPlainObject.js';\n\n/**\n * A specialized version of `baseMerge` for arrays and objects which performs\n * deep merges and tracks traversed objects enabling objects with circular\n * references to be merged.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {string} key The key of the value to merge.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} mergeFunc The function to merge values.\n * @param {Function} [customizer] The function to customize assigned values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMergeDeep(object, source, key, srcIndex, mergeFunc, customizer, stack) {\n  var objValue = safeGet(object, key),\n      srcValue = safeGet(source, key),\n      stacked = stack.get(srcValue);\n\n  if (stacked) {\n    assignMergeValue(object, key, stacked);\n    return;\n  }\n  var newValue = customizer\n    ? customizer(objValue, srcValue, (key + ''), object, source, stack)\n    : undefined;\n\n  var isCommon = newValue === undefined;\n\n  if (isCommon) {\n    var isArr = isArray(srcValue),\n        isBuff = !isArr && isBuffer(srcValue),\n        isTyped = !isArr && !isBuff && isTypedArray(srcValue);\n\n    newValue = srcValue;\n    if (isArr || isBuff || isTyped) {\n      if (isArray(objValue)) {\n        newValue = objValue;\n      }\n      else if (isArrayLikeObject(objValue)) {\n        newValue = copyArray(objValue);\n      }\n      else if (isBuff) {\n        isCommon = false;\n        newValue = cloneBuffer(srcValue, true);\n      }\n      else if (isTyped) {\n        isCommon = false;\n        newValue = cloneTypedArray(srcValue, true);\n      }\n      else {\n        newValue = [];\n      }\n    }\n    else if (isPlainObject(srcValue) || isArguments(srcValue)) {\n      newValue = objValue;\n      if (isArguments(objValue)) {\n        newValue = toPlainObject(objValue);\n      }\n      else if (!isObject(objValue) || isFunction(objValue)) {\n        newValue = initCloneObject(srcValue);\n      }\n    }\n    else {\n      isCommon = false;\n    }\n  }\n  if (isCommon) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, newValue);\n    mergeFunc(newValue, srcValue, srcIndex, customizer, stack);\n    stack['delete'](srcValue);\n  }\n  assignMergeValue(object, key, newValue);\n}\n\nexport default baseMergeDeep;\n", "import Stack from './_Stack.js';\nimport assignMergeValue from './_assignMergeValue.js';\nimport baseFor from './_baseFor.js';\nimport baseMergeDeep from './_baseMergeDeep.js';\nimport isObject from './isObject.js';\nimport keysIn from './keysIn.js';\nimport safeGet from './_safeGet.js';\n\n/**\n * The base implementation of `_.merge` without support for multiple sources.\n *\n * @private\n * @param {Object} object The destination object.\n * @param {Object} source The source object.\n * @param {number} srcIndex The index of `source`.\n * @param {Function} [customizer] The function to customize merged values.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n */\nfunction baseMerge(object, source, srcIndex, customizer, stack) {\n  if (object === source) {\n    return;\n  }\n  baseFor(source, function(srcValue, key) {\n    stack || (stack = new Stack);\n    if (isObject(srcValue)) {\n      baseMergeDeep(object, source, key, srcIndex, baseMerge, customizer, stack);\n    }\n    else {\n      var newValue = customizer\n        ? customizer(safeGet(object, key), srcValue, (key + ''), object, source, stack)\n        : undefined;\n\n      if (newValue === undefined) {\n        newValue = srcValue;\n      }\n      assignMergeValue(object, key, newValue);\n    }\n  }, keysIn);\n}\n\nexport default baseMerge;\n", "import baseMerge from './_baseMerge.js';\nimport isObject from './isObject.js';\n\n/**\n * Used by `_.defaultsDeep` to customize its `_.merge` use to merge source\n * objects into destination objects that are passed thru.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to merge.\n * @param {Object} object The parent object of `objValue`.\n * @param {Object} source The parent object of `srcValue`.\n * @param {Object} [stack] Tracks traversed source values and their merged\n *  counterparts.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsMerge(objValue, srcValue, key, object, source, stack) {\n  if (isObject(objValue) && isObject(srcValue)) {\n    // Recursively merge objects and arrays (susceptible to call stack limits).\n    stack.set(srcValue, objValue);\n    baseMerge(objValue, srcValue, undefined, customDefaultsMerge, stack);\n    stack['delete'](srcValue);\n  }\n  return objValue;\n}\n\nexport default customDefaultsMerge;\n", "import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.merge` except that it accepts `customizer` which\n * is invoked to produce the merged values of the destination and source\n * properties. If `customizer` returns `undefined`, merging is handled by the\n * method instead. The `customizer` is invoked with six arguments:\n * (objValue, srcValue, key, object, source, stack).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} sources The source objects.\n * @param {Function} customizer The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * function customizer(objValue, srcValue) {\n *   if (_.isArray(objValue)) {\n *     return objValue.concat(srcValue);\n *   }\n * }\n *\n * var object = { 'a': [1], 'b': [2] };\n * var other = { 'a': [3], 'b': [4] };\n *\n * _.mergeWith(object, other, customizer);\n * // => { 'a': [1, 3], 'b': [2, 4] }\n */\nvar mergeWith = createAssigner(function(object, source, srcIndex, customizer) {\n  baseMerge(object, source, srcIndex, customizer);\n});\n\nexport default mergeWith;\n", "import apply from './_apply.js';\nimport baseRest from './_baseRest.js';\nimport customDefaultsMerge from './_customDefaultsMerge.js';\nimport mergeWith from './mergeWith.js';\n\n/**\n * This method is like `_.defaults` except that it recursively assigns\n * default properties.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @see _.defaults\n * @example\n *\n * _.defaultsDeep({ 'a': { 'b': 2 } }, { 'a': { 'b': 1, 'c': 3 } });\n * // => { 'a': { 'b': 2, 'c': 3 } }\n */\nvar defaultsDeep = baseRest(function(args) {\n  args.push(undefined, customDefaultsMerge);\n  return apply(mergeWith, undefined, args);\n});\n\nexport default defaultsDeep;\n", "/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * The base implementation of `_.delay` and `_.defer` which accepts `args`\n * to provide to `func`.\n *\n * @private\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {Array} args The arguments to provide to `func`.\n * @returns {number|Object} Returns the timer id or timeout object.\n */\nfunction baseDelay(func, wait, args) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return setTimeout(function() { func.apply(undefined, args); }, wait);\n}\n\nexport default baseDelay;\n", "import baseDelay from './_baseDelay.js';\nimport baseRest from './_baseRest.js';\n\n/**\n * Defers invoking the `func` until the current call stack has cleared. Any\n * additional arguments are provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to defer.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.defer(function(text) {\n *   console.log(text);\n * }, 'deferred');\n * // => Logs 'deferred' after one millisecond.\n */\nvar defer = baseRest(function(func, args) {\n  return baseDelay(func, 1, args);\n});\n\nexport default defer;\n", "import baseDelay from './_baseDelay.js';\nimport baseRest from './_baseRest.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Invokes `func` after `wait` milliseconds. Any additional arguments are\n * provided to `func` when it's invoked.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to delay.\n * @param {number} wait The number of milliseconds to delay invocation.\n * @param {...*} [args] The arguments to invoke `func` with.\n * @returns {number} Returns the timer id.\n * @example\n *\n * _.delay(function(text) {\n *   console.log(text);\n * }, 1000, 'later');\n * // => Logs 'later' after one second.\n */\nvar delay = baseRest(function(func, wait, args) {\n  return baseDelay(func, toNumber(wait) || 0, args);\n});\n\nexport default delay;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nexport default arrayIncludesWith;\n", "import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of methods like `_.difference` without support\n * for excluding multiple arrays or iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Array} values The values to exclude.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n */\nfunction baseDifference(array, values, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      isCommon = true,\n      length = array.length,\n      result = [],\n      valuesLength = values.length;\n\n  if (!length) {\n    return result;\n  }\n  if (iteratee) {\n    values = arrayMap(values, baseUnary(iteratee));\n  }\n  if (comparator) {\n    includes = arrayIncludesWith;\n    isCommon = false;\n  }\n  else if (values.length >= LARGE_ARRAY_SIZE) {\n    includes = cacheHas;\n    isCommon = false;\n    values = new SetCache(values);\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee == null ? value : iteratee(value);\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var valuesIndex = valuesLength;\n      while (valuesIndex--) {\n        if (values[valuesIndex] === computed) {\n          continue outer;\n        }\n      }\n      result.push(value);\n    }\n    else if (!includes(values, computed, comparator)) {\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseDifference;\n", "import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of `array` values not included in the other given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * **Note:** Unlike `_.pullAll`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.without, _.xor\n * @example\n *\n * _.difference([2, 1], [2, 3]);\n * // => [1]\n */\nvar difference = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true))\n    : [];\n});\n\nexport default difference;\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nexport default last;\n", "import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.difference` except that it accepts `iteratee` which\n * is invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * **Note:** Unlike `_.pullAllBy`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.differenceBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.differenceBy([{ 'x': 2 }, { 'x': 1 }], [{ 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar differenceBy = baseRest(function(array, values) {\n  var iteratee = last(values);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2))\n    : [];\n});\n\nexport default differenceBy;\n", "import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.difference` except that it accepts `comparator`\n * which is invoked to compare elements of `array` to `values`. The order and\n * references of result values are determined by the first array. The comparator\n * is invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.pullAllWith`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...Array} [values] The values to exclude.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n *\n * _.differenceWith(objects, [{ 'x': 1, 'y': 2 }], _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }]\n */\nvar differenceWith = baseRest(function(array, values) {\n  var comparator = last(values);\n  if (isArrayLikeObject(comparator)) {\n    comparator = undefined;\n  }\n  return isArrayLikeObject(array)\n    ? baseDifference(array, baseFlatten(values, 1, isArrayLikeObject, true), undefined, comparator)\n    : [];\n});\n\nexport default differenceWith;\n", "import createMathOperation from './_createMathOperation.js';\n\n/**\n * Divide two numbers.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Math\n * @param {number} dividend The first number in a division.\n * @param {number} divisor The second number in a division.\n * @returns {number} Returns the quotient.\n * @example\n *\n * _.divide(6, 4);\n * // => 1.5\n */\nvar divide = createMathOperation(function(dividend, divisor) {\n  return dividend / divisor;\n}, 1);\n\nexport default divide;\n", "import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.drop([1, 2, 3]);\n * // => [2, 3]\n *\n * _.drop([1, 2, 3], 2);\n * // => [3]\n *\n * _.drop([1, 2, 3], 5);\n * // => []\n *\n * _.drop([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction drop(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default drop;\n", "import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements dropped from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to drop.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.dropRight([1, 2, 3]);\n * // => [1, 2]\n *\n * _.dropRight([1, 2, 3], 2);\n * // => [1]\n *\n * _.dropRight([1, 2, 3], 5);\n * // => []\n *\n * _.dropRight([1, 2, 3], 0);\n * // => [1, 2, 3]\n */\nfunction dropRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default dropRight;\n", "import baseSlice from './_baseSlice.js';\n\n/**\n * The base implementation of methods like `_.dropWhile` and `_.takeWhile`\n * without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {Function} predicate The function invoked per iteration.\n * @param {boolean} [isDrop] Specify dropping elements instead of taking them.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction baseWhile(array, predicate, isDrop, fromRight) {\n  var length = array.length,\n      index = fromRight ? length : -1;\n\n  while ((fromRight ? index-- : ++index < length) &&\n    predicate(array[index], index, array)) {}\n\n  return isDrop\n    ? baseSlice(array, (fromRight ? 0 : index), (fromRight ? index + 1 : length))\n    : baseSlice(array, (fromRight ? index + 1 : 0), (fromRight ? length : index));\n}\n\nexport default baseWhile;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseWhile from './_baseWhile.js';\n\n/**\n * Creates a slice of `array` excluding elements dropped from the end.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.dropRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropRightWhile(users, ['active', false]);\n * // => objects for ['barney']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropRightWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */\nfunction dropRightWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3), true, true)\n    : [];\n}\n\nexport default dropRightWhile;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseWhile from './_baseWhile.js';\n\n/**\n * Creates a slice of `array` excluding elements dropped from the beginning.\n * Elements are dropped until `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.dropWhile(users, function(o) { return !o.active; });\n * // => objects for ['pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.dropWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.dropWhile(users, ['active', false]);\n * // => objects for ['pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.dropWhile(users, 'active');\n * // => objects for ['barney', 'fred', 'pebbles']\n */\nfunction dropWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3), true)\n    : [];\n}\n\nexport default dropWhile;\n", "import identity from './identity.js';\n\n/**\n * Casts `value` to `identity` if it's not a function.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Function} Returns cast function.\n */\nfunction castFunction(value) {\n  return typeof value == 'function' ? value : identity;\n}\n\nexport default castFunction;\n", "import arrayEach from './_arrayEach.js';\nimport baseEach from './_baseEach.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection` and invokes `iteratee` for each element.\n * The iteratee is invoked with three arguments: (value, index|key, collection).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * **Note:** As with other \"Collections\" methods, objects with a \"length\"\n * property are iterated like arrays. To avoid this behavior use `_.forIn`\n * or `_.forOwn` for object iteration.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias each\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEachRight\n * @example\n *\n * _.forEach([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `1` then `2`.\n *\n * _.forEach({ 'a': 1, 'b': 2 }, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forEach(collection, iteratee) {\n  var func = isArray(collection) ? arrayEach : baseEach;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEach;\n", "/**\n * A specialized version of `_.forEachRight` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns `array`.\n */\nfunction arrayEachRight(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n\n  while (length--) {\n    if (iteratee(array[length], length, array) === false) {\n      break;\n    }\n  }\n  return array;\n}\n\nexport default arrayEachRight;\n", "import createBaseFor from './_createBaseFor.js';\n\n/**\n * This function is like `baseFor` except that it iterates over properties\n * in the opposite order.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @returns {Object} Returns `object`.\n */\nvar baseForRight = createBaseFor(true);\n\nexport default baseForRight;\n", "import baseForRight from './_baseForRight.js';\nimport keys from './keys.js';\n\n/**\n * The base implementation of `_.forOwnRight` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Object} Returns `object`.\n */\nfunction baseForOwnRight(object, iteratee) {\n  return object && baseForRight(object, iteratee, keys);\n}\n\nexport default baseForOwnRight;\n", "import baseForOwnRight from './_baseForOwnRight.js';\nimport createBaseEach from './_createBaseEach.js';\n\n/**\n * The base implementation of `_.forEachRight` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n */\nvar baseEachRight = createBaseEach(baseForOwnRight, true);\n\nexport default baseEachRight;\n", "import arrayEachRight from './_arrayEachRight.js';\nimport baseEachRight from './_baseEachRight.js';\nimport castFunction from './_castFunction.js';\nimport isArray from './isArray.js';\n\n/**\n * This method is like `_.forEach` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @alias eachRight\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array|Object} Returns `collection`.\n * @see _.forEach\n * @example\n *\n * _.forEachRight([1, 2], function(value) {\n *   console.log(value);\n * });\n * // => Logs `2` then `1`.\n */\nfunction forEachRight(collection, iteratee) {\n  var func = isArray(collection) ? arrayEachRight : baseEachRight;\n  return func(collection, castFunction(iteratee));\n}\n\nexport default forEachRight;\n", "import baseClamp from './_baseClamp.js';\nimport baseToString from './_baseToString.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Checks if `string` ends with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=string.length] The position to search up to.\n * @returns {boolean} Returns `true` if `string` ends with `target`,\n *  else `false`.\n * @example\n *\n * _.endsWith('abc', 'c');\n * // => true\n *\n * _.endsWith('abc', 'b');\n * // => false\n *\n * _.endsWith('abc', 'b', 2);\n * // => true\n */\nfunction endsWith(string, target, position) {\n  string = toString(string);\n  target = baseToString(target);\n\n  var length = string.length;\n  position = position === undefined\n    ? length\n    : baseClamp(toInteger(position), 0, length);\n\n  var end = position;\n  position -= target.length;\n  return position >= 0 && string.slice(position, end) == target;\n}\n\nexport default endsWith;\n", "import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.toPairs` and `_.toPairsIn` which creates an array\n * of key-value pairs for `object` corresponding to the property names of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the key-value pairs.\n */\nfunction baseToPairs(object, props) {\n  return arrayMap(props, function(key) {\n    return [key, object[key]];\n  });\n}\n\nexport default baseToPairs;\n", "/**\n * Converts `set` to its value-value pairs.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the value-value pairs.\n */\nfunction setToPairs(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = [value, value];\n  });\n  return result;\n}\n\nexport default setToPairs;\n", "import baseToPairs from './_baseToPairs.js';\nimport getTag from './_getTag.js';\nimport mapToArray from './_mapToArray.js';\nimport setToPairs from './_setToPairs.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Creates a `_.toPairs` or `_.toPairsIn` function.\n *\n * @private\n * @param {Function} keysFunc The function to get the keys of a given object.\n * @returns {Function} Returns the new pairs function.\n */\nfunction createToPairs(keysFunc) {\n  return function(object) {\n    var tag = getTag(object);\n    if (tag == mapTag) {\n      return mapToArray(object);\n    }\n    if (tag == setTag) {\n      return setToPairs(object);\n    }\n    return baseToPairs(object, keysFunc(object));\n  };\n}\n\nexport default createToPairs;\n", "import createToPairs from './_createToPairs.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of own enumerable string keyed-value pairs for `object`\n * which can be consumed by `_.fromPairs`. If `object` is a map or set, its\n * entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entries\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairs(new Foo);\n * // => [['a', 1], ['b', 2]] (iteration order is not guaranteed)\n */\nvar toPairs = createToPairs(keys);\n\nexport default toPairs;\n", "import createToPairs from './_createToPairs.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of own and inherited enumerable string keyed-value pairs\n * for `object` which can be consumed by `_.fromPairs`. If `object` is a map\n * or set, its entries are returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @alias entriesIn\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the key-value pairs.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.toPairsIn(new Foo);\n * // => [['a', 1], ['b', 2], ['c', 3]] (iteration order is not guaranteed)\n */\nvar toPairsIn = createToPairs(keysIn);\n\nexport default toPairsIn;\n", "import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map characters to HTML entities. */\nvar htmlEscapes = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  '\"': '&quot;',\n  \"'\": '&#39;'\n};\n\n/**\n * Used by `_.escape` to convert characters to HTML entities.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nvar escapeHtmlChar = basePropertyOf(htmlEscapes);\n\nexport default escapeHtmlChar;\n", "import escapeHtmlChar from './_escapeHtmlChar.js';\nimport toString from './toString.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reUnescapedHtml = /[&<>\"']/g,\n    reHasUnescapedHtml = RegExp(reUnescapedHtml.source);\n\n/**\n * Converts the characters \"&\", \"<\", \">\", '\"', and \"'\" in `string` to their\n * corresponding HTML entities.\n *\n * **Note:** No other characters are escaped. To escape additional\n * characters use a third-party library like [_he_](https://mths.be/he).\n *\n * Though the \">\" character is escaped for symmetry, characters like\n * \">\" and \"/\" don't need escaping in HTML and have no special meaning\n * unless they're part of a tag or unquoted attribute value. See\n * [Mathias Bynens's article](https://mathiasbynens.be/notes/ambiguous-ampersands)\n * (under \"semi-related fun fact\") for more details.\n *\n * When working with HTML you should always\n * [quote attribute values](http://wonko.com/post/html-escaping) to reduce\n * XSS vectors.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escape('fred, barney, & pebbles');\n * // => 'fred, barney, &amp; pebbles'\n */\nfunction escape(string) {\n  string = toString(string);\n  return (string && reHasUnescapedHtml.test(string))\n    ? string.replace(reUnescapedHtml, escapeHtmlChar)\n    : string;\n}\n\nexport default escape;\n", "import toString from './toString.js';\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g,\n    reHasRegExpChar = RegExp(reRegExpChar.source);\n\n/**\n * Escapes the `RegExp` special characters \"^\", \"$\", \"\\\", \".\", \"*\", \"+\",\n * \"?\", \"(\", \")\", \"[\", \"]\", \"{\", \"}\", and \"|\" in `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to escape.\n * @returns {string} Returns the escaped string.\n * @example\n *\n * _.escapeRegExp('[lodash](https://lodash.com/)');\n * // => '\\[lodash\\]\\(https://lodash\\.com/\\)'\n */\nfunction escapeRegExp(string) {\n  string = toString(string);\n  return (string && reHasRegExpChar.test(string))\n    ? string.replace(reRegExpChar, '\\\\$&')\n    : string;\n}\n\nexport default escapeRegExp;\n", "/**\n * A specialized version of `_.every` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n */\nfunction arrayEvery(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (!predicate(array[index], index, array)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default arrayEvery;\n", "import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.every` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`\n */\nfunction baseEvery(collection, predicate) {\n  var result = true;\n  baseEach(collection, function(value, index, collection) {\n    result = !!predicate(value, index, collection);\n    return result;\n  });\n  return result;\n}\n\nexport default baseEvery;\n", "import arrayEvery from './_arrayEvery.js';\nimport baseEvery from './_baseEvery.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **all** elements of `collection`.\n * Iteration is stopped once `predicate` returns falsey. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * **Note:** This method returns `true` for\n * [empty collections](https://en.wikipedia.org/wiki/Empty_set) because\n * [everything is true](https://en.wikipedia.org/wiki/Vacuous_truth) of\n * elements of empty collections.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if all elements pass the predicate check,\n *  else `false`.\n * @example\n *\n * _.every([true, 1, null, 'yes'], Boolean);\n * // => false\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.every(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.every(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.every(users, 'active');\n * // => false\n */\nfunction every(collection, predicate, guard) {\n  var func = isArray(collection) ? arrayEvery : baseEvery;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default every;\n", "import baseClamp from './_baseClamp.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Converts `value` to an integer suitable for use as the length of an\n * array-like object.\n *\n * **Note:** This method is based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toLength(3.2);\n * // => 3\n *\n * _.toLength(Number.MIN_VALUE);\n * // => 0\n *\n * _.toLength(Infinity);\n * // => 4294967295\n *\n * _.toLength('3.2');\n * // => 3\n */\nfunction toLength(value) {\n  return value ? baseClamp(toInteger(value), 0, MAX_ARRAY_LENGTH) : 0;\n}\n\nexport default toLength;\n", "import toInteger from './toInteger.js';\nimport toLength from './toLength.js';\n\n/**\n * The base implementation of `_.fill` without an iteratee call guard.\n *\n * @private\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n */\nfunction baseFill(array, value, start, end) {\n  var length = array.length;\n\n  start = toInteger(start);\n  if (start < 0) {\n    start = -start > length ? 0 : (length + start);\n  }\n  end = (end === undefined || end > length) ? length : toInteger(end);\n  if (end < 0) {\n    end += length;\n  }\n  end = start > end ? 0 : toLength(end);\n  while (start < end) {\n    array[start++] = value;\n  }\n  return array;\n}\n\nexport default baseFill;\n", "import baseFill from './_baseFill.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Fills elements of `array` with `value` from `start` up to, but not\n * including, `end`.\n *\n * **Note:** This method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Array\n * @param {Array} array The array to fill.\n * @param {*} value The value to fill `array` with.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.fill(array, 'a');\n * console.log(array);\n * // => ['a', 'a', 'a']\n *\n * _.fill(Array(3), 2);\n * // => [2, 2, 2]\n *\n * _.fill([4, 6, 8, 10], '*', 1, 3);\n * // => [4, '*', '*', 10]\n */\nfunction fill(array, value, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (start && typeof start != 'number' && isIterateeCall(array, value, start)) {\n    start = 0;\n    end = length;\n  }\n  return baseFill(array, value, start, end);\n}\n\nexport default fill;\n", "import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.filter` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction baseFilter(collection, predicate) {\n  var result = [];\n  baseEach(collection, function(value, index, collection) {\n    if (predicate(value, index, collection)) {\n      result.push(value);\n    }\n  });\n  return result;\n}\n\nexport default baseFilter;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Iterates over elements of `collection`, returning an array of all elements\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * **Note:** Unlike `_.remove`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.reject\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * _.filter(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, { 'age': 36, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.filter(users, 'active');\n * // => objects for ['barney']\n *\n * // Combining several predicates using `_.overEvery` or `_.overSome`.\n * _.filter(users, _.overSome([{ 'age': 36 }, ['age', 40]]));\n * // => objects for ['fred', 'barney']\n */\nfunction filter(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default filter;\n", "import baseIteratee from './_baseIteratee.js';\nimport isArrayLike from './isArrayLike.js';\nimport keys from './keys.js';\n\n/**\n * Creates a `_.find` or `_.findLast` function.\n *\n * @private\n * @param {Function} findIndexFunc The function to find the collection index.\n * @returns {Function} Returns the new find function.\n */\nfunction createFind(findIndexFunc) {\n  return function(collection, predicate, fromIndex) {\n    var iterable = Object(collection);\n    if (!isArrayLike(collection)) {\n      var iteratee = baseIteratee(predicate, 3);\n      collection = keys(collection);\n      predicate = function(key) { return iteratee(iterable[key], key, iterable); };\n    }\n    var index = findIndexFunc(collection, predicate, fromIndex);\n    return index > -1 ? iterable[iteratee ? collection[index] : index] : undefined;\n  };\n}\n\nexport default createFind;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.find` except that it returns the index of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.findIndex(users, function(o) { return o.user == 'barney'; });\n * // => 0\n *\n * // The `_.matches` iteratee shorthand.\n * _.findIndex(users, { 'user': 'fred', 'active': false });\n * // => 1\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findIndex(users, ['active', false]);\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.findIndex(users, 'active');\n * // => 2\n */\nfunction findIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index);\n}\n\nexport default findIndex;\n", "import createFind from './_createFind.js';\nimport findIndex from './findIndex.js';\n\n/**\n * Iterates over elements of `collection`, returning the first element\n * `predicate` returns truthy for. The predicate is invoked with three\n * arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': true },\n *   { 'user': 'fred',    'age': 40, 'active': false },\n *   { 'user': 'pebbles', 'age': 1,  'active': true }\n * ];\n *\n * _.find(users, function(o) { return o.age < 40; });\n * // => object for 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.find(users, { 'age': 1, 'active': true });\n * // => object for 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.find(users, ['active', false]);\n * // => object for 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.find(users, 'active');\n * // => object for 'barney'\n */\nvar find = createFind(findIndex);\n\nexport default find;\n", "/**\n * The base implementation of methods like `_.findKey` and `_.findLastKey`,\n * without support for iteratee shorthands, which iterates over `collection`\n * using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the found element or its key, else `undefined`.\n */\nfunction baseFindKey(collection, predicate, eachFunc) {\n  var result;\n  eachFunc(collection, function(value, key, collection) {\n    if (predicate(value, key, collection)) {\n      result = key;\n      return false;\n    }\n  });\n  return result;\n}\n\nexport default baseFindKey;\n", "import baseFindKey from './_baseFindKey.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * This method is like `_.find` except that it returns the key of the first\n * element `predicate` returns truthy for instead of the element itself.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findKey(users, function(o) { return o.age < 40; });\n * // => 'barney' (iteration order is not guaranteed)\n *\n * // The `_.matches` iteratee shorthand.\n * _.findKey(users, { 'age': 1, 'active': true });\n * // => 'pebbles'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findKey(users, 'active');\n * // => 'barney'\n */\nfunction findKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwn);\n}\n\nexport default findKey;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIteratee from './_baseIteratee.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nexport default findLastIndex;\n", "import createFind from './_createFind.js';\nimport findLastIndex from './findLastIndex.js';\n\n/**\n * This method is like `_.find` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=collection.length-1] The index to search from.\n * @returns {*} Returns the matched element, else `undefined`.\n * @example\n *\n * _.findLast([1, 2, 3, 4], function(n) {\n *   return n % 2 == 1;\n * });\n * // => 3\n */\nvar findLast = createFind(findLastIndex);\n\nexport default findLast;\n", "import baseFindKey from './_baseFindKey.js';\nimport baseForOwnRight from './_baseForOwnRight.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * This method is like `_.findKey` except that it iterates over elements of\n * a collection in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {string|undefined} Returns the key of the matched element,\n *  else `undefined`.\n * @example\n *\n * var users = {\n *   'barney':  { 'age': 36, 'active': true },\n *   'fred':    { 'age': 40, 'active': false },\n *   'pebbles': { 'age': 1,  'active': true }\n * };\n *\n * _.findLastKey(users, function(o) { return o.age < 40; });\n * // => returns 'pebbles' assuming `_.findKey` returns 'barney'\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastKey(users, { 'age': 36, 'active': true });\n * // => 'barney'\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastKey(users, ['active', false]);\n * // => 'fred'\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastKey(users, 'active');\n * // => 'pebbles'\n */\nfunction findLastKey(object, predicate) {\n  return baseFindKey(object, baseIteratee(predicate, 3), baseForOwnRight);\n}\n\nexport default findLastKey;\n", "/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nexport default head;\n", "import baseEach from './_baseEach.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * The base implementation of `_.map` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction baseMap(collection, iteratee) {\n  var index = -1,\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value, key, collection) {\n    result[++index] = iteratee(value, key, collection);\n  });\n  return result;\n}\n\nexport default baseMap;\n", "import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of values by running each element in `collection` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.every`, `_.filter`, `_.map`, `_.mapValues`, `_.reject`, and `_.some`.\n *\n * The guarded methods are:\n * `ary`, `chunk`, `curry`, `curryRight`, `drop`, `dropRight`, `every`,\n * `fill`, `invert`, `parseInt`, `random`, `range`, `rangeRight`, `repeat`,\n * `sampleSize`, `slice`, `some`, `sortBy`, `split`, `take`, `takeRight`,\n * `template`, `trim`, `trimEnd`, `trimStart`, and `words`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * _.map([4, 8], square);\n * // => [16, 64]\n *\n * _.map({ 'a': 4, 'b': 8 }, square);\n * // => [16, 64] (iteration order is not guaranteed)\n *\n * var users = [\n *   { 'user': 'barney' },\n *   { 'user': 'fred' }\n * ];\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, 'user');\n * // => ['barney', 'fred']\n */\nfunction map(collection, iteratee) {\n  var func = isArray(collection) ? arrayMap : baseMap;\n  return func(collection, baseIteratee(iteratee, 3));\n}\n\nexport default map;\n", "import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/**\n * Creates a flattened array of values by running each element in `collection`\n * thru `iteratee` and flattening the mapped results. The iteratee is invoked\n * with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [n, n];\n * }\n *\n * _.flatMap([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMap(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), 1);\n}\n\nexport default flatMap;\n", "import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDeep([1, 2], duplicate);\n * // => [1, 1, 2, 2]\n */\nfunction flatMapDeep(collection, iteratee) {\n  return baseFlatten(map(collection, iteratee), INFINITY);\n}\n\nexport default flatMapDeep;\n", "import baseFlatten from './_baseFlatten.js';\nimport map from './map.js';\nimport toInteger from './toInteger.js';\n\n/**\n * This method is like `_.flatMap` except that it recursively flattens the\n * mapped results up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * function duplicate(n) {\n *   return [[[n, n]]];\n * }\n *\n * _.flatMapDepth([1, 2], duplicate, 2);\n * // => [[1, 1], [2, 2]]\n */\nfunction flatMapDepth(collection, iteratee, depth) {\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(map(collection, iteratee), depth);\n}\n\nexport default flatMapDepth;\n", "import baseFlatten from './_baseFlatten.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Recursively flattens `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * _.flattenDeep([1, [2, [3, [4]], 5]]);\n * // => [1, 2, 3, 4, 5]\n */\nfunction flattenDeep(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseFlatten(array, INFINITY) : [];\n}\n\nexport default flattenDeep;\n", "import baseFlatten from './_baseFlatten.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Recursively flatten `array` up to `depth` times.\n *\n * @static\n * @memberOf _\n * @since 4.4.0\n * @category Array\n * @param {Array} array The array to flatten.\n * @param {number} [depth=1] The maximum recursion depth.\n * @returns {Array} Returns the new flattened array.\n * @example\n *\n * var array = [1, [2, [3, [4]], 5]];\n *\n * _.flattenDepth(array, 1);\n * // => [1, 2, [3, [4]], 5]\n *\n * _.flattenDepth(array, 2);\n * // => [1, 2, 3, [4], 5]\n */\nfunction flattenDepth(array, depth) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  depth = depth === undefined ? 1 : toInteger(depth);\n  return baseFlatten(array, depth);\n}\n\nexport default flattenDepth;\n", "import createWrap from './_createWrap.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_FLIP_FLAG = 512;\n\n/**\n * Creates a function that invokes `func` with arguments reversed.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to flip arguments for.\n * @returns {Function} Returns the new flipped function.\n * @example\n *\n * var flipped = _.flip(function() {\n *   return _.toArray(arguments);\n * });\n *\n * flipped('a', 'b', 'c', 'd');\n * // => ['d', 'c', 'b', 'a']\n */\nfunction flip(func) {\n  return createWrap(func, WRAP_FLIP_FLAG);\n}\n\nexport default flip;\n", "import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded down to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round down.\n * @param {number} [precision=0] The precision to round down to.\n * @returns {number} Returns the rounded down number.\n * @example\n *\n * _.floor(4.006);\n * // => 4\n *\n * _.floor(0.046, 2);\n * // => 0.04\n *\n * _.floor(4060, -2);\n * // => 4000\n */\nvar floor = createRound('floor');\n\nexport default floor;\n", "import LodashWrapper from './_LodashWrapper.js';\nimport flatRest from './_flatRest.js';\nimport getData from './_getData.js';\nimport getFuncName from './_getFuncName.js';\nimport isArray from './isArray.js';\nimport isLaziable from './_isLaziable.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_CURRY_FLAG = 8,\n    WRAP_PARTIAL_FLAG = 32,\n    WRAP_ARY_FLAG = 128,\n    WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a `_.flow` or `_.flowRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new flow function.\n */\nfunction createFlow(fromRight) {\n  return flatRest(function(funcs) {\n    var length = funcs.length,\n        index = length,\n        prereq = LodashWrapper.prototype.thru;\n\n    if (fromRight) {\n      funcs.reverse();\n    }\n    while (index--) {\n      var func = funcs[index];\n      if (typeof func != 'function') {\n        throw new TypeError(FUNC_ERROR_TEXT);\n      }\n      if (prereq && !wrapper && getFuncName(func) == 'wrapper') {\n        var wrapper = new LodashWrapper([], true);\n      }\n    }\n    index = wrapper ? index : length;\n    while (++index < length) {\n      func = funcs[index];\n\n      var funcName = getFuncName(func),\n          data = funcName == 'wrapper' ? getData(func) : undefined;\n\n      if (data && isLaziable(data[0]) &&\n            data[1] == (WRAP_ARY_FLAG | WRAP_CURRY_FLAG | WRAP_PARTIAL_FLAG | WRAP_REARG_FLAG) &&\n            !data[4].length && data[9] == 1\n          ) {\n        wrapper = wrapper[getFuncName(data[0])].apply(wrapper, data[3]);\n      } else {\n        wrapper = (func.length == 1 && isLaziable(func))\n          ? wrapper[funcName]()\n          : wrapper.thru(func);\n      }\n    }\n    return function() {\n      var args = arguments,\n          value = args[0];\n\n      if (wrapper && args.length == 1 && isArray(value)) {\n        return wrapper.plant(value).value();\n      }\n      var index = 0,\n          result = length ? funcs[index].apply(this, args) : value;\n\n      while (++index < length) {\n        result = funcs[index].call(this, result);\n      }\n      return result;\n    };\n  });\n}\n\nexport default createFlow;\n", "import createFlow from './_createFlow.js';\n\n/**\n * Creates a function that returns the result of invoking the given functions\n * with the `this` binding of the created function, where each successive\n * invocation is supplied the return value of the previous.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flowRight\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flow([_.add, square]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flow = createFlow();\n\nexport default flow;\n", "import createFlow from './_createFlow.js';\n\n/**\n * This method is like `_.flow` except that it creates a function that\n * invokes the given functions from right to left.\n *\n * @static\n * @since 3.0.0\n * @memberOf _\n * @category Util\n * @param {...(Function|Function[])} [funcs] The functions to invoke.\n * @returns {Function} Returns the new composite function.\n * @see _.flow\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var addSquare = _.flowRight([square, _.add]);\n * addSquare(1, 2);\n * // => 9\n */\nvar flowRight = createFlow(true);\n\nexport default flowRight;\n", "import baseFor from './_baseFor.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Iterates over own and inherited enumerable string keyed properties of an\n * object and invokes `iteratee` for each property. The iteratee is invoked\n * with three arguments: (value, key, object). Iteratee functions may exit\n * iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forInRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forIn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a', 'b', then 'c' (iteration order is not guaranteed).\n */\nfunction forIn(object, iteratee) {\n  return object == null\n    ? object\n    : baseFor(object, castFunction(iteratee), keysIn);\n}\n\nexport default forIn;\n", "import baseForRight from './_baseForRight.js';\nimport castFunction from './_castFunction.js';\nimport keysIn from './keysIn.js';\n\n/**\n * This method is like `_.forIn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forIn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forInRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'c', 'b', then 'a' assuming `_.forIn` logs 'a', 'b', then 'c'.\n */\nfunction forInRight(object, iteratee) {\n  return object == null\n    ? object\n    : baseForRight(object, castFunction(iteratee), keysIn);\n}\n\nexport default forInRight;\n", "import baseForOwn from './_baseForOwn.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * Iterates over own enumerable string keyed properties of an object and\n * invokes `iteratee` for each property. The iteratee is invoked with three\n * arguments: (value, key, object). Iteratee functions may exit iteration\n * early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 0.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwnRight\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwn(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'a' then 'b' (iteration order is not guaranteed).\n */\nfunction forOwn(object, iteratee) {\n  return object && baseForOwn(object, castFunction(iteratee));\n}\n\nexport default forOwn;\n", "import baseForOwnRight from './_baseForOwnRight.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * This method is like `_.forOwn` except that it iterates over properties of\n * `object` in the opposite order.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns `object`.\n * @see _.forOwn\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.forOwnRight(new Foo, function(value, key) {\n *   console.log(key);\n * });\n * // => Logs 'b' then 'a' assuming `_.forOwn` logs 'a' then 'b'.\n */\nfunction forOwnRight(object, iteratee) {\n  return object && baseForOwnRight(object, castFunction(iteratee));\n}\n\nexport default forOwnRight;\n", "/**\n * The inverse of `_.toPairs`; this method returns an object composed\n * from key-value `pairs`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} pairs The key-value pairs.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.fromPairs([['a', 1], ['b', 2]]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction fromPairs(pairs) {\n  var index = -1,\n      length = pairs == null ? 0 : pairs.length,\n      result = {};\n\n  while (++index < length) {\n    var pair = pairs[index];\n    result[pair[0]] = pair[1];\n  }\n  return result;\n}\n\nexport default fromPairs;\n", "import arrayFilter from './_arrayFilter.js';\nimport isFunction from './isFunction.js';\n\n/**\n * The base implementation of `_.functions` which creates an array of\n * `object` function property names filtered from `props`.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Array} props The property names to filter.\n * @returns {Array} Returns the function names.\n */\nfunction baseFunctions(object, props) {\n  return arrayFilter(props, function(key) {\n    return isFunction(object[key]);\n  });\n}\n\nexport default baseFunctions;\n", "import baseFunctions from './_baseFunctions.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of function property names from own enumerable properties\n * of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the function names.\n * @see _.functionsIn\n * @example\n *\n * function Foo() {\n *   this.a = _.constant('a');\n *   this.b = _.constant('b');\n * }\n *\n * Foo.prototype.c = _.constant('c');\n *\n * _.functions(new Foo);\n * // => ['a', 'b']\n */\nfunction functions(object) {\n  return object == null ? [] : baseFunctions(object, keys(object));\n}\n\nexport default functions;\n", "import baseFunctions from './_baseFunctions.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of function property names from own and inherited\n * enumerable properties of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to inspect.\n * @returns {Array} Returns the function names.\n * @see _.functions\n * @example\n *\n * function Foo() {\n *   this.a = _.constant('a');\n *   this.b = _.constant('b');\n * }\n *\n * Foo.prototype.c = _.constant('c');\n *\n * _.functionsIn(new Foo);\n * // => ['a', 'b', 'c']\n */\nfunction functionsIn(object) {\n  return object == null ? [] : baseFunctions(object, keysIn(object));\n}\n\nexport default functionsIn;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n", "/**\n * The base implementation of `_.gt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n */\nfunction baseGt(value, other) {\n  return value > other;\n}\n\nexport default baseGt;\n", "import toNumber from './toNumber.js';\n\n/**\n * Creates a function that performs a relational operation on two values.\n *\n * @private\n * @param {Function} operator The function to perform the operation.\n * @returns {Function} Returns the new relational operation function.\n */\nfunction createRelationalOperation(operator) {\n  return function(value, other) {\n    if (!(typeof value == 'string' && typeof other == 'string')) {\n      value = toNumber(value);\n      other = toNumber(other);\n    }\n    return operator(value, other);\n  };\n}\n\nexport default createRelationalOperation;\n", "import baseGt from './_baseGt.js';\nimport createRelationalOperation from './_createRelationalOperation.js';\n\n/**\n * Checks if `value` is greater than `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than `other`,\n *  else `false`.\n * @see _.lt\n * @example\n *\n * _.gt(3, 1);\n * // => true\n *\n * _.gt(3, 3);\n * // => false\n *\n * _.gt(1, 3);\n * // => false\n */\nvar gt = createRelationalOperation(baseGt);\n\nexport default gt;\n", "import createRelationalOperation from './_createRelationalOperation.js';\n\n/**\n * Checks if `value` is greater than or equal to `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is greater than or equal to\n *  `other`, else `false`.\n * @see _.lte\n * @example\n *\n * _.gte(3, 1);\n * // => true\n *\n * _.gte(3, 3);\n * // => true\n *\n * _.gte(1, 3);\n * // => false\n */\nvar gte = createRelationalOperation(function(value, other) {\n  return value >= other;\n});\n\nexport default gte;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.has` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHas(object, key) {\n  return object != null && hasOwnProperty.call(object, key);\n}\n\nexport default baseHas;\n", "import baseHas from './_baseHas.js';\nimport hasPath from './_hasPath.js';\n\n/**\n * Checks if `path` is a direct property of `object`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = { 'a': { 'b': 2 } };\n * var other = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.has(object, 'a');\n * // => true\n *\n * _.has(object, 'a.b');\n * // => true\n *\n * _.has(object, ['a', 'b']);\n * // => true\n *\n * _.has(other, 'a');\n * // => false\n */\nfunction has(object, path) {\n  return object != null && hasPath(object, path, baseHas);\n}\n\nexport default has;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.inRange` which doesn't coerce arguments.\n *\n * @private\n * @param {number} number The number to check.\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n */\nfunction baseInRange(number, start, end) {\n  return number >= nativeMin(start, end) && number < nativeMax(start, end);\n}\n\nexport default baseInRange;\n", "import baseInRange from './_baseInRange.js';\nimport toFinite from './toFinite.js';\nimport toNumber from './toNumber.js';\n\n/**\n * Checks if `n` is between `start` and up to, but not including, `end`. If\n * `end` is not specified, it's set to `start` with `start` then set to `0`.\n * If `start` is greater than `end` the params are swapped to support\n * negative ranges.\n *\n * @static\n * @memberOf _\n * @since 3.3.0\n * @category Number\n * @param {number} number The number to check.\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @returns {boolean} Returns `true` if `number` is in the range, else `false`.\n * @see _.range, _.rangeRight\n * @example\n *\n * _.inRange(3, 2, 4);\n * // => true\n *\n * _.inRange(4, 8);\n * // => true\n *\n * _.inRange(4, 2);\n * // => false\n *\n * _.inRange(2, 2);\n * // => false\n *\n * _.inRange(1.2, 2);\n * // => true\n *\n * _.inRange(5.2, 4);\n * // => false\n *\n * _.inRange(-3, -2, -6);\n * // => true\n */\nfunction inRange(number, start, end) {\n  start = toFinite(start);\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  } else {\n    end = toFinite(end);\n  }\n  number = toNumber(number);\n  return baseInRange(number, start, end);\n}\n\nexport default inRange;\n", "import baseGetTag from './_baseGetTag.js';\nimport isArray from './isArray.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar stringTag = '[object String]';\n\n/**\n * Checks if `value` is classified as a `String` primitive or object.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a string, else `false`.\n * @example\n *\n * _.isString('abc');\n * // => true\n *\n * _.isString(1);\n * // => false\n */\nfunction isString(value) {\n  return typeof value == 'string' ||\n    (!isArray(value) && isObjectLike(value) && baseGetTag(value) == stringTag);\n}\n\nexport default isString;\n", "import arrayMap from './_arrayMap.js';\n\n/**\n * The base implementation of `_.values` and `_.valuesIn` which creates an\n * array of `object` property values corresponding to the property names\n * of `props`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} props The property names to get values for.\n * @returns {Object} Returns the array of property values.\n */\nfunction baseValues(object, props) {\n  return arrayMap(props, function(key) {\n    return object[key];\n  });\n}\n\nexport default baseValues;\n", "import baseValues from './_baseValues.js';\nimport keys from './keys.js';\n\n/**\n * Creates an array of the own enumerable string keyed property values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.values(new Foo);\n * // => [1, 2] (iteration order is not guaranteed)\n *\n * _.values('hi');\n * // => ['h', 'i']\n */\nfunction values(object) {\n  return object == null ? [] : baseValues(object, keys(object));\n}\n\nexport default values;\n", "import baseIndexOf from './_baseIndexOf.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport toInteger from './toInteger.js';\nimport values from './values.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Checks if `value` is in `collection`. If `collection` is a string, it's\n * checked for a substring of `value`, otherwise\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * is used for equality comparisons. If `fromIndex` is negative, it's used as\n * the offset from the end of `collection`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {boolean} Returns `true` if `value` is found, else `false`.\n * @example\n *\n * _.includes([1, 2, 3], 1);\n * // => true\n *\n * _.includes([1, 2, 3], 1, 2);\n * // => false\n *\n * _.includes({ 'a': 1, 'b': 2 }, 1);\n * // => true\n *\n * _.includes('abcd', 'bc');\n * // => true\n */\nfunction includes(collection, value, fromIndex, guard) {\n  collection = isArrayLike(collection) ? collection : values(collection);\n  fromIndex = (fromIndex && !guard) ? toInteger(fromIndex) : 0;\n\n  var length = collection.length;\n  if (fromIndex < 0) {\n    fromIndex = nativeMax(length + fromIndex, 0);\n  }\n  return isString(collection)\n    ? (fromIndex <= length && collection.indexOf(value, fromIndex) > -1)\n    : (!!length && baseIndexOf(collection, value, fromIndex) > -1);\n}\n\nexport default includes;\n", "import baseIndexOf from './_baseIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Gets the index at which the first occurrence of `value` is found in `array`\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. If `fromIndex` is negative, it's used as the\n * offset from the end of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=0] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.indexOf([1, 2, 1, 2], 2);\n * // => 1\n *\n * // Search from the `fromIndex`.\n * _.indexOf([1, 2, 1, 2], 2, 2);\n * // => 3\n */\nfunction indexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = fromIndex == null ? 0 : toInteger(fromIndex);\n  if (index < 0) {\n    index = nativeMax(length + index, 0);\n  }\n  return baseIndexOf(array, value, index);\n}\n\nexport default indexOf;\n", "import baseSlice from './_baseSlice.js';\n\n/**\n * Gets all but the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.initial([1, 2, 3]);\n * // => [1, 2]\n */\nfunction initial(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 0, -1) : [];\n}\n\nexport default initial;\n", "import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport arrayMap from './_arrayMap.js';\nimport baseUnary from './_baseUnary.js';\nimport cacheHas from './_cacheHas.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseIntersection;\n", "import isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nexport default castArrayLikeObject;\n", "import arrayMap from './_arrayMap.js';\nimport baseIntersection from './_baseIntersection.js';\nimport baseRest from './_baseRest.js';\nimport castArrayLikeObject from './_castArrayLikeObject.js';\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nexport default intersection;\n", "import arrayMap from './_arrayMap.js';\nimport baseIntersection from './_baseIntersection.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport castArrayLikeObject from './_castArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.intersection` except that it accepts `iteratee`\n * which is invoked for each element of each `arrays` to generate the criterion\n * by which they're compared. The order and references of result values are\n * determined by the first array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersectionBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [2.1]\n *\n * // The `_.property` iteratee shorthand.\n * _.intersectionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }]\n */\nvar intersectionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  if (iteratee === last(mapped)) {\n    iteratee = undefined;\n  } else {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, baseIteratee(iteratee, 2))\n    : [];\n});\n\nexport default intersectionBy;\n", "import arrayMap from './_arrayMap.js';\nimport baseIntersection from './_baseIntersection.js';\nimport baseRest from './_baseRest.js';\nimport castArrayLikeObject from './_castArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.intersection` except that it accepts `comparator`\n * which is invoked to compare elements of `arrays`. The order and references\n * of result values are determined by the first array. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.intersectionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }]\n */\nvar intersectionWith = baseRest(function(arrays) {\n  var comparator = last(arrays),\n      mapped = arrayMap(arrays, castArrayLikeObject);\n\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  if (comparator) {\n    mapped.pop();\n  }\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped, undefined, comparator)\n    : [];\n});\n\nexport default intersectionWith;\n", "import baseForOwn from './_baseForOwn.js';\n\n/**\n * The base implementation of `_.invert` and `_.invertBy` which inverts\n * `object` with values transformed by `iteratee` and set by `setter`.\n *\n * @private\n * @param {Object} object The object to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform values.\n * @param {Object} accumulator The initial inverted object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseInverter(object, setter, iteratee, accumulator) {\n  baseForOwn(object, function(value, key, object) {\n    setter(accumulator, iteratee(value), key, object);\n  });\n  return accumulator;\n}\n\nexport default baseInverter;\n", "import baseInverter from './_baseInverter.js';\n\n/**\n * Creates a function like `_.invertBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} toIteratee The function to resolve iteratees.\n * @returns {Function} Returns the new inverter function.\n */\nfunction createInverter(setter, toIteratee) {\n  return function(object, iteratee) {\n    return baseInverter(object, setter, toIteratee(iteratee), {});\n  };\n}\n\nexport default createInverter;\n", "import constant from './constant.js';\nimport createInverter from './_createInverter.js';\nimport identity from './identity.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Creates an object composed of the inverted keys and values of `object`.\n * If `object` contains duplicate values, subsequent values overwrite\n * property assignments of previous values.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Object\n * @param {Object} object The object to invert.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invert(object);\n * // => { '1': 'c', '2': 'b' }\n */\nvar invert = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  result[value] = key;\n}, constant(identity));\n\nexport default invert;\n", "import baseIteratee from './_baseIteratee.js';\nimport createInverter from './_createInverter.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * This method is like `_.invert` except that the inverted object is generated\n * from the results of running each element of `object` thru `iteratee`. The\n * corresponding inverted value of each inverted key is an array of keys\n * responsible for generating the inverted value. The iteratee is invoked\n * with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Object\n * @param {Object} object The object to invert.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Object} Returns the new inverted object.\n * @example\n *\n * var object = { 'a': 1, 'b': 2, 'c': 1 };\n *\n * _.invertBy(object);\n * // => { '1': ['a', 'c'], '2': ['b'] }\n *\n * _.invertBy(object, function(value) {\n *   return 'group' + value;\n * });\n * // => { 'group1': ['a', 'c'], 'group2': ['b'] }\n */\nvar invertBy = createInverter(function(result, value, key) {\n  if (value != null &&\n      typeof value.toString != 'function') {\n    value = nativeObjectToString.call(value);\n  }\n\n  if (hasOwnProperty.call(result, value)) {\n    result[value].push(key);\n  } else {\n    result[value] = [key];\n  }\n}, baseIteratee);\n\nexport default invertBy;\n", "import baseGet from './_baseGet.js';\nimport baseSlice from './_baseSlice.js';\n\n/**\n * Gets the parent value at `path` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array} path The path to get the parent value of.\n * @returns {*} Returns the parent value.\n */\nfunction parent(object, path) {\n  return path.length < 2 ? object : baseGet(object, baseSlice(path, 0, -1));\n}\n\nexport default parent;\n", "import apply from './_apply.js';\nimport castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.invoke` without support for individual\n * method arguments.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the method to invoke.\n * @param {Array} args The arguments to invoke the method with.\n * @returns {*} Returns the result of the invoked method.\n */\nfunction baseInvoke(object, path, args) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  var func = object == null ? object : object[toKey(last(path))];\n  return func == null ? undefined : apply(func, object, args);\n}\n\nexport default baseInvoke;\n", "import baseInvoke from './_baseInvoke.js';\nimport baseRest from './_baseRest.js';\n\n/**\n * Invokes the method at `path` of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the method to invoke.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {*} Returns the result of the invoked method.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': [1, 2, 3, 4] } }] };\n *\n * _.invoke(object, 'a[0].b.c.slice', 1, 3);\n * // => [2, 3]\n */\nvar invoke = baseRest(baseInvoke);\n\nexport default invoke;\n", "import apply from './_apply.js';\nimport baseEach from './_baseEach.js';\nimport baseInvoke from './_baseInvoke.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Invokes the method at `path` of each element in `collection`, returning\n * an array of the results of each invoked method. Any additional arguments\n * are provided to each invoked method. If `path` is a function, it's invoked\n * for, and `this` bound to, each element in `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array|Function|string} path The path of the method to invoke or\n *  the function invoked per iteration.\n * @param {...*} [args] The arguments to invoke each method with.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.invokeMap([[5, 1, 7], [3, 2, 1]], 'sort');\n * // => [[1, 5, 7], [1, 2, 3]]\n *\n * _.invokeMap([123, 456], String.prototype.split, '');\n * // => [['1', '2', '3'], ['4', '5', '6']]\n */\nvar invokeMap = baseRest(function(collection, path, args) {\n  var index = -1,\n      isFunc = typeof path == 'function',\n      result = isArrayLike(collection) ? Array(collection.length) : [];\n\n  baseEach(collection, function(value) {\n    result[++index] = isFunc ? apply(path, value, args) : baseInvoke(value, path, args);\n  });\n  return result;\n});\n\nexport default invokeMap;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\nvar arrayBufferTag = '[object ArrayBuffer]';\n\n/**\n * The base implementation of `_.isArrayBuffer` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n */\nfunction baseIsArrayBuffer(value) {\n  return isObjectLike(value) && baseGetTag(value) == arrayBufferTag;\n}\n\nexport default baseIsArrayBuffer;\n", "import baseIsArrayBuffer from './_baseIsArrayBuffer.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsArrayBuffer = nodeUtil && nodeUtil.isArrayBuffer;\n\n/**\n * Checks if `value` is classified as an `ArrayBuffer` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array buffer, else `false`.\n * @example\n *\n * _.isArrayBuffer(new ArrayBuffer(2));\n * // => true\n *\n * _.isArrayBuffer(new Array(2));\n * // => false\n */\nvar isArrayBuffer = nodeIsArrayBuffer ? baseUnary(nodeIsArrayBuffer) : baseIsArrayBuffer;\n\nexport default isArrayBuffer;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]';\n\n/**\n * Checks if `value` is classified as a boolean primitive or object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a boolean, else `false`.\n * @example\n *\n * _.isBoolean(false);\n * // => true\n *\n * _.isBoolean(null);\n * // => false\n */\nfunction isBoolean(value) {\n  return value === true || value === false ||\n    (isObjectLike(value) && baseGetTag(value) == boolTag);\n}\n\nexport default isBoolean;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar dateTag = '[object Date]';\n\n/**\n * The base implementation of `_.isDate` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n */\nfunction baseIsDate(value) {\n  return isObjectLike(value) && baseGetTag(value) == dateTag;\n}\n\nexport default baseIsDate;\n", "import baseIsDate from './_baseIsDate.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsDate = nodeUtil && nodeUtil.isDate;\n\n/**\n * Checks if `value` is classified as a `Date` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a date object, else `false`.\n * @example\n *\n * _.isDate(new Date);\n * // => true\n *\n * _.isDate('Mon April 23 2012');\n * // => false\n */\nvar isDate = nodeIsDate ? baseUnary(nodeIsDate) : baseIsDate;\n\nexport default isDate;\n", "import isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\n\n/**\n * Checks if `value` is likely a DOM element.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a DOM element, else `false`.\n * @example\n *\n * _.isElement(document.body);\n * // => true\n *\n * _.isElement('<body>');\n * // => false\n */\nfunction isElement(value) {\n  return isObjectLike(value) && value.nodeType === 1 && !isPlainObject(value);\n}\n\nexport default isElement;\n", "import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayLike from './isArrayLike.js';\nimport isBuffer from './isBuffer.js';\nimport isPrototype from './_isPrototype.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if `value` is an empty object, collection, map, or set.\n *\n * Objects are considered empty if they have no own enumerable string keyed\n * properties.\n *\n * Array-like values such as `arguments` objects, arrays, buffers, strings, or\n * jQuery-like collections are considered empty if they have a `length` of `0`.\n * Similarly, maps and sets are considered empty if they have a `size` of `0`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is empty, else `false`.\n * @example\n *\n * _.isEmpty(null);\n * // => true\n *\n * _.isEmpty(true);\n * // => true\n *\n * _.isEmpty(1);\n * // => true\n *\n * _.isEmpty([1, 2, 3]);\n * // => false\n *\n * _.isEmpty({ 'a': 1 });\n * // => false\n */\nfunction isEmpty(value) {\n  if (value == null) {\n    return true;\n  }\n  if (isArrayLike(value) &&\n      (isArray(value) || typeof value == 'string' || typeof value.splice == 'function' ||\n        isBuffer(value) || isTypedArray(value) || isArguments(value))) {\n    return !value.length;\n  }\n  var tag = getTag(value);\n  if (tag == mapTag || tag == setTag) {\n    return !value.size;\n  }\n  if (isPrototype(value)) {\n    return !baseKeys(value).length;\n  }\n  for (var key in value) {\n    if (hasOwnProperty.call(value, key)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexport default isEmpty;\n", "import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * Performs a deep comparison between two values to determine if they are\n * equivalent.\n *\n * **Note:** This method supports comparing arrays, array buffers, booleans,\n * date objects, error objects, maps, numbers, `Object` objects, regexes,\n * sets, strings, symbols, and typed arrays. `Object` objects are compared\n * by their own, not inherited, enumerable properties. Functions and DOM\n * nodes are compared by strict equality, i.e. `===`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.isEqual(object, other);\n * // => true\n *\n * object === other;\n * // => false\n */\nfunction isEqual(value, other) {\n  return baseIsEqual(value, other);\n}\n\nexport default isEqual;\n", "import baseIsEqual from './_baseIsEqual.js';\n\n/**\n * This method is like `_.isEqual` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with up to\n * six arguments: (objValue, othValue [, index|key, object, other, stack]).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, othValue) {\n *   if (isGreeting(objValue) && isGreeting(othValue)) {\n *     return true;\n *   }\n * }\n *\n * var array = ['hello', 'goodbye'];\n * var other = ['hi', 'goodbye'];\n *\n * _.isEqualWith(array, other, customizer);\n * // => true\n */\nfunction isEqualWith(value, other, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  var result = customizer ? customizer(value, other) : undefined;\n  return result === undefined ? baseIsEqual(value, other, undefined, customizer) : !!result;\n}\n\nexport default isEqualWith;\n", "import root from './_root.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsFinite = root.isFinite;\n\n/**\n * Checks if `value` is a finite primitive number.\n *\n * **Note:** This method is based on\n * [`Number.isFinite`](https://mdn.io/Number/isFinite).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a finite number, else `false`.\n * @example\n *\n * _.isFinite(3);\n * // => true\n *\n * _.isFinite(Number.MIN_VALUE);\n * // => true\n *\n * _.isFinite(Infinity);\n * // => false\n *\n * _.isFinite('3');\n * // => false\n */\nfunction isFinite(value) {\n  return typeof value == 'number' && nativeIsFinite(value);\n}\n\nexport default isFinite;\n", "import toInteger from './toInteger.js';\n\n/**\n * Checks if `value` is an integer.\n *\n * **Note:** This method is based on\n * [`Number.isInteger`](https://mdn.io/Number/isInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an integer, else `false`.\n * @example\n *\n * _.isInteger(3);\n * // => true\n *\n * _.isInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isInteger(Infinity);\n * // => false\n *\n * _.isInteger('3');\n * // => false\n */\nfunction isInteger(value) {\n  return typeof value == 'number' && value == toInteger(value);\n}\n\nexport default isInteger;\n", "import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\n\n/**\n * Performs a partial deep comparison between `object` and `source` to\n * determine if `object` contains equivalent property values.\n *\n * **Note:** This method is equivalent to `_.matches` when `source` is\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n *\n * _.isMatch(object, { 'b': 2 });\n * // => true\n *\n * _.isMatch(object, { 'b': 1 });\n * // => false\n */\nfunction isMatch(object, source) {\n  return object === source || baseIsMatch(object, source, getMatchData(source));\n}\n\nexport default isMatch;\n", "import baseIsMatch from './_baseIsMatch.js';\nimport getMatchData from './_getMatchData.js';\n\n/**\n * This method is like `_.isMatch` except that it accepts `customizer` which\n * is invoked to compare values. If `customizer` returns `undefined`, comparisons\n * are handled by the method instead. The `customizer` is invoked with five\n * arguments: (objValue, srcValue, index|key, object, source).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n * @example\n *\n * function isGreeting(value) {\n *   return /^h(?:i|ello)$/.test(value);\n * }\n *\n * function customizer(objValue, srcValue) {\n *   if (isGreeting(objValue) && isGreeting(srcValue)) {\n *     return true;\n *   }\n * }\n *\n * var object = { 'greeting': 'hello' };\n * var source = { 'greeting': 'hi' };\n *\n * _.isMatchWith(object, source, customizer);\n * // => true\n */\nfunction isMatchWith(object, source, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return baseIsMatch(object, source, getMatchData(source), customizer);\n}\n\nexport default isMatchWith;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are\n * classified as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a number, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && baseGetTag(value) == numberTag);\n}\n\nexport default isNumber;\n", "import isNumber from './isNumber.js';\n\n/**\n * Checks if `value` is `NaN`.\n *\n * **Note:** This method is based on\n * [`Number.isNaN`](https://mdn.io/Number/isNaN) and is not the same as\n * global [`isNaN`](https://mdn.io/isNaN) which returns `true` for\n * `undefined` and other non-number values.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n * @example\n *\n * _.isNaN(NaN);\n * // => true\n *\n * _.isNaN(new Number(NaN));\n * // => true\n *\n * isNaN(undefined);\n * // => true\n *\n * _.isNaN(undefined);\n * // => false\n */\nfunction isNaN(value) {\n  // An `NaN` primitive is the only value that is not equal to itself.\n  // Perform the `toStringTag` check first to avoid errors with some\n  // ActiveX objects in IE.\n  return isNumber(value) && value != +value;\n}\n\nexport default isNaN;\n", "import coreJsData from './_coreJsData.js';\nimport isFunction from './isFunction.js';\nimport stubFalse from './stubFalse.js';\n\n/**\n * Checks if `func` is capable of being masked.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `func` is maskable, else `false`.\n */\nvar isMaskable = coreJsData ? isFunction : stubFalse;\n\nexport default isMaskable;\n", "import baseIsNative from './_baseIsNative.js';\nimport isMaskable from './_isMaskable.js';\n\n/** Error message constants. */\nvar CORE_ERROR_TEXT = 'Unsupported core-js use. Try https://npms.io/search?q=ponyfill.';\n\n/**\n * Checks if `value` is a pristine native function.\n *\n * **Note:** This method can't reliably detect native functions in the presence\n * of the core-js package because core-js circumvents this kind of detection.\n * Despite multiple requests, the core-js maintainer has made it clear: any\n * attempt to fix the detection will be obstructed. As a result, we're left\n * with little choice but to throw an error. Unfortunately, this also affects\n * packages, like [babel-polyfill](https://www.npmjs.com/package/babel-polyfill),\n * which rely on core-js.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n * @example\n *\n * _.isNative(Array.prototype.push);\n * // => true\n *\n * _.isNative(_);\n * // => false\n */\nfunction isNative(value) {\n  if (isMaskable(value)) {\n    throw new Error(CORE_ERROR_TEXT);\n  }\n  return baseIsNative(value);\n}\n\nexport default isNative;\n", "/**\n * Checks if `value` is `null` or `undefined`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is nullish, else `false`.\n * @example\n *\n * _.isNil(null);\n * // => true\n *\n * _.isNil(void 0);\n * // => true\n *\n * _.isNil(NaN);\n * // => false\n */\nfunction isNil(value) {\n  return value == null;\n}\n\nexport default isNil;\n", "/**\n * Checks if `value` is `null`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `null`, else `false`.\n * @example\n *\n * _.isNull(null);\n * // => true\n *\n * _.isNull(void 0);\n * // => false\n */\nfunction isNull(value) {\n  return value === null;\n}\n\nexport default isNull;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar regexpTag = '[object RegExp]';\n\n/**\n * The base implementation of `_.isRegExp` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n */\nfunction baseIsRegExp(value) {\n  return isObjectLike(value) && baseGetTag(value) == regexpTag;\n}\n\nexport default baseIsRegExp;\n", "import baseIsRegExp from './_baseIsRegExp.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsRegExp = nodeUtil && nodeUtil.isRegExp;\n\n/**\n * Checks if `value` is classified as a `RegExp` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a regexp, else `false`.\n * @example\n *\n * _.isRegExp(/abc/);\n * // => true\n *\n * _.isRegExp('/abc/');\n * // => false\n */\nvar isRegExp = nodeIsRegExp ? baseUnary(nodeIsRegExp) : baseIsRegExp;\n\nexport default isRegExp;\n", "import isInteger from './isInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a safe integer. An integer is safe if it's an IEEE-754\n * double precision number which isn't the result of a rounded unsafe integer.\n *\n * **Note:** This method is based on\n * [`Number.isSafeInteger`](https://mdn.io/Number/isSafeInteger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a safe integer, else `false`.\n * @example\n *\n * _.isSafeInteger(3);\n * // => true\n *\n * _.isSafeInteger(Number.MIN_VALUE);\n * // => false\n *\n * _.isSafeInteger(Infinity);\n * // => false\n *\n * _.isSafeInteger('3');\n * // => false\n */\nfunction isSafeInteger(value) {\n  return isInteger(value) && value >= -MAX_SAFE_INTEGER && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isSafeInteger;\n", "/**\n * Checks if `value` is `undefined`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `undefined`, else `false`.\n * @example\n *\n * _.isUndefined(void 0);\n * // => true\n *\n * _.isUndefined(null);\n * // => false\n */\nfunction isUndefined(value) {\n  return value === undefined;\n}\n\nexport default isUndefined;\n", "import getTag from './_getTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar weakMapTag = '[object WeakMap]';\n\n/**\n * Checks if `value` is classified as a `WeakMap` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a weak map, else `false`.\n * @example\n *\n * _.isWeakMap(new WeakMap);\n * // => true\n *\n * _.isWeakMap(new Map);\n * // => false\n */\nfunction isWeakMap(value) {\n  return isObjectLike(value) && getTag(value) == weakMapTag;\n}\n\nexport default isWeakMap;\n", "import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar weakSetTag = '[object WeakSet]';\n\n/**\n * Checks if `value` is classified as a `WeakSet` object.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a weak set, else `false`.\n * @example\n *\n * _.isWeakSet(new WeakSet);\n * // => true\n *\n * _.isWeakSet(new Set);\n * // => false\n */\nfunction isWeakSet(value) {\n  return isObjectLike(value) && baseGetTag(value) == weakSetTag;\n}\n\nexport default isWeakSet;\n", "import baseClone from './_baseClone.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that invokes `func` with the arguments of the created\n * function. If `func` is a property name, the created function returns the\n * property value for a given element. If `func` is an array or object, the\n * created function returns `true` for elements that contain the equivalent\n * source properties, otherwise it returns `false`.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Util\n * @param {*} [func=_.identity] The value to convert to a callback.\n * @returns {Function} Returns the callback.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': true },\n *   { 'user': 'fred',   'age': 40, 'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.filter(users, _.iteratee({ 'user': 'barney', 'active': true }));\n * // => [{ 'user': 'barney', 'age': 36, 'active': true }]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.filter(users, _.iteratee(['user', 'fred']));\n * // => [{ 'user': 'fred', 'age': 40 }]\n *\n * // The `_.property` iteratee shorthand.\n * _.map(users, _.iteratee('user'));\n * // => ['barney', 'fred']\n *\n * // Create custom iteratee shorthands.\n * _.iteratee = _.wrap(_.iteratee, function(iteratee, func) {\n *   return !_.isRegExp(func) ? iteratee(func) : function(string) {\n *     return func.test(string);\n *   };\n * });\n *\n * _.filter(['abc', 'def'], /ef/);\n * // => ['def']\n */\nfunction iteratee(func) {\n  return baseIteratee(typeof func == 'function' ? func : baseClone(func, CLONE_DEEP_FLAG));\n}\n\nexport default iteratee;\n", "/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeJoin = arrayProto.join;\n\n/**\n * Converts all elements in `array` into a string separated by `separator`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to convert.\n * @param {string} [separator=','] The element separator.\n * @returns {string} Returns the joined string.\n * @example\n *\n * _.join(['a', 'b', 'c'], '~');\n * // => 'a~b~c'\n */\nfunction join(array, separator) {\n  return array == null ? '' : nativeJoin.call(array, separator);\n}\n\nexport default join;\n", "import createCompounder from './_createCompounder.js';\n\n/**\n * Converts `string` to\n * [kebab case](https://en.wikipedia.org/wiki/Letter_case#Special_case_styles).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the kebab cased string.\n * @example\n *\n * _.kebabCase('Foo Bar');\n * // => 'foo-bar'\n *\n * _.kebabCase('fooBar');\n * // => 'foo-bar'\n *\n * _.kebabCase('__FOO_BAR__');\n * // => 'foo-bar'\n */\nvar kebabCase = createCompounder(function(result, word, index) {\n  return result + (index ? '-' : '') + word.toLowerCase();\n});\n\nexport default kebabCase;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The corresponding value of\n * each key is the last element responsible for generating the key. The\n * iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * var array = [\n *   { 'dir': 'left', 'code': 97 },\n *   { 'dir': 'right', 'code': 100 }\n * ];\n *\n * _.keyBy(array, function(o) {\n *   return String.fromCharCode(o.code);\n * });\n * // => { 'a': { 'dir': 'left', 'code': 97 }, 'd': { 'dir': 'right', 'code': 100 } }\n *\n * _.keyBy(array, 'dir');\n * // => { 'left': { 'dir': 'left', 'code': 97 }, 'right': { 'dir': 'right', 'code': 100 } }\n */\nvar keyBy = createAggregator(function(result, value, key) {\n  baseAssignValue(result, key, value);\n});\n\nexport default keyBy;\n", "/**\n * A specialized version of `_.lastIndexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictLastIndexOf(array, value, fromIndex) {\n  var index = fromIndex + 1;\n  while (index--) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return index;\n}\n\nexport default strictLastIndexOf;\n", "import baseFindIndex from './_baseFindIndex.js';\nimport baseIsNaN from './_baseIsNaN.js';\nimport strictLastIndexOf from './_strictLastIndexOf.js';\nimport toInteger from './toInteger.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.indexOf` except that it iterates over elements of\n * `array` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.lastIndexOf([1, 2, 1, 2], 2);\n * // => 3\n *\n * // Search from the `fromIndex`.\n * _.lastIndexOf([1, 2, 1, 2], 2, 2);\n * // => 1\n */\nfunction lastIndexOf(array, value, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = index < 0 ? nativeMax(length + index, 0) : nativeMin(index, length - 1);\n  }\n  return value === value\n    ? strictLastIndexOf(array, value, index)\n    : baseFindIndex(array, baseIsNaN, index, true);\n}\n\nexport default lastIndexOf;\n", "import createCompounder from './_createCompounder.js';\n\n/**\n * Converts `string`, as space separated words, to lower case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the lower cased string.\n * @example\n *\n * _.lowerCase('--Foo-Bar--');\n * // => 'foo bar'\n *\n * _.lowerCase('fooBar');\n * // => 'foo bar'\n *\n * _.lowerCase('__FOO_BAR__');\n * // => 'foo bar'\n */\nvar lowerCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + word.toLowerCase();\n});\n\nexport default lowerCase;\n", "import createCaseFirst from './_createCaseFirst.js';\n\n/**\n * Converts the first character of `string` to lower case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.lowerFirst('Fred');\n * // => 'fred'\n *\n * _.lowerFirst('FRED');\n * // => 'fRED'\n */\nvar lowerFirst = createCaseFirst('toLowerCase');\n\nexport default lowerFirst;\n", "/**\n * The base implementation of `_.lt` which doesn't coerce arguments.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n */\nfunction baseLt(value, other) {\n  return value < other;\n}\n\nexport default baseLt;\n", "import baseLt from './_baseLt.js';\nimport createRelationalOperation from './_createRelationalOperation.js';\n\n/**\n * Checks if `value` is less than `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than `other`,\n *  else `false`.\n * @see _.gt\n * @example\n *\n * _.lt(1, 3);\n * // => true\n *\n * _.lt(3, 3);\n * // => false\n *\n * _.lt(3, 1);\n * // => false\n */\nvar lt = createRelationalOperation(baseLt);\n\nexport default lt;\n", "import createRelationalOperation from './_createRelationalOperation.js';\n\n/**\n * Checks if `value` is less than or equal to `other`.\n *\n * @static\n * @memberOf _\n * @since 3.9.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if `value` is less than or equal to\n *  `other`, else `false`.\n * @see _.gte\n * @example\n *\n * _.lte(1, 3);\n * // => true\n *\n * _.lte(3, 3);\n * // => true\n *\n * _.lte(3, 1);\n * // => false\n */\nvar lte = createRelationalOperation(function(value, other) {\n  return value <= other;\n});\n\nexport default lte;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * The opposite of `_.mapValues`; this method creates an object with the\n * same values as `object` and keys generated by running each own enumerable\n * string keyed property of `object` thru `iteratee`. The iteratee is invoked\n * with three arguments: (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapValues\n * @example\n *\n * _.mapKeys({ 'a': 1, 'b': 2 }, function(value, key) {\n *   return key + value;\n * });\n * // => { 'a1': 1, 'b2': 2 }\n */\nfunction mapKeys(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, iteratee(value, key, object), value);\n  });\n  return result;\n}\n\nexport default mapKeys;\n", "import baseAssignValue from './_baseAssignValue.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * Creates an object with the same keys as `object` and values generated\n * by running each own enumerable string keyed property of `object` thru\n * `iteratee`. The iteratee is invoked with three arguments:\n * (value, key, object).\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Object} Returns the new mapped object.\n * @see _.mapKeys\n * @example\n *\n * var users = {\n *   'fred':    { 'user': 'fred',    'age': 40 },\n *   'pebbles': { 'user': 'pebbles', 'age': 1 }\n * };\n *\n * _.mapValues(users, function(o) { return o.age; });\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n *\n * // The `_.property` iteratee shorthand.\n * _.mapValues(users, 'age');\n * // => { 'fred': 40, 'pebbles': 1 } (iteration order is not guaranteed)\n */\nfunction mapValues(object, iteratee) {\n  var result = {};\n  iteratee = baseIteratee(iteratee, 3);\n\n  baseForOwn(object, function(value, key, object) {\n    baseAssignValue(result, key, iteratee(value, key, object));\n  });\n  return result;\n}\n\nexport default mapValues;\n", "import baseClone from './_baseClone.js';\nimport baseMatches from './_baseMatches.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between a given\n * object and `source`, returning `true` if the given object has equivalent\n * property values, else `false`.\n *\n * **Note:** The created function is equivalent to `_.isMatch` with `source`\n * partially applied.\n *\n * Partial comparisons will match empty array and empty object `source`\n * values against any array or object value, respectively. See `_.isEqual`\n * for a list of supported value comparisons.\n *\n * **Note:** Multiple values can be checked by combining several matchers\n * using `_.overSome`\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.filter(objects, _.matches({ 'a': 4, 'c': 6 }));\n * // => [{ 'a': 4, 'b': 5, 'c': 6 }]\n *\n * // Checking for several possible values\n * _.filter(objects, _.overSome([_.matches({ 'a': 1 }), _.matches({ 'a': 4 })]));\n * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matches(source) {\n  return baseMatches(baseClone(source, CLONE_DEEP_FLAG));\n}\n\nexport default matches;\n", "import baseClone from './_baseClone.js';\nimport baseMatchesProperty from './_baseMatchesProperty.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1;\n\n/**\n * Creates a function that performs a partial deep comparison between the\n * value at `path` of a given object to `srcValue`, returning `true` if the\n * object value is equivalent, else `false`.\n *\n * **Note:** Partial comparisons will match empty array and empty object\n * `srcValue` values against any array or object value, respectively. See\n * `_.isEqual` for a list of supported value comparisons.\n *\n * **Note:** Multiple values can be checked by combining several matchers\n * using `_.overSome`\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n * @example\n *\n * var objects = [\n *   { 'a': 1, 'b': 2, 'c': 3 },\n *   { 'a': 4, 'b': 5, 'c': 6 }\n * ];\n *\n * _.find(objects, _.matchesProperty('a', 4));\n * // => { 'a': 4, 'b': 5, 'c': 6 }\n *\n * // Checking for several possible values\n * _.filter(objects, _.overSome([_.matchesProperty('a', 1), _.matchesProperty('a', 4)]));\n * // => [{ 'a': 1, 'b': 2, 'c': 3 }, { 'a': 4, 'b': 5, 'c': 6 }]\n */\nfunction matchesProperty(path, srcValue) {\n  return baseMatchesProperty(path, baseClone(srcValue, CLONE_DEEP_FLAG));\n}\n\nexport default matchesProperty;\n", "import isSymbol from './isSymbol.js';\n\n/**\n * The base implementation of methods like `_.max` and `_.min` which accepts a\n * `comparator` to determine the extremum value.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The iteratee invoked per iteration.\n * @param {Function} comparator The comparator used to compare values.\n * @returns {*} Returns the extremum value.\n */\nfunction baseExtremum(array, iteratee, comparator) {\n  var index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var value = array[index],\n        current = iteratee(value);\n\n    if (current != null && (computed === undefined\n          ? (current === current && !isSymbol(current))\n          : comparator(current, computed)\n        )) {\n      var computed = current,\n          result = value;\n    }\n  }\n  return result;\n}\n\nexport default baseExtremum;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the maximum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * _.max([4, 2, 8, 6]);\n * // => 8\n *\n * _.max([]);\n * // => undefined\n */\nfunction max(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseGt)\n    : undefined;\n}\n\nexport default max;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseGt from './_baseGt.js';\nimport baseIteratee from './_baseIteratee.js';\n\n/**\n * This method is like `_.max` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the maximum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.maxBy(objects, function(o) { return o.n; });\n * // => { 'n': 2 }\n *\n * // The `_.property` iteratee shorthand.\n * _.maxBy(objects, 'n');\n * // => { 'n': 2 }\n */\nfunction maxBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseGt)\n    : undefined;\n}\n\nexport default maxBy;\n", "/**\n * The base implementation of `_.sum` and `_.sumBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the sum.\n */\nfunction baseSum(array, iteratee) {\n  var result,\n      index = -1,\n      length = array.length;\n\n  while (++index < length) {\n    var current = iteratee(array[index]);\n    if (current !== undefined) {\n      result = result === undefined ? current : (result + current);\n    }\n  }\n  return result;\n}\n\nexport default baseSum;\n", "import baseSum from './_baseSum.js';\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/**\n * The base implementation of `_.mean` and `_.meanBy` without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {number} Returns the mean.\n */\nfunction baseMean(array, iteratee) {\n  var length = array == null ? 0 : array.length;\n  return length ? (baseSum(array, iteratee) / length) : NAN;\n}\n\nexport default baseMean;\n", "import baseMean from './_baseMean.js';\nimport identity from './identity.js';\n\n/**\n * Computes the mean of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the mean.\n * @example\n *\n * _.mean([4, 2, 8, 6]);\n * // => 5\n */\nfunction mean(array) {\n  return baseMean(array, identity);\n}\n\nexport default mean;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseMean from './_baseMean.js';\n\n/**\n * This method is like `_.mean` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be averaged.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the mean.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.meanBy(objects, function(o) { return o.n; });\n * // => 5\n *\n * // The `_.property` iteratee shorthand.\n * _.meanBy(objects, 'n');\n * // => 5\n */\nfunction meanBy(array, iteratee) {\n  return baseMean(array, baseIteratee(iteratee, 2));\n}\n\nexport default meanBy;\n", "import baseMerge from './_baseMerge.js';\nimport createAssigner from './_createAssigner.js';\n\n/**\n * This method is like `_.assign` except that it recursively merges own and\n * inherited enumerable string keyed properties of source objects into the\n * destination object. Source properties that resolve to `undefined` are\n * skipped if a destination value exists. Array and plain object properties\n * are merged recursively. Other objects and value types are overridden by\n * assignment. Source objects are applied from left to right. Subsequent\n * sources overwrite property assignments of previous sources.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 0.5.0\n * @category Object\n * @param {Object} object The destination object.\n * @param {...Object} [sources] The source objects.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {\n *   'a': [{ 'b': 2 }, { 'd': 4 }]\n * };\n *\n * var other = {\n *   'a': [{ 'c': 3 }, { 'e': 5 }]\n * };\n *\n * _.merge(object, other);\n * // => { 'a': [{ 'b': 2, 'c': 3 }, { 'd': 4, 'e': 5 }] }\n */\nvar merge = createAssigner(function(object, source, srcIndex) {\n  baseMerge(object, source, srcIndex);\n});\n\nexport default merge;\n", "import baseInvoke from './_baseInvoke.js';\nimport baseRest from './_baseRest.js';\n\n/**\n * Creates a function that invokes the method at `path` of a given object.\n * Any additional arguments are provided to the invoked method.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Util\n * @param {Array|string} path The path of the method to invoke.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {Function} Returns the new invoker function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': _.constant(2) } },\n *   { 'a': { 'b': _.constant(1) } }\n * ];\n *\n * _.map(objects, _.method('a.b'));\n * // => [2, 1]\n *\n * _.map(objects, _.method(['a', 'b']));\n * // => [2, 1]\n */\nvar method = baseRest(function(path, args) {\n  return function(object) {\n    return baseInvoke(object, path, args);\n  };\n});\n\nexport default method;\n", "import baseInvoke from './_baseInvoke.js';\nimport baseRest from './_baseRest.js';\n\n/**\n * The opposite of `_.method`; this method creates a function that invokes\n * the method at a given path of `object`. Any additional arguments are\n * provided to the invoked method.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Util\n * @param {Object} object The object to query.\n * @param {...*} [args] The arguments to invoke the method with.\n * @returns {Function} Returns the new invoker function.\n * @example\n *\n * var array = _.times(3, _.constant),\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.methodOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.methodOf(object));\n * // => [2, 0]\n */\nvar methodOf = baseRest(function(object, args) {\n  return function(path) {\n    return baseInvoke(object, path, args);\n  };\n});\n\nexport default methodOf;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseLt from './_baseLt.js';\nimport identity from './identity.js';\n\n/**\n * Computes the minimum value of `array`. If `array` is empty or falsey,\n * `undefined` is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * _.min([4, 2, 8, 6]);\n * // => 2\n *\n * _.min([]);\n * // => undefined\n */\nfunction min(array) {\n  return (array && array.length)\n    ? baseExtremum(array, identity, baseLt)\n    : undefined;\n}\n\nexport default min;\n", "import baseExtremum from './_baseExtremum.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseLt from './_baseLt.js';\n\n/**\n * This method is like `_.min` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * the value is ranked. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {*} Returns the minimum value.\n * @example\n *\n * var objects = [{ 'n': 1 }, { 'n': 2 }];\n *\n * _.minBy(objects, function(o) { return o.n; });\n * // => { 'n': 1 }\n *\n * // The `_.property` iteratee shorthand.\n * _.minBy(objects, 'n');\n * // => { 'n': 1 }\n */\nfunction minBy(array, iteratee) {\n  return (array && array.length)\n    ? baseExtremum(array, baseIteratee(iteratee, 2), baseLt)\n    : undefined;\n}\n\nexport default minBy;\n", "import arrayEach from './_arrayEach.js';\nimport arrayPush from './_arrayPush.js';\nimport baseFunctions from './_baseFunctions.js';\nimport copyArray from './_copyArray.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport keys from './keys.js';\n\n/**\n * Adds all own enumerable string keyed function properties of a source\n * object to the destination object. If `object` is a function, then methods\n * are added to its prototype as well.\n *\n * **Note:** Use `_.runInContext` to create a pristine `lodash` function to\n * avoid conflicts caused by modifying the original.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {Function|Object} [object=lodash] The destination object.\n * @param {Object} source The object of functions to add.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.chain=true] Specify whether mixins are chainable.\n * @returns {Function|Object} Returns `object`.\n * @example\n *\n * function vowels(string) {\n *   return _.filter(string, function(v) {\n *     return /[aeiou]/i.test(v);\n *   });\n * }\n *\n * _.mixin({ 'vowels': vowels });\n * _.vowels('fred');\n * // => ['e']\n *\n * _('fred').vowels().value();\n * // => ['e']\n *\n * _.mixin({ 'vowels': vowels }, { 'chain': false });\n * _('fred').vowels();\n * // => ['e']\n */\nfunction mixin(object, source, options) {\n  var props = keys(source),\n      methodNames = baseFunctions(source, props);\n\n  var chain = !(isObject(options) && 'chain' in options) || !!options.chain,\n      isFunc = isFunction(object);\n\n  arrayEach(methodNames, function(methodName) {\n    var func = source[methodName];\n    object[methodName] = func;\n    if (isFunc) {\n      object.prototype[methodName] = function() {\n        var chainAll = this.__chain__;\n        if (chain || chainAll) {\n          var result = object(this.__wrapped__),\n              actions = result.__actions__ = copyArray(this.__actions__);\n\n          actions.push({ 'func': func, 'args': arguments, 'thisArg': object });\n          result.__chain__ = chainAll;\n          return result;\n        }\n        return func.apply(object, arrayPush([this.value()], arguments));\n      };\n    }\n  });\n\n  return object;\n}\n\nexport default mixin;\n", "import createMathOperation from './_createMathOperation.js';\n\n/**\n * Multiply two numbers.\n *\n * @static\n * @memberOf _\n * @since 4.7.0\n * @category Math\n * @param {number} multiplier The first number in a multiplication.\n * @param {number} multiplicand The second number in a multiplication.\n * @returns {number} Returns the product.\n * @example\n *\n * _.multiply(6, 4);\n * // => 24\n */\nvar multiply = createMathOperation(function(multiplier, multiplicand) {\n  return multiplier * multiplicand;\n}, 1);\n\nexport default multiply;\n", "/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that negates the result of the predicate `func`. The\n * `func` predicate is invoked with the `this` binding and arguments of the\n * created function.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} predicate The predicate to negate.\n * @returns {Function} Returns the new negated function.\n * @example\n *\n * function isEven(n) {\n *   return n % 2 == 0;\n * }\n *\n * _.filter([1, 2, 3, 4, 5, 6], _.negate(isEven));\n * // => [1, 3, 5]\n */\nfunction negate(predicate) {\n  if (typeof predicate != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  return function() {\n    var args = arguments;\n    switch (args.length) {\n      case 0: return !predicate.call(this);\n      case 1: return !predicate.call(this, args[0]);\n      case 2: return !predicate.call(this, args[0], args[1]);\n      case 3: return !predicate.call(this, args[0], args[1], args[2]);\n    }\n    return !predicate.apply(this, args);\n  };\n}\n\nexport default negate;\n", "/**\n * Converts `iterator` to an array.\n *\n * @private\n * @param {Object} iterator The iterator to convert.\n * @returns {Array} Returns the converted array.\n */\nfunction iteratorToArray(iterator) {\n  var data,\n      result = [];\n\n  while (!(data = iterator.next()).done) {\n    result.push(data.value);\n  }\n  return result;\n}\n\nexport default iteratorToArray;\n", "import Symbol from './_Symbol.js';\nimport copyArray from './_copyArray.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport iteratorToArray from './_iteratorToArray.js';\nimport mapToArray from './_mapToArray.js';\nimport setToArray from './_setToArray.js';\nimport stringToArray from './_stringToArray.js';\nimport values from './values.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/**\n * Converts `value` to an array.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {Array} Returns the converted array.\n * @example\n *\n * _.toArray({ 'a': 1, 'b': 2 });\n * // => [1, 2]\n *\n * _.toArray('abc');\n * // => ['a', 'b', 'c']\n *\n * _.toArray(1);\n * // => []\n *\n * _.toArray(null);\n * // => []\n */\nfunction toArray(value) {\n  if (!value) {\n    return [];\n  }\n  if (isArrayLike(value)) {\n    return isString(value) ? stringToArray(value) : copyArray(value);\n  }\n  if (symIterator && value[symIterator]) {\n    return iteratorToArray(value[symIterator]());\n  }\n  var tag = getTag(value),\n      func = tag == mapTag ? mapToArray : (tag == setTag ? setToArray : values);\n\n  return func(value);\n}\n\nexport default toArray;\n", "import toArray from './toArray.js';\n\n/**\n * Gets the next value on a wrapped object following the\n * [iterator protocol](https://mdn.io/iteration_protocols#iterator).\n *\n * @name next\n * @memberOf _\n * @since 4.0.0\n * @category Seq\n * @returns {Object} Returns the next iterator value.\n * @example\n *\n * var wrapped = _([1, 2]);\n *\n * wrapped.next();\n * // => { 'done': false, 'value': 1 }\n *\n * wrapped.next();\n * // => { 'done': false, 'value': 2 }\n *\n * wrapped.next();\n * // => { 'done': true, 'value': undefined }\n */\nfunction wrapperNext() {\n  if (this.__values__ === undefined) {\n    this.__values__ = toArray(this.value());\n  }\n  var done = this.__index__ >= this.__values__.length,\n      value = done ? undefined : this.__values__[this.__index__++];\n\n  return { 'done': done, 'value': value };\n}\n\nexport default wrapperNext;\n", "import isIndex from './_isIndex.js';\n\n/**\n * The base implementation of `_.nth` which doesn't coerce arguments.\n *\n * @private\n * @param {Array} array The array to query.\n * @param {number} n The index of the element to return.\n * @returns {*} Returns the nth element of `array`.\n */\nfunction baseNth(array, n) {\n  var length = array.length;\n  if (!length) {\n    return;\n  }\n  n += n < 0 ? length : 0;\n  return isIndex(n, length) ? array[n] : undefined;\n}\n\nexport default baseNth;\n", "import baseNth from './_baseNth.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Gets the element at index `n` of `array`. If `n` is negative, the nth\n * element from the end is returned.\n *\n * @static\n * @memberOf _\n * @since 4.11.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=0] The index of the element to return.\n * @returns {*} Returns the nth element of `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n *\n * _.nth(array, 1);\n * // => 'b'\n *\n * _.nth(array, -2);\n * // => 'c';\n */\nfunction nth(array, n) {\n  return (array && array.length) ? baseNth(array, toInteger(n)) : undefined;\n}\n\nexport default nth;\n", "import baseNth from './_baseNth.js';\nimport baseRest from './_baseRest.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a function that gets the argument at index `n`. If `n` is negative,\n * the nth argument from the end is returned.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {number} [n=0] The index of the argument to return.\n * @returns {Function} Returns the new pass-thru function.\n * @example\n *\n * var func = _.nthArg(1);\n * func('a', 'b', 'c', 'd');\n * // => 'b'\n *\n * var func = _.nthArg(-2);\n * func('a', 'b', 'c', 'd');\n * // => 'c'\n */\nfunction nthArg(n) {\n  n = toInteger(n);\n  return baseRest(function(args) {\n    return baseNth(args, n);\n  });\n}\n\nexport default nthArg;\n", "import castPath from './_castPath.js';\nimport last from './last.js';\nimport parent from './_parent.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.unset`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The property path to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n */\nfunction baseUnset(object, path) {\n  path = castPath(path, object);\n  object = parent(object, path);\n  return object == null || delete object[toKey(last(path))];\n}\n\nexport default baseUnset;\n", "import isPlainObject from './isPlainObject.js';\n\n/**\n * Used by `_.omit` to customize its `_.cloneDeep` use to only clone plain\n * objects.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {string} key The key of the property to inspect.\n * @returns {*} Returns the uncloned value or `undefined` to defer cloning to `_.cloneDeep`.\n */\nfunction customOmitClone(value) {\n  return isPlainObject(value) ? undefined : value;\n}\n\nexport default customOmitClone;\n", "import arrayMap from './_arrayMap.js';\nimport baseClone from './_baseClone.js';\nimport baseUnset from './_baseUnset.js';\nimport castPath from './_castPath.js';\nimport copyObject from './_copyObject.js';\nimport customOmitClone from './_customOmitClone.js';\nimport flatRest from './_flatRest.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/** Used to compose bitmasks for cloning. */\nvar CLONE_DEEP_FLAG = 1,\n    CLONE_FLAT_FLAG = 2,\n    CLONE_SYMBOLS_FLAG = 4;\n\n/**\n * The opposite of `_.pick`; this method creates an object composed of the\n * own and inherited enumerable property paths of `object` that are not omitted.\n *\n * **Note:** This method is considerably slower than `_.pick`.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to omit.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omit(object, ['a', 'c']);\n * // => { 'b': '2' }\n */\nvar omit = flatRest(function(object, paths) {\n  var result = {};\n  if (object == null) {\n    return result;\n  }\n  var isDeep = false;\n  paths = arrayMap(paths, function(path) {\n    path = castPath(path, object);\n    isDeep || (isDeep = path.length > 1);\n    return path;\n  });\n  copyObject(object, getAllKeysIn(object), result);\n  if (isDeep) {\n    result = baseClone(result, CLONE_DEEP_FLAG | CLONE_FLAT_FLAG | CLONE_SYMBOLS_FLAG, customOmitClone);\n  }\n  var length = paths.length;\n  while (length--) {\n    baseUnset(result, paths[length]);\n  }\n  return result;\n});\n\nexport default omit;\n", "import assignValue from './_assignValue.js';\nimport castPath from './_castPath.js';\nimport isIndex from './_isIndex.js';\nimport isObject from './isObject.js';\nimport toKey from './_toKey.js';\n\n/**\n * The base implementation of `_.set`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseSet(object, path, value, customizer) {\n  if (!isObject(object)) {\n    return object;\n  }\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      lastIndex = length - 1,\n      nested = object;\n\n  while (nested != null && ++index < length) {\n    var key = toKey(path[index]),\n        newValue = value;\n\n    if (key === '__proto__' || key === 'constructor' || key === 'prototype') {\n      return object;\n    }\n\n    if (index != lastIndex) {\n      var objValue = nested[key];\n      newValue = customizer ? customizer(objValue, key, nested) : undefined;\n      if (newValue === undefined) {\n        newValue = isObject(objValue)\n          ? objValue\n          : (isIndex(path[index + 1]) ? [] : {});\n      }\n    }\n    assignValue(nested, key, newValue);\n    nested = nested[key];\n  }\n  return object;\n}\n\nexport default baseSet;\n", "import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\nimport castPath from './_castPath.js';\n\n/**\n * The base implementation of  `_.pickBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @param {Function} predicate The function invoked per property.\n * @returns {Object} Returns the new object.\n */\nfunction basePickBy(object, paths, predicate) {\n  var index = -1,\n      length = paths.length,\n      result = {};\n\n  while (++index < length) {\n    var path = paths[index],\n        value = baseGet(object, path);\n\n    if (predicate(value, path)) {\n      baseSet(result, castPath(path, object), value);\n    }\n  }\n  return result;\n}\n\nexport default basePickBy;\n", "import arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport basePickBy from './_basePickBy.js';\nimport getAllKeysIn from './_getAllKeysIn.js';\n\n/**\n * Creates an object composed of the `object` properties `predicate` returns\n * truthy for. The predicate is invoked with two arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pickBy(object, _.isNumber);\n * // => { 'a': 1, 'c': 3 }\n */\nfunction pickBy(object, predicate) {\n  if (object == null) {\n    return {};\n  }\n  var props = arrayMap(getAllKeysIn(object), function(prop) {\n    return [prop];\n  });\n  predicate = baseIteratee(predicate);\n  return basePickBy(object, props, function(value, path) {\n    return predicate(value, path[0]);\n  });\n}\n\nexport default pickBy;\n", "import baseIteratee from './_baseIteratee.js';\nimport negate from './negate.js';\nimport pickBy from './pickBy.js';\n\n/**\n * The opposite of `_.pickBy`; this method creates an object composed of\n * the own and inherited enumerable string keyed properties of `object` that\n * `predicate` doesn't return truthy for. The predicate is invoked with two\n * arguments: (value, key).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The source object.\n * @param {Function} [predicate=_.identity] The function invoked per property.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.omitBy(object, _.isNumber);\n * // => { 'b': '2' }\n */\nfunction omitBy(object, predicate) {\n  return pickBy(object, negate(baseIteratee(predicate)));\n}\n\nexport default omitBy;\n", "import before from './before.js';\n\n/**\n * Creates a function that is restricted to invoking `func` once. Repeat calls\n * to the function return the value of the first invocation. The `func` is\n * invoked with the `this` binding and arguments of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new restricted function.\n * @example\n *\n * var initialize = _.once(createApplication);\n * initialize();\n * initialize();\n * // => `createApplication` is invoked once\n */\nfunction once(func) {\n  return before(2, func);\n}\n\nexport default once;\n", "/**\n * The base implementation of `_.sortBy` which uses `comparer` to define the\n * sort order of `array` and replaces criteria objects with their corresponding\n * values.\n *\n * @private\n * @param {Array} array The array to sort.\n * @param {Function} comparer The function to define sort order.\n * @returns {Array} Returns `array`.\n */\nfunction baseSortBy(array, comparer) {\n  var length = array.length;\n\n  array.sort(comparer);\n  while (length--) {\n    array[length] = array[length].value;\n  }\n  return array;\n}\n\nexport default baseSortBy;\n", "import isSymbol from './isSymbol.js';\n\n/**\n * Compares values to sort them in ascending order.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {number} Returns the sort order indicator for `value`.\n */\nfunction compareAscending(value, other) {\n  if (value !== other) {\n    var valIsDefined = value !== undefined,\n        valIsNull = value === null,\n        valIsReflexive = value === value,\n        valIsSymbol = isSymbol(value);\n\n    var othIsDefined = other !== undefined,\n        othIsNull = other === null,\n        othIsReflexive = other === other,\n        othIsSymbol = isSymbol(other);\n\n    if ((!othIsNull && !othIsSymbol && !valIsSymbol && value > other) ||\n        (valIsSymbol && othIsDefined && othIsReflexive && !othIsNull && !othIsSymbol) ||\n        (valIsNull && othIsDefined && othIsReflexive) ||\n        (!valIsDefined && othIsReflexive) ||\n        !valIsReflexive) {\n      return 1;\n    }\n    if ((!valIsNull && !valIsSymbol && !othIsSymbol && value < other) ||\n        (othIsSymbol && valIsDefined && valIsReflexive && !valIsNull && !valIsSymbol) ||\n        (othIsNull && valIsDefined && valIsReflexive) ||\n        (!othIsDefined && valIsReflexive) ||\n        !othIsReflexive) {\n      return -1;\n    }\n  }\n  return 0;\n}\n\nexport default compareAscending;\n", "import compareAscending from './_compareAscending.js';\n\n/**\n * Used by `_.orderBy` to compare multiple properties of a value to another\n * and stable sort them.\n *\n * If `orders` is unspecified, all values are sorted in ascending order. Otherwise,\n * specify an order of \"desc\" for descending or \"asc\" for ascending sort order\n * of corresponding values.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {boolean[]|string[]} orders The order to sort by for each property.\n * @returns {number} Returns the sort order indicator for `object`.\n */\nfunction compareMultiple(object, other, orders) {\n  var index = -1,\n      objCriteria = object.criteria,\n      othCriteria = other.criteria,\n      length = objCriteria.length,\n      ordersLength = orders.length;\n\n  while (++index < length) {\n    var result = compareAscending(objCriteria[index], othCriteria[index]);\n    if (result) {\n      if (index >= ordersLength) {\n        return result;\n      }\n      var order = orders[index];\n      return result * (order == 'desc' ? -1 : 1);\n    }\n  }\n  // Fixes an `Array#sort` bug in the JS engine embedded in Adobe applications\n  // that causes it, under certain circumstances, to provide the same value for\n  // `object` and `other`. See https://github.com/jashkenas/underscore/pull/1247\n  // for more details.\n  //\n  // This also ensures a stable sort in V8 and other engines.\n  // See https://bugs.chromium.org/p/v8/issues/detail?id=90 for more details.\n  return object.index - other.index;\n}\n\nexport default compareMultiple;\n", "import arrayMap from './_arrayMap.js';\nimport baseGet from './_baseGet.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseMap from './_baseMap.js';\nimport baseSortBy from './_baseSortBy.js';\nimport baseUnary from './_baseUnary.js';\nimport compareMultiple from './_compareMultiple.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\n\n/**\n * The base implementation of `_.orderBy` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function[]|Object[]|string[]} iteratees The iteratees to sort by.\n * @param {string[]} orders The sort orders of `iteratees`.\n * @returns {Array} Returns the new sorted array.\n */\nfunction baseOrderBy(collection, iteratees, orders) {\n  if (iteratees.length) {\n    iteratees = arrayMap(iteratees, function(iteratee) {\n      if (isArray(iteratee)) {\n        return function(value) {\n          return baseGet(value, iteratee.length === 1 ? iteratee[0] : iteratee);\n        }\n      }\n      return iteratee;\n    });\n  } else {\n    iteratees = [identity];\n  }\n\n  var index = -1;\n  iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n\n  var result = baseMap(collection, function(value, key, collection) {\n    var criteria = arrayMap(iteratees, function(iteratee) {\n      return iteratee(value);\n    });\n    return { 'criteria': criteria, 'index': ++index, 'value': value };\n  });\n\n  return baseSortBy(result, function(object, other) {\n    return compareMultiple(object, other, orders);\n  });\n}\n\nexport default baseOrderBy;\n", "import baseOrderBy from './_baseOrderBy.js';\nimport isArray from './isArray.js';\n\n/**\n * This method is like `_.sortBy` except that it allows specifying the sort\n * orders of the iteratees to sort by. If `orders` is unspecified, all values\n * are sorted in ascending order. Otherwise, specify an order of \"desc\" for\n * descending or \"asc\" for ascending sort order of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Array[]|Function[]|Object[]|string[]} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @param {string[]} [orders] The sort orders of `iteratees`.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.reduce`.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 34 },\n *   { 'user': 'fred',   'age': 40 },\n *   { 'user': 'barney', 'age': 36 }\n * ];\n *\n * // Sort by `user` in ascending order and by `age` in descending order.\n * _.orderBy(users, ['user', 'age'], ['asc', 'desc']);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 40]]\n */\nfunction orderBy(collection, iteratees, orders, guard) {\n  if (collection == null) {\n    return [];\n  }\n  if (!isArray(iteratees)) {\n    iteratees = iteratees == null ? [] : [iteratees];\n  }\n  orders = guard ? undefined : orders;\n  if (!isArray(orders)) {\n    orders = orders == null ? [] : [orders];\n  }\n  return baseOrderBy(collection, iteratees, orders);\n}\n\nexport default orderBy;\n", "import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUnary from './_baseUnary.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates a function like `_.over`.\n *\n * @private\n * @param {Function} arrayFunc The function to iterate over iteratees.\n * @returns {Function} Returns the new over function.\n */\nfunction createOver(arrayFunc) {\n  return flatRest(function(iteratees) {\n    iteratees = arrayMap(iteratees, baseUnary(baseIteratee));\n    return baseRest(function(args) {\n      var thisArg = this;\n      return arrayFunc(iteratees, function(iteratee) {\n        return apply(iteratee, thisArg, args);\n      });\n    });\n  });\n}\n\nexport default createOver;\n", "import arrayMap from './_arrayMap.js';\nimport createOver from './_createOver.js';\n\n/**\n * Creates a function that invokes `iteratees` with the arguments it receives\n * and returns their results.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to invoke.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var func = _.over([Math.max, Math.min]);\n *\n * func(1, 2, 3, 4);\n * // => [4, 1]\n */\nvar over = createOver(arrayMap);\n\nexport default over;\n", "import baseRest from './_baseRest.js';\n\n/**\n * A `baseRest` alias which can be replaced with `identity` by module\n * replacement plugins.\n *\n * @private\n * @type {Function}\n * @param {Function} func The function to apply a rest parameter to.\n * @returns {Function} Returns the new function.\n */\nvar castRest = baseRest;\n\nexport default castRest;\n", "import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUnary from './_baseUnary.js';\nimport castRest from './_castRest.js';\nimport isArray from './isArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Creates a function that invokes `func` with its arguments transformed.\n *\n * @static\n * @since 4.0.0\n * @memberOf _\n * @category Function\n * @param {Function} func The function to wrap.\n * @param {...(Function|Function[])} [transforms=[_.identity]]\n *  The argument transforms.\n * @returns {Function} Returns the new function.\n * @example\n *\n * function doubled(n) {\n *   return n * 2;\n * }\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var func = _.overArgs(function(x, y) {\n *   return [x, y];\n * }, [square, doubled]);\n *\n * func(9, 3);\n * // => [81, 6]\n *\n * func(10, 5);\n * // => [100, 10]\n */\nvar overArgs = castRest(function(func, transforms) {\n  transforms = (transforms.length == 1 && isArray(transforms[0]))\n    ? arrayMap(transforms[0], baseUnary(baseIteratee))\n    : arrayMap(baseFlatten(transforms, 1), baseUnary(baseIteratee));\n\n  var funcsLength = transforms.length;\n  return baseRest(function(args) {\n    var index = -1,\n        length = nativeMin(args.length, funcsLength);\n\n    while (++index < length) {\n      args[index] = transforms[index].call(this, args[index]);\n    }\n    return apply(func, this, args);\n  });\n});\n\nexport default overArgs;\n", "import arrayEvery from './_arrayEvery.js';\nimport createOver from './_createOver.js';\n\n/**\n * Creates a function that checks if **all** of the `predicates` return\n * truthy when invoked with the arguments it receives.\n *\n * Following shorthands are possible for providing predicates.\n * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {...(Function|Function[])} [predicates=[_.identity]]\n *  The predicates to check.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var func = _.overEvery([Boolean, isFinite]);\n *\n * func('1');\n * // => true\n *\n * func(null);\n * // => false\n *\n * func(NaN);\n * // => false\n */\nvar overEvery = createOver(arrayEvery);\n\nexport default overEvery;\n", "import arraySome from './_arraySome.js';\nimport createOver from './_createOver.js';\n\n/**\n * Creates a function that checks if **any** of the `predicates` return\n * truthy when invoked with the arguments it receives.\n *\n * Following shorthands are possible for providing predicates.\n * Pass an `Object` and it will be used as an parameter for `_.matches` to create the predicate.\n * Pass an `Array` of parameters for `_.matchesProperty` and the predicate will be created using them.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {...(Function|Function[])} [predicates=[_.identity]]\n *  The predicates to check.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var func = _.overSome([Boolean, isFinite]);\n *\n * func('1');\n * // => true\n *\n * func(null);\n * // => true\n *\n * func(NaN);\n * // => false\n *\n * var matchesFunc = _.overSome([{ 'a': 1 }, { 'a': 2 }])\n * var matchesPropertyFunc = _.overSome([['a', 1], ['a', 2]])\n */\nvar overSome = createOver(arraySome);\n\nexport default overSome;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor;\n\n/**\n * The base implementation of `_.repeat` which doesn't coerce arguments.\n *\n * @private\n * @param {string} string The string to repeat.\n * @param {number} n The number of times to repeat the string.\n * @returns {string} Returns the repeated string.\n */\nfunction baseRepeat(string, n) {\n  var result = '';\n  if (!string || n < 1 || n > MAX_SAFE_INTEGER) {\n    return result;\n  }\n  // Leverage the exponentiation by squaring algorithm for a faster repeat.\n  // See https://en.wikipedia.org/wiki/Exponentiation_by_squaring for more details.\n  do {\n    if (n % 2) {\n      result += string;\n    }\n    n = nativeFloor(n / 2);\n    if (n) {\n      string += string;\n    }\n  } while (n);\n\n  return result;\n}\n\nexport default baseRepeat;\n", "import baseProperty from './_baseProperty.js';\n\n/**\n * Gets the size of an ASCII `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nvar asciiSize = baseProperty('length');\n\nexport default asciiSize;\n", "/** Used to compose unicode character classes. */\nvar rsAstralRange = '\\\\ud800-\\\\udfff',\n    rsComboMarksRange = '\\\\u0300-\\\\u036f',\n    reComboHalfMarksRange = '\\\\ufe20-\\\\ufe2f',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20ff',\n    rsComboRange = rsComboMarksRange + reComboHalfMarksRange + rsComboSymbolsRange,\n    rsVarRange = '\\\\ufe0e\\\\ufe0f';\n\n/** Used to compose unicode capture groups. */\nvar rsAstral = '[' + rsAstralRange + ']',\n    rsCombo = '[' + rsComboRange + ']',\n    rsFitz = '\\\\ud83c[\\\\udffb-\\\\udfff]',\n    rsModifier = '(?:' + rsCombo + '|' + rsFitz + ')',\n    rsNonAstral = '[^' + rsAstralRange + ']',\n    rsRegional = '(?:\\\\ud83c[\\\\udde6-\\\\uddff]){2}',\n    rsSurrPair = '[\\\\ud800-\\\\udbff][\\\\udc00-\\\\udfff]',\n    rsZWJ = '\\\\u200d';\n\n/** Used to compose unicode regexes. */\nvar reOptMod = rsModifier + '?',\n    rsOptVar = '[' + rsVarRange + ']?',\n    rsOptJoin = '(?:' + rsZWJ + '(?:' + [rsNonAstral, rsRegional, rsSurrPair].join('|') + ')' + rsOptVar + reOptMod + ')*',\n    rsSeq = rsOptVar + reOptMod + rsOptJoin,\n    rsSymbol = '(?:' + [rsNonAstral + rsCombo + '?', rsCombo, rsRegional, rsSurrPair, rsAstral].join('|') + ')';\n\n/** Used to match [string symbols](https://mathiasbynens.be/notes/javascript-unicode). */\nvar reUnicode = RegExp(rsFitz + '(?=' + rsFitz + ')|' + rsSymbol + rsSeq, 'g');\n\n/**\n * Gets the size of a Unicode `string`.\n *\n * @private\n * @param {string} string The string inspect.\n * @returns {number} Returns the string size.\n */\nfunction unicodeSize(string) {\n  var result = reUnicode.lastIndex = 0;\n  while (reUnicode.test(string)) {\n    ++result;\n  }\n  return result;\n}\n\nexport default unicodeSize;\n", "import asciiSize from './_asciiSize.js';\nimport hasUnicode from './_hasUnicode.js';\nimport unicodeSize from './_unicodeSize.js';\n\n/**\n * Gets the number of symbols in `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the string size.\n */\nfunction stringSize(string) {\n  return hasUnicode(string)\n    ? unicodeSize(string)\n    : asciiSize(string);\n}\n\nexport default stringSize;\n", "import baseRepeat from './_baseRepeat.js';\nimport baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport stringSize from './_stringSize.js';\nimport stringToArray from './_stringToArray.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil;\n\n/**\n * Creates the padding for `string` based on `length`. The `chars` string\n * is truncated if the number of characters exceeds `length`.\n *\n * @private\n * @param {number} length The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padding for `string`.\n */\nfunction createPadding(length, chars) {\n  chars = chars === undefined ? ' ' : baseToString(chars);\n\n  var charsLength = chars.length;\n  if (charsLength < 2) {\n    return charsLength ? baseRepeat(chars, length) : chars;\n  }\n  var result = baseRepeat(chars, nativeCeil(length / stringSize(chars)));\n  return hasUnicode(chars)\n    ? castSlice(stringToArray(result), 0, length).join('')\n    : result.slice(0, length);\n}\n\nexport default createPadding;\n", "import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeFloor = Math.floor;\n\n/**\n * Pads `string` on the left and right sides if it's shorter than `length`.\n * Padding characters are truncated if they can't be evenly divided by `length`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.pad('abc', 8);\n * // => '  abc   '\n *\n * _.pad('abc', 8, '_-');\n * // => '_-abc_-_'\n *\n * _.pad('abc', 3);\n * // => 'abc'\n */\nfunction pad(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  if (!length || strLength >= length) {\n    return string;\n  }\n  var mid = (length - strLength) / 2;\n  return (\n    createPadding(nativeFloor(mid), chars) +\n    string +\n    createPadding(nativeCeil(mid), chars)\n  );\n}\n\nexport default pad;\n", "import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Pads `string` on the right side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padEnd('abc', 6);\n * // => 'abc   '\n *\n * _.padEnd('abc', 6, '_-');\n * // => 'abc_-_'\n *\n * _.padEnd('abc', 3);\n * // => 'abc'\n */\nfunction padEnd(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (string + createPadding(length - strLength, chars))\n    : string;\n}\n\nexport default padEnd;\n", "import createPadding from './_createPadding.js';\nimport stringSize from './_stringSize.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Pads `string` on the left side if it's shorter than `length`. Padding\n * characters are truncated if they exceed `length`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to pad.\n * @param {number} [length=0] The padding length.\n * @param {string} [chars=' '] The string used as padding.\n * @returns {string} Returns the padded string.\n * @example\n *\n * _.padStart('abc', 6);\n * // => '   abc'\n *\n * _.padStart('abc', 6, '_-');\n * // => '_-_abc'\n *\n * _.padStart('abc', 3);\n * // => 'abc'\n */\nfunction padStart(string, length, chars) {\n  string = toString(string);\n  length = toInteger(length);\n\n  var strLength = length ? stringSize(string) : 0;\n  return (length && strLength < length)\n    ? (createPadding(length - strLength, chars) + string)\n    : string;\n}\n\nexport default padStart;\n", "import root from './_root.js';\nimport toString from './toString.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeParseInt = root.parseInt;\n\n/**\n * Converts `string` to an integer of the specified radix. If `radix` is\n * `undefined` or `0`, a `radix` of `10` is used unless `value` is a\n * hexadecimal, in which case a `radix` of `16` is used.\n *\n * **Note:** This method aligns with the\n * [ES5 implementation](https://es5.github.io/#x15.1.2.2) of `parseInt`.\n *\n * @static\n * @memberOf _\n * @since 1.1.0\n * @category String\n * @param {string} string The string to convert.\n * @param {number} [radix=10] The radix to interpret `value` by.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.parseInt('08');\n * // => 8\n *\n * _.map(['6', '08', '10'], _.parseInt);\n * // => [6, 8, 10]\n */\nfunction parseInt(string, radix, guard) {\n  if (guard || radix == null) {\n    radix = 0;\n  } else if (radix) {\n    radix = +radix;\n  }\n  return nativeParseInt(toString(string).replace(reTrimStart, ''), radix || 0);\n}\n\nexport default parseInt;\n", "import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_FLAG = 32;\n\n/**\n * Creates a function that invokes `func` with `partials` prepended to the\n * arguments it receives. This method is like `_.bind` except it does **not**\n * alter the `this` binding.\n *\n * The `_.partial.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 0.2.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var sayHelloTo = _.partial(greet, 'hello');\n * sayHelloTo('fred');\n * // => 'hello fred'\n *\n * // Partially applied with placeholders.\n * var greetFred = _.partial(greet, _, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n */\nvar partial = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partial));\n  return createWrap(func, WRAP_PARTIAL_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartial.placeholder = {};\n\nexport default partial;\n", "import baseRest from './_baseRest.js';\nimport createWrap from './_createWrap.js';\nimport getHolder from './_getHolder.js';\nimport replaceHolders from './_replaceHolders.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_PARTIAL_RIGHT_FLAG = 64;\n\n/**\n * This method is like `_.partial` except that partially applied arguments\n * are appended to the arguments it receives.\n *\n * The `_.partialRight.placeholder` value, which defaults to `_` in monolithic\n * builds, may be used as a placeholder for partially applied arguments.\n *\n * **Note:** This method doesn't set the \"length\" property of partially\n * applied functions.\n *\n * @static\n * @memberOf _\n * @since 1.0.0\n * @category Function\n * @param {Function} func The function to partially apply arguments to.\n * @param {...*} [partials] The arguments to be partially applied.\n * @returns {Function} Returns the new partially applied function.\n * @example\n *\n * function greet(greeting, name) {\n *   return greeting + ' ' + name;\n * }\n *\n * var greetFred = _.partialRight(greet, 'fred');\n * greetFred('hi');\n * // => 'hi fred'\n *\n * // Partially applied with placeholders.\n * var sayHelloTo = _.partialRight(greet, 'hello', _);\n * sayHelloTo('fred');\n * // => 'hello fred'\n */\nvar partialRight = baseRest(function(func, partials) {\n  var holders = replaceHolders(partials, getHolder(partialRight));\n  return createWrap(func, WRAP_PARTIAL_RIGHT_FLAG, undefined, partials, holders);\n});\n\n// Assign default placeholders.\npartialRight.placeholder = {};\n\nexport default partialRight;\n", "import createAggregator from './_createAggregator.js';\n\n/**\n * Creates an array of elements split into two groups, the first of which\n * contains elements `predicate` returns truthy for, the second of which\n * contains elements `predicate` returns falsey for. The predicate is\n * invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of grouped elements.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'age': 36, 'active': false },\n *   { 'user': 'fred',    'age': 40, 'active': true },\n *   { 'user': 'pebbles', 'age': 1,  'active': false }\n * ];\n *\n * _.partition(users, function(o) { return o.active; });\n * // => objects for [['fred'], ['barney', 'pebbles']]\n *\n * // The `_.matches` iteratee shorthand.\n * _.partition(users, { 'age': 1, 'active': false });\n * // => objects for [['pebbles'], ['barney', 'fred']]\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.partition(users, ['active', false]);\n * // => objects for [['barney', 'pebbles'], ['fred']]\n *\n * // The `_.property` iteratee shorthand.\n * _.partition(users, 'active');\n * // => objects for [['fred'], ['barney', 'pebbles']]\n */\nvar partition = createAggregator(function(result, value, key) {\n  result[key ? 0 : 1].push(value);\n}, function() { return [[], []]; });\n\nexport default partition;\n", "import basePickBy from './_basePickBy.js';\nimport hasIn from './hasIn.js';\n\n/**\n * The base implementation of `_.pick` without support for individual\n * property identifiers.\n *\n * @private\n * @param {Object} object The source object.\n * @param {string[]} paths The property paths to pick.\n * @returns {Object} Returns the new object.\n */\nfunction basePick(object, paths) {\n  return basePickBy(object, paths, function(value, path) {\n    return hasIn(object, path);\n  });\n}\n\nexport default basePick;\n", "import basePick from './_basePick.js';\nimport flatRest from './_flatRest.js';\n\n/**\n * Creates an object composed of the picked `object` properties.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The source object.\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new object.\n * @example\n *\n * var object = { 'a': 1, 'b': '2', 'c': 3 };\n *\n * _.pick(object, ['a', 'c']);\n * // => { 'a': 1, 'c': 3 }\n */\nvar pick = flatRest(function(object, paths) {\n  return object == null ? {} : basePick(object, paths);\n});\n\nexport default pick;\n", "import baseLodash from './_baseLodash.js';\nimport wrapperClone from './_wrapperClone.js';\n\n/**\n * Creates a clone of the chain sequence planting `value` as the wrapped value.\n *\n * @name plant\n * @memberOf _\n * @since 3.2.0\n * @category Seq\n * @param {*} value The value to plant.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * function square(n) {\n *   return n * n;\n * }\n *\n * var wrapped = _([1, 2]).map(square);\n * var other = wrapped.plant([3, 4]);\n *\n * other.value();\n * // => [9, 16]\n *\n * wrapped.value();\n * // => [1, 4]\n */\nfunction wrapperPlant(value) {\n  var result,\n      parent = this;\n\n  while (parent instanceof baseLodash) {\n    var clone = wrapperClone(parent);\n    clone.__index__ = 0;\n    clone.__values__ = undefined;\n    if (result) {\n      previous.__wrapped__ = clone;\n    } else {\n      result = clone;\n    }\n    var previous = clone;\n    parent = parent.__wrapped__;\n  }\n  previous.__wrapped__ = value;\n  return result;\n}\n\nexport default wrapperPlant;\n", "import baseGet from './_baseGet.js';\n\n/**\n * The opposite of `_.property`; this method creates a function that returns\n * the value at a given path of `object`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Util\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var array = [0, 1, 2],\n *     object = { 'a': array, 'b': array, 'c': array };\n *\n * _.map(['a[2]', 'c[0]'], _.propertyOf(object));\n * // => [2, 0]\n *\n * _.map([['a', '2'], ['c', '0']], _.propertyOf(object));\n * // => [2, 0]\n */\nfunction propertyOf(object) {\n  return function(path) {\n    return object == null ? undefined : baseGet(object, path);\n  };\n}\n\nexport default propertyOf;\n", "/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseIndexOfWith;\n", "import arrayMap from './_arrayMap.js';\nimport baseIndexOf from './_baseIndexOf.js';\nimport baseIndexOfWith from './_baseIndexOfWith.js';\nimport baseUnary from './_baseUnary.js';\nimport copyArray from './_copyArray.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAllBy` without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAll(array, values, iteratee, comparator) {\n  var indexOf = comparator ? baseIndexOfWith : baseIndexOf,\n      index = -1,\n      length = values.length,\n      seen = array;\n\n  if (array === values) {\n    values = copyArray(values);\n  }\n  if (iteratee) {\n    seen = arrayMap(array, baseUnary(iteratee));\n  }\n  while (++index < length) {\n    var fromIndex = 0,\n        value = values[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    while ((fromIndex = indexOf(seen, computed, fromIndex, comparator)) > -1) {\n      if (seen !== array) {\n        splice.call(seen, fromIndex, 1);\n      }\n      splice.call(array, fromIndex, 1);\n    }\n  }\n  return array;\n}\n\nexport default basePullAll;\n", "import basePullAll from './_basePullAll.js';\n\n/**\n * This method is like `_.pull` except that it accepts an array of values to remove.\n *\n * **Note:** Unlike `_.difference`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pullAll(array, ['a', 'c']);\n * console.log(array);\n * // => ['b', 'b']\n */\nfunction pullAll(array, values) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values)\n    : array;\n}\n\nexport default pullAll;\n", "import baseRest from './_baseRest.js';\nimport pullAll from './pullAll.js';\n\n/**\n * Removes all given values from `array` using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.without`, this method mutates `array`. Use `_.remove`\n * to remove elements from an array by predicate.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...*} [values] The values to remove.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = ['a', 'b', 'c', 'a', 'b', 'c'];\n *\n * _.pull(array, 'a', 'c');\n * console.log(array);\n * // => ['b', 'b']\n */\nvar pull = baseRest(pullAll);\n\nexport default pull;\n", "import baseIteratee from './_baseIteratee.js';\nimport basePullAll from './_basePullAll.js';\n\n/**\n * This method is like `_.pullAll` except that it accepts `iteratee` which is\n * invoked for each element of `array` and `values` to generate the criterion\n * by which they're compared. The iteratee is invoked with one argument: (value).\n *\n * **Note:** Unlike `_.differenceBy`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1 }, { 'x': 2 }, { 'x': 3 }, { 'x': 1 }];\n *\n * _.pullAllBy(array, [{ 'x': 1 }, { 'x': 3 }], 'x');\n * console.log(array);\n * // => [{ 'x': 2 }]\n */\nfunction pullAllBy(array, values, iteratee) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, baseIteratee(iteratee, 2))\n    : array;\n}\n\nexport default pullAllBy;\n", "import basePullAll from './_basePullAll.js';\n\n/**\n * This method is like `_.pullAll` except that it accepts `comparator` which\n * is invoked to compare elements of `array` to `values`. The comparator is\n * invoked with two arguments: (arrVal, othVal).\n *\n * **Note:** Unlike `_.differenceWith`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Array} values The values to remove.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [{ 'x': 1, 'y': 2 }, { 'x': 3, 'y': 4 }, { 'x': 5, 'y': 6 }];\n *\n * _.pullAllWith(array, [{ 'x': 3, 'y': 4 }], _.isEqual);\n * console.log(array);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 5, 'y': 6 }]\n */\nfunction pullAllWith(array, values, comparator) {\n  return (array && array.length && values && values.length)\n    ? basePullAll(array, values, undefined, comparator)\n    : array;\n}\n\nexport default pullAllWith;\n", "import baseUnset from './_baseUnset.js';\nimport isIndex from './_isIndex.js';\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * The base implementation of `_.pullAt` without support for individual\n * indexes or capturing the removed elements.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {number[]} indexes The indexes of elements to remove.\n * @returns {Array} Returns `array`.\n */\nfunction basePullAt(array, indexes) {\n  var length = array ? indexes.length : 0,\n      lastIndex = length - 1;\n\n  while (length--) {\n    var index = indexes[length];\n    if (length == lastIndex || index !== previous) {\n      var previous = index;\n      if (isIndex(index)) {\n        splice.call(array, index, 1);\n      } else {\n        baseUnset(array, index);\n      }\n    }\n  }\n  return array;\n}\n\nexport default basePullAt;\n", "import arrayMap from './_arrayMap.js';\nimport baseAt from './_baseAt.js';\nimport basePullAt from './_basePullAt.js';\nimport compareAscending from './_compareAscending.js';\nimport flatRest from './_flatRest.js';\nimport isIndex from './_isIndex.js';\n\n/**\n * Removes elements from `array` corresponding to `indexes` and returns an\n * array of removed elements.\n *\n * **Note:** Unlike `_.at`, this method mutates `array`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {...(number|number[])} [indexes] The indexes of elements to remove.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = ['a', 'b', 'c', 'd'];\n * var pulled = _.pullAt(array, [1, 3]);\n *\n * console.log(array);\n * // => ['a', 'c']\n *\n * console.log(pulled);\n * // => ['b', 'd']\n */\nvar pullAt = flatRest(function(array, indexes) {\n  var length = array == null ? 0 : array.length,\n      result = baseAt(array, indexes);\n\n  basePullAt(array, arrayMap(indexes, function(index) {\n    return isIndex(index, length) ? +index : index;\n  }).sort(compareAscending));\n\n  return result;\n});\n\nexport default pullAt;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\nexport default baseRandom;\n", "import baseRandom from './_baseRandom.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nexport default random;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeCeil = Math.ceil,\n    nativeMax = Math.max;\n\n/**\n * The base implementation of `_.range` and `_.rangeRight` which doesn't\n * coerce arguments.\n *\n * @private\n * @param {number} start The start of the range.\n * @param {number} end The end of the range.\n * @param {number} step The value to increment or decrement by.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Array} Returns the range of numbers.\n */\nfunction baseRange(start, end, step, fromRight) {\n  var index = -1,\n      length = nativeMax(nativeCeil((end - start) / (step || 1)), 0),\n      result = Array(length);\n\n  while (length--) {\n    result[fromRight ? length : ++index] = start;\n    start += step;\n  }\n  return result;\n}\n\nexport default baseRange;\n", "import baseRange from './_baseRange.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toFinite from './toFinite.js';\n\n/**\n * Creates a `_.range` or `_.rangeRight` function.\n *\n * @private\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new range function.\n */\nfunction createRange(fromRight) {\n  return function(start, end, step) {\n    if (step && typeof step != 'number' && isIterateeCall(start, end, step)) {\n      end = step = undefined;\n    }\n    // Ensure the sign of `-0` is preserved.\n    start = toFinite(start);\n    if (end === undefined) {\n      end = start;\n      start = 0;\n    } else {\n      end = toFinite(end);\n    }\n    step = step === undefined ? (start < end ? 1 : -1) : toFinite(step);\n    return baseRange(start, end, step, fromRight);\n  };\n}\n\nexport default createRange;\n", "import createRange from './_createRange.js';\n\n/**\n * Creates an array of numbers (positive and/or negative) progressing from\n * `start` up to, but not including, `end`. A step of `-1` is used if a negative\n * `start` is specified without an `end` or `step`. If `end` is not specified,\n * it's set to `start` with `start` then set to `0`.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.rangeRight\n * @example\n *\n * _.range(4);\n * // => [0, 1, 2, 3]\n *\n * _.range(-4);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 5);\n * // => [1, 2, 3, 4]\n *\n * _.range(0, 20, 5);\n * // => [0, 5, 10, 15]\n *\n * _.range(0, -4, -1);\n * // => [0, -1, -2, -3]\n *\n * _.range(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.range(0);\n * // => []\n */\nvar range = createRange();\n\nexport default range;\n", "import createRange from './_createRange.js';\n\n/**\n * This method is like `_.range` except that it populates values in\n * descending order.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {number} [start=0] The start of the range.\n * @param {number} end The end of the range.\n * @param {number} [step=1] The value to increment or decrement by.\n * @returns {Array} Returns the range of numbers.\n * @see _.inRange, _.range\n * @example\n *\n * _.rangeRight(4);\n * // => [3, 2, 1, 0]\n *\n * _.rangeRight(-4);\n * // => [-3, -2, -1, 0]\n *\n * _.rangeRight(1, 5);\n * // => [4, 3, 2, 1]\n *\n * _.rangeRight(0, 20, 5);\n * // => [15, 10, 5, 0]\n *\n * _.rangeRight(0, -4, -1);\n * // => [-3, -2, -1, 0]\n *\n * _.rangeRight(1, 4, 0);\n * // => [1, 1, 1]\n *\n * _.rangeRight(0);\n * // => []\n */\nvar rangeRight = createRange(true);\n\nexport default rangeRight;\n", "import createWrap from './_createWrap.js';\nimport flatRest from './_flatRest.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_REARG_FLAG = 256;\n\n/**\n * Creates a function that invokes `func` with arguments arranged according\n * to the specified `indexes` where the argument value at the first index is\n * provided as the first argument, the argument value at the second index is\n * provided as the second argument, and so on.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Function\n * @param {Function} func The function to rearrange arguments for.\n * @param {...(number|number[])} indexes The arranged argument indexes.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var rearged = _.rearg(function(a, b, c) {\n *   return [a, b, c];\n * }, [2, 0, 1]);\n *\n * rearged('b', 'c', 'a')\n * // => ['a', 'b', 'c']\n */\nvar rearg = flatRest(function(func, indexes) {\n  return createWrap(func, WRAP_REARG_FLAG, undefined, undefined, undefined, indexes);\n});\n\nexport default rearg;\n", "/**\n * The base implementation of `_.reduce` and `_.reduceRight`, without support\n * for iteratee shorthands, which iterates over `collection` using `eachFunc`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} accumulator The initial value.\n * @param {boolean} initAccum Specify using the first or last element of\n *  `collection` as the initial value.\n * @param {Function} eachFunc The function to iterate over `collection`.\n * @returns {*} Returns the accumulated value.\n */\nfunction baseReduce(collection, iteratee, accumulator, initAccum, eachFunc) {\n  eachFunc(collection, function(value, index, collection) {\n    accumulator = initAccum\n      ? (initAccum = false, value)\n      : iteratee(accumulator, value, index, collection);\n  });\n  return accumulator;\n}\n\nexport default baseReduce;\n", "import arrayReduce from './_arrayReduce.js';\nimport baseEach from './_baseEach.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * Reduces `collection` to a value which is the accumulated result of running\n * each element in `collection` thru `iteratee`, where each successive\n * invocation is supplied the return value of the previous. If `accumulator`\n * is not given, the first element of `collection` is used as the initial\n * value. The iteratee is invoked with four arguments:\n * (accumulator, value, index|key, collection).\n *\n * Many lodash methods are guarded to work as iteratees for methods like\n * `_.reduce`, `_.reduceRight`, and `_.transform`.\n *\n * The guarded methods are:\n * `assign`, `defaults`, `defaultsDeep`, `includes`, `merge`, `orderBy`,\n * and `sortBy`\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduceRight\n * @example\n *\n * _.reduce([1, 2], function(sum, n) {\n *   return sum + n;\n * }, 0);\n * // => 3\n *\n * _.reduce({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n *   return result;\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] } (iteration order is not guaranteed)\n */\nfunction reduce(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduce : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEach);\n}\n\nexport default reduce;\n", "/**\n * A specialized version of `_.reduceRight` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @param {boolean} [initAccum] Specify using the last element of `array` as\n *  the initial value.\n * @returns {*} Returns the accumulated value.\n */\nfunction arrayReduceRight(array, iteratee, accumulator, initAccum) {\n  var length = array == null ? 0 : array.length;\n  if (initAccum && length) {\n    accumulator = array[--length];\n  }\n  while (length--) {\n    accumulator = iteratee(accumulator, array[length], length, array);\n  }\n  return accumulator;\n}\n\nexport default arrayReduceRight;\n", "import arrayReduceRight from './_arrayReduceRight.js';\nimport baseEachRight from './_baseEachRight.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseReduce from './_baseReduce.js';\nimport isArray from './isArray.js';\n\n/**\n * This method is like `_.reduce` except that it iterates over elements of\n * `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The initial value.\n * @returns {*} Returns the accumulated value.\n * @see _.reduce\n * @example\n *\n * var array = [[0, 1], [2, 3], [4, 5]];\n *\n * _.reduceRight(array, function(flattened, other) {\n *   return flattened.concat(other);\n * }, []);\n * // => [4, 5, 2, 3, 0, 1]\n */\nfunction reduceRight(collection, iteratee, accumulator) {\n  var func = isArray(collection) ? arrayReduceRight : baseReduce,\n      initAccum = arguments.length < 3;\n\n  return func(collection, baseIteratee(iteratee, 4), accumulator, initAccum, baseEachRight);\n}\n\nexport default reduceRight;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseFilter from './_baseFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\nimport negate from './negate.js';\n\n/**\n * The opposite of `_.filter`; this method returns the elements of `collection`\n * that `predicate` does **not** return truthy for.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n * @see _.filter\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36, 'active': false },\n *   { 'user': 'fred',   'age': 40, 'active': true }\n * ];\n *\n * _.reject(users, function(o) { return !o.active; });\n * // => objects for ['fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.reject(users, { 'age': 40, 'active': true });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.reject(users, ['active', false]);\n * // => objects for ['fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.reject(users, 'active');\n * // => objects for ['barney']\n */\nfunction reject(collection, predicate) {\n  var func = isArray(collection) ? arrayFilter : baseFilter;\n  return func(collection, negate(baseIteratee(predicate, 3)));\n}\n\nexport default reject;\n", "import baseIteratee from './_baseIteratee.js';\nimport basePullAt from './_basePullAt.js';\n\n/**\n * Removes all elements from `array` that `predicate` returns truthy for\n * and returns an array of the removed elements. The predicate is invoked\n * with three arguments: (value, index, array).\n *\n * **Note:** Unlike `_.filter`, this method mutates `array`. Use `_.pull`\n * to pull elements from an array by value.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the new array of removed elements.\n * @example\n *\n * var array = [1, 2, 3, 4];\n * var evens = _.remove(array, function(n) {\n *   return n % 2 == 0;\n * });\n *\n * console.log(array);\n * // => [1, 3]\n *\n * console.log(evens);\n * // => [2, 4]\n */\nfunction remove(array, predicate) {\n  var result = [];\n  if (!(array && array.length)) {\n    return result;\n  }\n  var index = -1,\n      indexes = [],\n      length = array.length;\n\n  predicate = baseIteratee(predicate, 3);\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result.push(value);\n      indexes.push(index);\n    }\n  }\n  basePullAt(array, indexes);\n  return result;\n}\n\nexport default remove;\n", "import baseRepeat from './_baseRepeat.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Repeats the given string `n` times.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to repeat.\n * @param {number} [n=1] The number of times to repeat the string.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the repeated string.\n * @example\n *\n * _.repeat('*', 3);\n * // => '***'\n *\n * _.repeat('abc', 2);\n * // => 'abcabc'\n *\n * _.repeat('abc', 0);\n * // => ''\n */\nfunction repeat(string, n, guard) {\n  if ((guard ? isIterateeCall(string, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  return baseRepeat(toString(string), n);\n}\n\nexport default repeat;\n", "import toString from './toString.js';\n\n/**\n * Replaces matches for `pattern` in `string` with `replacement`.\n *\n * **Note:** This method is based on\n * [`String#replace`](https://mdn.io/String/replace).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to modify.\n * @param {RegExp|string} pattern The pattern to replace.\n * @param {Function|string} replacement The match replacement.\n * @returns {string} Returns the modified string.\n * @example\n *\n * _.replace('Hi Fred', 'Fred', 'Barney');\n * // => 'Hi Barney'\n */\nfunction replace() {\n  var args = arguments,\n      string = toString(args[0]);\n\n  return args.length < 3 ? string : string.replace(args[1], args[2]);\n}\n\nexport default replace;\n", "import baseRest from './_baseRest.js';\nimport toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * created function and arguments from `start` and beyond provided as\n * an array.\n *\n * **Note:** This method is based on the\n * [rest parameter](https://mdn.io/rest_parameters).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.rest(function(what, names) {\n *   return what + ' ' + _.initial(names).join(', ') +\n *     (_.size(names) > 1 ? ', & ' : '') + _.last(names);\n * });\n *\n * say('hello', 'fred', 'barney', 'pebbles');\n * // => 'hello fred, barney, & pebbles'\n */\nfunction rest(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start === undefined ? start : toInteger(start);\n  return baseRest(func, start);\n}\n\nexport default rest;\n", "import castPath from './_castPath.js';\nimport isFunction from './isFunction.js';\nimport toKey from './_toKey.js';\n\n/**\n * This method is like `_.get` except that if the resolved value is a\n * function it's invoked with the `this` binding of its parent object and\n * its result is returned.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to resolve.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c1': 3, 'c2': _.constant(4) } }] };\n *\n * _.result(object, 'a[0].b.c1');\n * // => 3\n *\n * _.result(object, 'a[0].b.c2');\n * // => 4\n *\n * _.result(object, 'a[0].b.c3', 'default');\n * // => 'default'\n *\n * _.result(object, 'a[0].b.c3', _.constant('default'));\n * // => 'default'\n */\nfunction result(object, path, defaultValue) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length;\n\n  // Ensure the loop is entered when path is empty.\n  if (!length) {\n    length = 1;\n    object = undefined;\n  }\n  while (++index < length) {\n    var value = object == null ? undefined : object[toKey(path[index])];\n    if (value === undefined) {\n      index = length;\n      value = defaultValue;\n    }\n    object = isFunction(value) ? value.call(object) : value;\n  }\n  return object;\n}\n\nexport default result;\n", "/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeReverse = arrayProto.reverse;\n\n/**\n * Reverses `array` so that the first element becomes the last, the second\n * element becomes the second to last, and so on.\n *\n * **Note:** This method mutates `array` and is based on\n * [`Array#reverse`](https://mdn.io/Array/reverse).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to modify.\n * @returns {Array} Returns `array`.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _.reverse(array);\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction reverse(array) {\n  return array == null ? array : nativeReverse.call(array);\n}\n\nexport default reverse;\n", "import createRound from './_createRound.js';\n\n/**\n * Computes `number` rounded to `precision`.\n *\n * @static\n * @memberOf _\n * @since 3.10.0\n * @category Math\n * @param {number} number The number to round.\n * @param {number} [precision=0] The precision to round to.\n * @returns {number} Returns the rounded number.\n * @example\n *\n * _.round(4.006);\n * // => 4\n *\n * _.round(4.006, 2);\n * // => 4.01\n *\n * _.round(4060, -2);\n * // => 4100\n */\nvar round = createRound('round');\n\nexport default round;\n", "import baseRandom from './_baseRandom.js';\n\n/**\n * A specialized version of `_.sample` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @returns {*} Returns the random element.\n */\nfunction arraySample(array) {\n  var length = array.length;\n  return length ? array[baseRandom(0, length - 1)] : undefined;\n}\n\nexport default arraySample;\n", "import arraySample from './_arraySample.js';\nimport values from './values.js';\n\n/**\n * The base implementation of `_.sample`.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n */\nfunction baseSample(collection) {\n  return arraySample(values(collection));\n}\n\nexport default baseSample;\n", "import arraySample from './_arraySample.js';\nimport baseSample from './_baseSample.js';\nimport isArray from './isArray.js';\n\n/**\n * Gets a random element from `collection`.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @returns {*} Returns the random element.\n * @example\n *\n * _.sample([1, 2, 3, 4]);\n * // => 2\n */\nfunction sample(collection) {\n  var func = isArray(collection) ? arraySample : baseSample;\n  return func(collection);\n}\n\nexport default sample;\n", "import baseRandom from './_baseRandom.js';\n\n/**\n * A specialized version of `_.shuffle` which mutates and sets the size of `array`.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @param {number} [size=array.length] The size of `array`.\n * @returns {Array} Returns `array`.\n */\nfunction shuffleSelf(array, size) {\n  var index = -1,\n      length = array.length,\n      lastIndex = length - 1;\n\n  size = size === undefined ? length : size;\n  while (++index < size) {\n    var rand = baseRandom(index, lastIndex),\n        value = array[rand];\n\n    array[rand] = array[index];\n    array[index] = value;\n  }\n  array.length = size;\n  return array;\n}\n\nexport default shuffleSelf;\n", "import baseClamp from './_baseClamp.js';\nimport copyArray from './_copyArray.js';\nimport shuffleSelf from './_shuffleSelf.js';\n\n/**\n * A specialized version of `_.sampleSize` for arrays.\n *\n * @private\n * @param {Array} array The array to sample.\n * @param {number} n The number of elements to sample.\n * @returns {Array} Returns the random elements.\n */\nfunction arraySampleSize(array, n) {\n  return shuffleSelf(copyArray(array), baseClamp(n, 0, array.length));\n}\n\nexport default arraySampleSize;\n", "import baseClamp from './_baseClamp.js';\nimport shuffleSelf from './_shuffleSelf.js';\nimport values from './values.js';\n\n/**\n * The base implementation of `_.sampleSize` without param guards.\n *\n * @private\n * @param {Array|Object} collection The collection to sample.\n * @param {number} n The number of elements to sample.\n * @returns {Array} Returns the random elements.\n */\nfunction baseSampleSize(collection, n) {\n  var array = values(collection);\n  return shuffleSelf(array, baseClamp(n, 0, array.length));\n}\n\nexport default baseSampleSize;\n", "import arraySampleSize from './_arraySampleSize.js';\nimport baseSampleSize from './_baseSampleSize.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Gets `n` random elements at unique keys from `collection` up to the\n * size of `collection`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Collection\n * @param {Array|Object} collection The collection to sample.\n * @param {number} [n=1] The number of elements to sample.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the random elements.\n * @example\n *\n * _.sampleSize([1, 2, 3], 2);\n * // => [3, 1]\n *\n * _.sampleSize([1, 2, 3], 4);\n * // => [2, 3, 1]\n */\nfunction sampleSize(collection, n, guard) {\n  if ((guard ? isIterateeCall(collection, n, guard) : n === undefined)) {\n    n = 1;\n  } else {\n    n = toInteger(n);\n  }\n  var func = isArray(collection) ? arraySampleSize : baseSampleSize;\n  return func(collection, n);\n}\n\nexport default sampleSize;\n", "import baseSet from './_baseSet.js';\n\n/**\n * Sets the value at `path` of `object`. If a portion of `path` doesn't exist,\n * it's created. Arrays are created for missing index properties while objects\n * are created for all other missing properties. Use `_.setWith` to customize\n * `path` creation.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.set(object, 'a[0].b.c', 4);\n * console.log(object.a[0].b.c);\n * // => 4\n *\n * _.set(object, ['x', '0', 'y', 'z'], 5);\n * console.log(object.x[0].y.z);\n * // => 5\n */\nfunction set(object, path, value) {\n  return object == null ? object : baseSet(object, path, value);\n}\n\nexport default set;\n", "import baseSet from './_baseSet.js';\n\n/**\n * This method is like `_.set` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {*} value The value to set.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.setWith(object, '[0][1]', 'a', Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction setWith(object, path, value, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseSet(object, path, value, customizer);\n}\n\nexport default setWith;\n", "import copyArray from './_copyArray.js';\nimport shuffleSelf from './_shuffleSelf.js';\n\n/**\n * A specialized version of `_.shuffle` for arrays.\n *\n * @private\n * @param {Array} array The array to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction arrayShuffle(array) {\n  return shuffleSelf(copyArray(array));\n}\n\nexport default arrayShuffle;\n", "import shuffleSelf from './_shuffleSelf.js';\nimport values from './values.js';\n\n/**\n * The base implementation of `_.shuffle`.\n *\n * @private\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n */\nfunction baseShuffle(collection) {\n  return shuffleSelf(values(collection));\n}\n\nexport default baseShuffle;\n", "import arrayShuffle from './_arrayShuffle.js';\nimport baseShuffle from './_baseShuffle.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates an array of shuffled values, using a version of the\n * [Fisher-Yates shuffle](https://en.wikipedia.org/wiki/Fisher-Yates_shuffle).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to shuffle.\n * @returns {Array} Returns the new shuffled array.\n * @example\n *\n * _.shuffle([1, 2, 3, 4]);\n * // => [4, 1, 3, 2]\n */\nfunction shuffle(collection) {\n  var func = isArray(collection) ? arrayShuffle : baseShuffle;\n  return func(collection);\n}\n\nexport default shuffle;\n", "import baseKeys from './_baseKeys.js';\nimport getTag from './_getTag.js';\nimport isArrayLike from './isArrayLike.js';\nimport isString from './isString.js';\nimport stringSize from './_stringSize.js';\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    setTag = '[object Set]';\n\n/**\n * Gets the size of `collection` by returning its length for array-like\n * values or the number of own enumerable string keyed properties for objects.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object|string} collection The collection to inspect.\n * @returns {number} Returns the collection size.\n * @example\n *\n * _.size([1, 2, 3]);\n * // => 3\n *\n * _.size({ 'a': 1, 'b': 2 });\n * // => 2\n *\n * _.size('pebbles');\n * // => 7\n */\nfunction size(collection) {\n  if (collection == null) {\n    return 0;\n  }\n  if (isArrayLike(collection)) {\n    return isString(collection) ? stringSize(collection) : collection.length;\n  }\n  var tag = getTag(collection);\n  if (tag == mapTag || tag == setTag) {\n    return collection.size;\n  }\n  return baseKeys(collection).length;\n}\n\nexport default size;\n", "import baseSlice from './_baseSlice.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` from `start` up to, but not including, `end`.\n *\n * **Note:** This method is used instead of\n * [`Array#slice`](https://mdn.io/Array/slice) to ensure dense arrays are\n * returned.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to slice.\n * @param {number} [start=0] The start position.\n * @param {number} [end=array.length] The end position.\n * @returns {Array} Returns the slice of `array`.\n */\nfunction slice(array, start, end) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  if (end && typeof end != 'number' && isIterateeCall(array, start, end)) {\n    start = 0;\n    end = length;\n  }\n  else {\n    start = start == null ? 0 : toInteger(start);\n    end = end === undefined ? length : toInteger(end);\n  }\n  return baseSlice(array, start, end);\n}\n\nexport default slice;\n", "import createCompounder from './_createCompounder.js';\n\n/**\n * Converts `string` to\n * [snake case](https://en.wikipedia.org/wiki/Snake_case).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the snake cased string.\n * @example\n *\n * _.snakeCase('Foo Bar');\n * // => 'foo_bar'\n *\n * _.snakeCase('fooBar');\n * // => 'foo_bar'\n *\n * _.snakeCase('--FOO-BAR--');\n * // => 'foo_bar'\n */\nvar snakeCase = createCompounder(function(result, word, index) {\n  return result + (index ? '_' : '') + word.toLowerCase();\n});\n\nexport default snakeCase;\n", "import baseEach from './_baseEach.js';\n\n/**\n * The base implementation of `_.some` without support for iteratee shorthands.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction baseSome(collection, predicate) {\n  var result;\n\n  baseEach(collection, function(value, index, collection) {\n    result = predicate(value, index, collection);\n    return !result;\n  });\n  return !!result;\n}\n\nexport default baseSome;\n", "import arraySome from './_arraySome.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseSome from './_baseSome.js';\nimport isArray from './isArray.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Checks if `predicate` returns truthy for **any** element of `collection`.\n * Iteration is stopped once `predicate` returns truthy. The predicate is\n * invoked with three arguments: (value, index|key, collection).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n * @example\n *\n * _.some([null, 0, 'yes', false], Boolean);\n * // => true\n *\n * var users = [\n *   { 'user': 'barney', 'active': true },\n *   { 'user': 'fred',   'active': false }\n * ];\n *\n * // The `_.matches` iteratee shorthand.\n * _.some(users, { 'user': 'barney', 'active': false });\n * // => false\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.some(users, ['active', false]);\n * // => true\n *\n * // The `_.property` iteratee shorthand.\n * _.some(users, 'active');\n * // => true\n */\nfunction some(collection, predicate, guard) {\n  var func = isArray(collection) ? arraySome : baseSome;\n  if (guard && isIterateeCall(collection, predicate, guard)) {\n    predicate = undefined;\n  }\n  return func(collection, baseIteratee(predicate, 3));\n}\n\nexport default some;\n", "import baseFlatten from './_baseFlatten.js';\nimport baseOrderBy from './_baseOrderBy.js';\nimport baseRest from './_baseRest.js';\nimport isIterateeCall from './_isIterateeCall.js';\n\n/**\n * Creates an array of elements, sorted in ascending order by the results of\n * running each element in a collection thru each iteratee. This method\n * performs a stable sort, that is, it preserves the original sort order of\n * equal elements. The iteratees are invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {...(Function|Function[])} [iteratees=[_.identity]]\n *  The iteratees to sort by.\n * @returns {Array} Returns the new sorted array.\n * @example\n *\n * var users = [\n *   { 'user': 'fred',   'age': 48 },\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 30 },\n *   { 'user': 'barney', 'age': 34 }\n * ];\n *\n * _.sortBy(users, [function(o) { return o.user; }]);\n * // => objects for [['barney', 36], ['barney', 34], ['fred', 48], ['fred', 30]]\n *\n * _.sortBy(users, ['user', 'age']);\n * // => objects for [['barney', 34], ['barney', 36], ['fred', 30], ['fred', 48]]\n */\nvar sortBy = baseRest(function(collection, iteratees) {\n  if (collection == null) {\n    return [];\n  }\n  var length = iteratees.length;\n  if (length > 1 && isIterateeCall(collection, iteratees[0], iteratees[1])) {\n    iteratees = [];\n  } else if (length > 2 && isIterateeCall(iteratees[0], iteratees[1], iteratees[2])) {\n    iteratees = [iteratees[0]];\n  }\n  return baseOrderBy(collection, baseFlatten(iteratees, 1), []);\n});\n\nexport default sortBy;\n", "import isSymbol from './isSymbol.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nexport default baseSortedIndexBy;\n", "import baseSortedIndexBy from './_baseSortedIndexBy.js';\nimport identity from './identity.js';\nimport isSymbol from './isSymbol.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n/**\n * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n * performs a binary search of `array` to determine the index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndex(array, value, retHighest) {\n  var low = 0,\n      high = array == null ? low : array.length;\n\n  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n    while (low < high) {\n      var mid = (low + high) >>> 1,\n          computed = array[mid];\n\n      if (computed !== null && !isSymbol(computed) &&\n          (retHighest ? (computed <= value) : (computed < value))) {\n        low = mid + 1;\n      } else {\n        high = mid;\n      }\n    }\n    return high;\n  }\n  return baseSortedIndexBy(array, value, identity, retHighest);\n}\n\nexport default baseSortedIndex;\n", "import baseSortedIndex from './_baseSortedIndex.js';\n\n/**\n * Uses a binary search to determine the lowest index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedIndex([30, 50], 40);\n * // => 1\n */\nfunction sortedIndex(array, value) {\n  return baseSortedIndex(array, value);\n}\n\nexport default sortedIndex;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseSortedIndexBy from './_baseSortedIndexBy.js';\n\n/**\n * This method is like `_.sortedIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n * // => 0\n */\nfunction sortedIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2));\n}\n\nexport default sortedIndexBy;\n", "import baseSortedIndex from './_baseSortedIndex.js';\nimport eq from './eq.js';\n\n/**\n * This method is like `_.indexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedIndexOf([4, 5, 5, 5, 6], 5);\n * // => 1\n */\nfunction sortedIndexOf(array, value) {\n  var length = array == null ? 0 : array.length;\n  if (length) {\n    var index = baseSortedIndex(array, value);\n    if (index < length && eq(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default sortedIndexOf;\n", "import baseSortedIndex from './_baseSortedIndex.js';\n\n/**\n * This method is like `_.sortedIndex` except that it returns the highest\n * index at which `value` should be inserted into `array` in order to\n * maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n * // => 4\n */\nfunction sortedLastIndex(array, value) {\n  return baseSortedIndex(array, value, true);\n}\n\nexport default sortedLastIndex;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseSortedIndexBy from './_baseSortedIndexBy.js';\n\n/**\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 1\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n * // => 1\n */\nfunction sortedLastIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2), true);\n}\n\nexport default sortedLastIndexBy;\n", "import baseSortedIndex from './_baseSortedIndex.js';\nimport eq from './eq.js';\n\n/**\n * This method is like `_.lastIndexOf` except that it performs a binary\n * search on a sorted `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n * @example\n *\n * _.sortedLastIndexOf([4, 5, 5, 5, 6], 5);\n * // => 3\n */\nfunction sortedLastIndexOf(array, value) {\n  var length = array == null ? 0 : array.length;\n  if (length) {\n    var index = baseSortedIndex(array, value, true) - 1;\n    if (eq(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default sortedLastIndexOf;\n", "import eq from './eq.js';\n\n/**\n * The base implementation of `_.sortedUniq` and `_.sortedUniqBy` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseSortedUniq(array, iteratee) {\n  var index = -1,\n      length = array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    if (!index || !eq(computed, seen)) {\n      var seen = computed;\n      result[resIndex++] = value === 0 ? 0 : value;\n    }\n  }\n  return result;\n}\n\nexport default baseSortedUniq;\n", "import baseSortedUniq from './_baseSortedUniq.js';\n\n/**\n * This method is like `_.uniq` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniq([1, 1, 2]);\n * // => [1, 2]\n */\nfunction sortedUniq(array) {\n  return (array && array.length)\n    ? baseSortedUniq(array)\n    : [];\n}\n\nexport default sortedUniq;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseSortedUniq from './_baseSortedUniq.js';\n\n/**\n * This method is like `_.uniqBy` except that it's designed and optimized\n * for sorted arrays.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.sortedUniqBy([1.1, 1.2, 2.3, 2.4], Math.floor);\n * // => [1.1, 2.3]\n */\nfunction sortedUniqBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSortedUniq(array, baseIteratee(iteratee, 2))\n    : [];\n}\n\nexport default sortedUniqBy;\n", "import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport isRegExp from './isRegExp.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/**\n * Splits `string` by `separator`.\n *\n * **Note:** This method is based on\n * [`String#split`](https://mdn.io/String/split).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to split.\n * @param {RegExp|string} separator The separator pattern to split by.\n * @param {number} [limit] The length to truncate results to.\n * @returns {Array} Returns the string segments.\n * @example\n *\n * _.split('a-b-c', '-', 2);\n * // => ['a', 'b']\n */\nfunction split(string, separator, limit) {\n  if (limit && typeof limit != 'number' && isIterateeCall(string, separator, limit)) {\n    separator = limit = undefined;\n  }\n  limit = limit === undefined ? MAX_ARRAY_LENGTH : limit >>> 0;\n  if (!limit) {\n    return [];\n  }\n  string = toString(string);\n  if (string && (\n        typeof separator == 'string' ||\n        (separator != null && !isRegExp(separator))\n      )) {\n    separator = baseToString(separator);\n    if (!separator && hasUnicode(string)) {\n      return castSlice(stringToArray(string), 0, limit);\n    }\n  }\n  return string.split(separator, limit);\n}\n\nexport default split;\n", "import apply from './_apply.js';\nimport arrayPush from './_arrayPush.js';\nimport baseRest from './_baseRest.js';\nimport castSlice from './_castSlice.js';\nimport toInteger from './toInteger.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * Creates a function that invokes `func` with the `this` binding of the\n * create function and an array of arguments much like\n * [`Function#apply`](http://www.ecma-international.org/ecma-262/7.0/#sec-function.prototype.apply).\n *\n * **Note:** This method is based on the\n * [spread operator](https://mdn.io/spread_operator).\n *\n * @static\n * @memberOf _\n * @since 3.2.0\n * @category Function\n * @param {Function} func The function to spread arguments over.\n * @param {number} [start=0] The start position of the spread.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var say = _.spread(function(who, what) {\n *   return who + ' says ' + what;\n * });\n *\n * say(['fred', 'hello']);\n * // => 'fred says hello'\n *\n * var numbers = Promise.all([\n *   Promise.resolve(40),\n *   Promise.resolve(36)\n * ]);\n *\n * numbers.then(_.spread(function(x, y) {\n *   return x + y;\n * }));\n * // => a Promise of 76\n */\nfunction spread(func, start) {\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  start = start == null ? 0 : nativeMax(toInteger(start), 0);\n  return baseRest(function(args) {\n    var array = args[start],\n        otherArgs = castSlice(args, 0, start);\n\n    if (array) {\n      arrayPush(otherArgs, array);\n    }\n    return apply(func, this, otherArgs);\n  });\n}\n\nexport default spread;\n", "import createCompounder from './_createCompounder.js';\nimport upperFirst from './upperFirst.js';\n\n/**\n * Converts `string` to\n * [start case](https://en.wikipedia.org/wiki/Letter_case#Stylistic_or_specialised_usage).\n *\n * @static\n * @memberOf _\n * @since 3.1.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the start cased string.\n * @example\n *\n * _.startCase('--foo-bar--');\n * // => 'Foo Bar'\n *\n * _.startCase('fooBar');\n * // => 'Foo Bar'\n *\n * _.startCase('__FOO_BAR__');\n * // => 'FOO BAR'\n */\nvar startCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + upperFirst(word);\n});\n\nexport default startCase;\n", "import baseClamp from './_baseClamp.js';\nimport baseToString from './_baseToString.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/**\n * Checks if `string` starts with the given target string.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to inspect.\n * @param {string} [target] The string to search for.\n * @param {number} [position=0] The position to search from.\n * @returns {boolean} Returns `true` if `string` starts with `target`,\n *  else `false`.\n * @example\n *\n * _.startsWith('abc', 'a');\n * // => true\n *\n * _.startsWith('abc', 'b');\n * // => false\n *\n * _.startsWith('abc', 'b', 1);\n * // => true\n */\nfunction startsWith(string, target, position) {\n  string = toString(string);\n  position = position == null\n    ? 0\n    : baseClamp(toInteger(position), 0, string.length);\n\n  target = baseToString(target);\n  return string.slice(position, position + target.length) == target;\n}\n\nexport default startsWith;\n", "/**\n * This method returns a new empty object.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Object} Returns the new empty object.\n * @example\n *\n * var objects = _.times(2, _.stubObject);\n *\n * console.log(objects);\n * // => [{}, {}]\n *\n * console.log(objects[0] === objects[1]);\n * // => false\n */\nfunction stubObject() {\n  return {};\n}\n\nexport default stubObject;\n", "/**\n * This method returns an empty string.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {string} Returns the empty string.\n * @example\n *\n * _.times(2, _.stubString);\n * // => ['', '']\n */\nfunction stubString() {\n  return '';\n}\n\nexport default stubString;\n", "/**\n * This method returns `true`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `true`.\n * @example\n *\n * _.times(2, _.stubTrue);\n * // => [true, true]\n */\nfunction stubTrue() {\n  return true;\n}\n\nexport default stubTrue;\n", "import createMathOperation from './_createMathOperation.js';\n\n/**\n * Subtract two numbers.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {number} minuend The first number in a subtraction.\n * @param {number} subtrahend The second number in a subtraction.\n * @returns {number} Returns the difference.\n * @example\n *\n * _.subtract(6, 4);\n * // => 2\n */\nvar subtract = createMathOperation(function(minuend, subtrahend) {\n  return minuend - subtrahend;\n}, 0);\n\nexport default subtract;\n", "import baseSum from './_baseSum.js';\nimport identity from './identity.js';\n\n/**\n * Computes the sum of the values in `array`.\n *\n * @static\n * @memberOf _\n * @since 3.4.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @returns {number} Returns the sum.\n * @example\n *\n * _.sum([4, 2, 8, 6]);\n * // => 20\n */\nfunction sum(array) {\n  return (array && array.length)\n    ? baseSum(array, identity)\n    : 0;\n}\n\nexport default sum;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseSum from './_baseSum.js';\n\n/**\n * This method is like `_.sum` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the value to be summed.\n * The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Math\n * @param {Array} array The array to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the sum.\n * @example\n *\n * var objects = [{ 'n': 4 }, { 'n': 2 }, { 'n': 8 }, { 'n': 6 }];\n *\n * _.sumBy(objects, function(o) { return o.n; });\n * // => 20\n *\n * // The `_.property` iteratee shorthand.\n * _.sumBy(objects, 'n');\n * // => 20\n */\nfunction sumBy(array, iteratee) {\n  return (array && array.length)\n    ? baseSum(array, baseIteratee(iteratee, 2))\n    : 0;\n}\n\nexport default sumBy;\n", "import baseSlice from './_baseSlice.js';\n\n/**\n * Gets all but the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.tail([1, 2, 3]);\n * // => [2, 3]\n */\nfunction tail(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? baseSlice(array, 1, length) : [];\n}\n\nexport default tail;\n", "import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements taken from the beginning.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.take([1, 2, 3]);\n * // => [1]\n *\n * _.take([1, 2, 3], 2);\n * // => [1, 2]\n *\n * _.take([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.take([1, 2, 3], 0);\n * // => []\n */\nfunction take(array, n, guard) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  return baseSlice(array, 0, n < 0 ? 0 : n);\n}\n\nexport default take;\n", "import baseSlice from './_baseSlice.js';\nimport toInteger from './toInteger.js';\n\n/**\n * Creates a slice of `array` with `n` elements taken from the end.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {number} [n=1] The number of elements to take.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * _.takeRight([1, 2, 3]);\n * // => [3]\n *\n * _.takeRight([1, 2, 3], 2);\n * // => [2, 3]\n *\n * _.takeRight([1, 2, 3], 5);\n * // => [1, 2, 3]\n *\n * _.takeRight([1, 2, 3], 0);\n * // => []\n */\nfunction takeRight(array, n, guard) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return [];\n  }\n  n = (guard || n === undefined) ? 1 : toInteger(n);\n  n = length - n;\n  return baseSlice(array, n < 0 ? 0 : n, length);\n}\n\nexport default takeRight;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseWhile from './_baseWhile.js';\n\n/**\n * Creates a slice of `array` with elements taken from the end. Elements are\n * taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.takeRightWhile(users, function(o) { return !o.active; });\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeRightWhile(users, { 'user': 'pebbles', 'active': false });\n * // => objects for ['pebbles']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeRightWhile(users, ['active', false]);\n * // => objects for ['fred', 'pebbles']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeRightWhile(users, 'active');\n * // => []\n */\nfunction takeRightWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3), false, true)\n    : [];\n}\n\nexport default takeRightWhile;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseWhile from './_baseWhile.js';\n\n/**\n * Creates a slice of `array` with elements taken from the beginning. Elements\n * are taken until `predicate` returns falsey. The predicate is invoked with\n * three arguments: (value, index, array).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The array to query.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the slice of `array`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': false },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': true }\n * ];\n *\n * _.takeWhile(users, function(o) { return !o.active; });\n * // => objects for ['barney', 'fred']\n *\n * // The `_.matches` iteratee shorthand.\n * _.takeWhile(users, { 'user': 'barney', 'active': false });\n * // => objects for ['barney']\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.takeWhile(users, ['active', false]);\n * // => objects for ['barney', 'fred']\n *\n * // The `_.property` iteratee shorthand.\n * _.takeWhile(users, 'active');\n * // => []\n */\nfunction takeWhile(array, predicate) {\n  return (array && array.length)\n    ? baseWhile(array, baseIteratee(predicate, 3))\n    : [];\n}\n\nexport default takeWhile;\n", "/**\n * This method invokes `interceptor` and returns `value`. The interceptor\n * is invoked with one argument; (value). The purpose of this method is to\n * \"tap into\" a method chain sequence in order to modify intermediate results.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns `value`.\n * @example\n *\n * _([1, 2, 3])\n *  .tap(function(array) {\n *    // Mutate input array.\n *    array.pop();\n *  })\n *  .reverse()\n *  .value();\n * // => [2, 1]\n */\nfunction tap(value, interceptor) {\n  interceptor(value);\n  return value;\n}\n\nexport default tap;\n", "import eq from './eq.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used by `_.defaults` to customize its `_.assignIn` use to assign properties\n * of source objects to the destination object for all destination properties\n * that resolve to `undefined`.\n *\n * @private\n * @param {*} objValue The destination value.\n * @param {*} srcValue The source value.\n * @param {string} key The key of the property to assign.\n * @param {Object} object The parent object of `objValue`.\n * @returns {*} Returns the value to assign.\n */\nfunction customDefaultsAssignIn(objValue, srcValue, key, object) {\n  if (objValue === undefined ||\n      (eq(objValue, objectProto[key]) && !hasOwnProperty.call(object, key))) {\n    return srcValue;\n  }\n  return objValue;\n}\n\nexport default customDefaultsAssignIn;\n", "/** Used to escape characters for inclusion in compiled string literals. */\nvar stringEscapes = {\n  '\\\\': '\\\\',\n  \"'\": \"'\",\n  '\\n': 'n',\n  '\\r': 'r',\n  '\\u2028': 'u2028',\n  '\\u2029': 'u2029'\n};\n\n/**\n * Used by `_.template` to escape characters for inclusion in compiled string literals.\n *\n * @private\n * @param {string} chr The matched character to escape.\n * @returns {string} Returns the escaped character.\n */\nfunction escapeStringChar(chr) {\n  return '\\\\' + stringEscapes[chr];\n}\n\nexport default escapeStringChar;\n", "/** Used to match template delimiters. */\nvar reInterpolate = /<%=([\\s\\S]+?)%>/g;\n\nexport default reInterpolate;\n", "/** Used to match template delimiters. */\nvar reEscape = /<%-([\\s\\S]+?)%>/g;\n\nexport default reEscape;\n", "/** Used to match template delimiters. */\nvar reEvaluate = /<%([\\s\\S]+?)%>/g;\n\nexport default reEvaluate;\n", "import escape from './escape.js';\nimport reEscape from './_reEscape.js';\nimport reEvaluate from './_reEvaluate.js';\nimport reInterpolate from './_reInterpolate.js';\n\n/**\n * By default, the template delimiters used by lodash are like those in\n * embedded Ruby (ERB) as well as ES2015 template strings. Change the\n * following template settings to use alternative delimiters.\n *\n * @static\n * @memberOf _\n * @type {Object}\n */\nvar templateSettings = {\n\n  /**\n   * Used to detect `data` property values to be HTML-escaped.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */\n  'escape': reEscape,\n\n  /**\n   * Used to detect code to be evaluated.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */\n  'evaluate': reEvaluate,\n\n  /**\n   * Used to detect `data` property values to inject.\n   *\n   * @memberOf _.templateSettings\n   * @type {RegExp}\n   */\n  'interpolate': reInterpolate,\n\n  /**\n   * Used to reference the data object in the template text.\n   *\n   * @memberOf _.templateSettings\n   * @type {string}\n   */\n  'variable': '',\n\n  /**\n   * Used to import variables into the compiled template.\n   *\n   * @memberOf _.templateSettings\n   * @type {Object}\n   */\n  'imports': {\n\n    /**\n     * A reference to the `lodash` function.\n     *\n     * @memberOf _.templateSettings.imports\n     * @type {Function}\n     */\n    '_': { 'escape': escape }\n  }\n};\n\nexport default templateSettings;\n", "import assignInWith from './assignInWith.js';\nimport attempt from './attempt.js';\nimport baseValues from './_baseValues.js';\nimport customDefaultsAssignIn from './_customDefaultsAssignIn.js';\nimport escapeStringChar from './_escapeStringChar.js';\nimport isError from './isError.js';\nimport isIterateeCall from './_isIterateeCall.js';\nimport keys from './keys.js';\nimport reInterpolate from './_reInterpolate.js';\nimport templateSettings from './templateSettings.js';\nimport toString from './toString.js';\n\n/** Error message constants. */\nvar INVALID_TEMPL_VAR_ERROR_TEXT = 'Invalid `variable` option passed into `_.template`';\n\n/** Used to match empty string literals in compiled template source. */\nvar reEmptyStringLeading = /\\b__p \\+= '';/g,\n    reEmptyStringMiddle = /\\b(__p \\+=) '' \\+/g,\n    reEmptyStringTrailing = /(__e\\(.*?\\)|\\b__t\\)) \\+\\n'';/g;\n\n/**\n * Used to validate the `validate` option in `_.template` variable.\n *\n * Forbids characters which could potentially change the meaning of the function argument definition:\n * - \"(),\" (modification of function parameters)\n * - \"=\" (default value)\n * - \"[]{}\" (destructuring of function parameters)\n * - \"/\" (beginning of a comment)\n * - whitespace\n */\nvar reForbiddenIdentifierChars = /[()=,{}\\[\\]\\/\\s]/;\n\n/**\n * Used to match\n * [ES template delimiters](http://ecma-international.org/ecma-262/7.0/#sec-template-literal-lexical-components).\n */\nvar reEsTemplate = /\\$\\{([^\\\\}]*(?:\\\\.[^\\\\}]*)*)\\}/g;\n\n/** Used to ensure capturing order of template delimiters. */\nvar reNoMatch = /($^)/;\n\n/** Used to match unescaped characters in compiled string literals. */\nvar reUnescapedString = /['\\n\\r\\u2028\\u2029\\\\]/g;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates a compiled template function that can interpolate data properties\n * in \"interpolate\" delimiters, HTML-escape interpolated data properties in\n * \"escape\" delimiters, and execute JavaScript in \"evaluate\" delimiters. Data\n * properties may be accessed as free variables in the template. If a setting\n * object is given, it takes precedence over `_.templateSettings` values.\n *\n * **Note:** In the development build `_.template` utilizes\n * [sourceURLs](http://www.html5rocks.com/en/tutorials/developertools/sourcemaps/#toc-sourceurl)\n * for easier debugging.\n *\n * For more information on precompiling templates see\n * [lodash's custom builds documentation](https://lodash.com/custom-builds).\n *\n * For more information on Chrome extension sandboxes see\n * [Chrome's extensions documentation](https://developer.chrome.com/extensions/sandboxingEval).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category String\n * @param {string} [string=''] The template string.\n * @param {Object} [options={}] The options object.\n * @param {RegExp} [options.escape=_.templateSettings.escape]\n *  The HTML \"escape\" delimiter.\n * @param {RegExp} [options.evaluate=_.templateSettings.evaluate]\n *  The \"evaluate\" delimiter.\n * @param {Object} [options.imports=_.templateSettings.imports]\n *  An object to import into the template as free variables.\n * @param {RegExp} [options.interpolate=_.templateSettings.interpolate]\n *  The \"interpolate\" delimiter.\n * @param {string} [options.sourceURL='templateSources[n]']\n *  The sourceURL of the compiled template.\n * @param {string} [options.variable='obj']\n *  The data object variable name.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {Function} Returns the compiled template function.\n * @example\n *\n * // Use the \"interpolate\" delimiter to create a compiled template.\n * var compiled = _.template('hello <%= user %>!');\n * compiled({ 'user': 'fred' });\n * // => 'hello fred!'\n *\n * // Use the HTML \"escape\" delimiter to escape data property values.\n * var compiled = _.template('<b><%- value %></b>');\n * compiled({ 'value': '<script>' });\n * // => '<b>&lt;script&gt;</b>'\n *\n * // Use the \"evaluate\" delimiter to execute JavaScript and generate HTML.\n * var compiled = _.template('<% _.forEach(users, function(user) { %><li><%- user %></li><% }); %>');\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the internal `print` function in \"evaluate\" delimiters.\n * var compiled = _.template('<% print(\"hello \" + user); %>!');\n * compiled({ 'user': 'barney' });\n * // => 'hello barney!'\n *\n * // Use the ES template literal delimiter as an \"interpolate\" delimiter.\n * // Disable support by replacing the \"interpolate\" delimiter.\n * var compiled = _.template('hello ${ user }!');\n * compiled({ 'user': 'pebbles' });\n * // => 'hello pebbles!'\n *\n * // Use backslashes to treat delimiters as plain text.\n * var compiled = _.template('<%= \"\\\\<%- value %\\\\>\" %>');\n * compiled({ 'value': 'ignored' });\n * // => '<%- value %>'\n *\n * // Use the `imports` option to import `jQuery` as `jq`.\n * var text = '<% jq.each(users, function(user) { %><li><%- user %></li><% }); %>';\n * var compiled = _.template(text, { 'imports': { 'jq': jQuery } });\n * compiled({ 'users': ['fred', 'barney'] });\n * // => '<li>fred</li><li>barney</li>'\n *\n * // Use the `sourceURL` option to specify a custom sourceURL for the template.\n * var compiled = _.template('hello <%= user %>!', { 'sourceURL': '/basic/greeting.jst' });\n * compiled(data);\n * // => Find the source of \"greeting.jst\" under the Sources tab or Resources panel of the web inspector.\n *\n * // Use the `variable` option to ensure a with-statement isn't used in the compiled template.\n * var compiled = _.template('hi <%= data.user %>!', { 'variable': 'data' });\n * compiled.source;\n * // => function(data) {\n * //   var __t, __p = '';\n * //   __p += 'hi ' + ((__t = ( data.user )) == null ? '' : __t) + '!';\n * //   return __p;\n * // }\n *\n * // Use custom template delimiters.\n * _.templateSettings.interpolate = /{{([\\s\\S]+?)}}/g;\n * var compiled = _.template('hello {{ user }}!');\n * compiled({ 'user': 'mustache' });\n * // => 'hello mustache!'\n *\n * // Use the `source` property to inline compiled templates for meaningful\n * // line numbers in error messages and stack traces.\n * fs.writeFileSync(path.join(process.cwd(), 'jst.js'), '\\\n *   var JST = {\\\n *     \"main\": ' + _.template(mainText).source + '\\\n *   };\\\n * ');\n */\nfunction template(string, options, guard) {\n  // Based on John Resig's `tmpl` implementation\n  // (http://ejohn.org/blog/javascript-micro-templating/)\n  // and Laura Doktorova's doT.js (https://github.com/olado/doT).\n  var settings = templateSettings.imports._.templateSettings || templateSettings;\n\n  if (guard && isIterateeCall(string, options, guard)) {\n    options = undefined;\n  }\n  string = toString(string);\n  options = assignInWith({}, options, settings, customDefaultsAssignIn);\n\n  var imports = assignInWith({}, options.imports, settings.imports, customDefaultsAssignIn),\n      importsKeys = keys(imports),\n      importsValues = baseValues(imports, importsKeys);\n\n  var isEscaping,\n      isEvaluating,\n      index = 0,\n      interpolate = options.interpolate || reNoMatch,\n      source = \"__p += '\";\n\n  // Compile the regexp to match each delimiter.\n  var reDelimiters = RegExp(\n    (options.escape || reNoMatch).source + '|' +\n    interpolate.source + '|' +\n    (interpolate === reInterpolate ? reEsTemplate : reNoMatch).source + '|' +\n    (options.evaluate || reNoMatch).source + '|$'\n  , 'g');\n\n  // Use a sourceURL for easier debugging.\n  // The sourceURL gets injected into the source that's eval-ed, so be careful\n  // to normalize all kinds of whitespace, so e.g. newlines (and unicode versions of it) can't sneak in\n  // and escape the comment, thus injecting code that gets evaled.\n  var sourceURL = hasOwnProperty.call(options, 'sourceURL')\n    ? ('//# sourceURL=' +\n       (options.sourceURL + '').replace(/\\s/g, ' ') +\n       '\\n')\n    : '';\n\n  string.replace(reDelimiters, function(match, escapeValue, interpolateValue, esTemplateValue, evaluateValue, offset) {\n    interpolateValue || (interpolateValue = esTemplateValue);\n\n    // Escape characters that can't be included in string literals.\n    source += string.slice(index, offset).replace(reUnescapedString, escapeStringChar);\n\n    // Replace delimiters with snippets.\n    if (escapeValue) {\n      isEscaping = true;\n      source += \"' +\\n__e(\" + escapeValue + \") +\\n'\";\n    }\n    if (evaluateValue) {\n      isEvaluating = true;\n      source += \"';\\n\" + evaluateValue + \";\\n__p += '\";\n    }\n    if (interpolateValue) {\n      source += \"' +\\n((__t = (\" + interpolateValue + \")) == null ? '' : __t) +\\n'\";\n    }\n    index = offset + match.length;\n\n    // The JS engine embedded in Adobe products needs `match` returned in\n    // order to produce the correct `offset` value.\n    return match;\n  });\n\n  source += \"';\\n\";\n\n  // If `variable` is not specified wrap a with-statement around the generated\n  // code to add the data object to the top of the scope chain.\n  var variable = hasOwnProperty.call(options, 'variable') && options.variable;\n  if (!variable) {\n    source = 'with (obj) {\\n' + source + '\\n}\\n';\n  }\n  // Throw an error if a forbidden character was found in `variable`, to prevent\n  // potential command injection attacks.\n  else if (reForbiddenIdentifierChars.test(variable)) {\n    throw new Error(INVALID_TEMPL_VAR_ERROR_TEXT);\n  }\n\n  // Cleanup code by stripping empty strings.\n  source = (isEvaluating ? source.replace(reEmptyStringLeading, '') : source)\n    .replace(reEmptyStringMiddle, '$1')\n    .replace(reEmptyStringTrailing, '$1;');\n\n  // Frame code as the function body.\n  source = 'function(' + (variable || 'obj') + ') {\\n' +\n    (variable\n      ? ''\n      : 'obj || (obj = {});\\n'\n    ) +\n    \"var __t, __p = ''\" +\n    (isEscaping\n       ? ', __e = _.escape'\n       : ''\n    ) +\n    (isEvaluating\n      ? ', __j = Array.prototype.join;\\n' +\n        \"function print() { __p += __j.call(arguments, '') }\\n\"\n      : ';\\n'\n    ) +\n    source +\n    'return __p\\n}';\n\n  var result = attempt(function() {\n    return Function(importsKeys, sourceURL + 'return ' + source)\n      .apply(undefined, importsValues);\n  });\n\n  // Provide the compiled function's source by its `toString` method or\n  // the `source` property as a convenience for inlining compiled templates.\n  result.source = source;\n  if (isError(result)) {\n    throw result;\n  }\n  return result;\n}\n\nexport default template;\n", "import debounce from './debounce.js';\nimport isObject from './isObject.js';\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a throttled function that only invokes `func` at most once per\n * every `wait` milliseconds. The throttled function comes with a `cancel`\n * method to cancel delayed `func` invocations and a `flush` method to\n * immediately invoke them. Provide `options` to indicate whether `func`\n * should be invoked on the leading and/or trailing edge of the `wait`\n * timeout. The `func` is invoked with the last arguments provided to the\n * throttled function. Subsequent calls to the throttled function return the\n * result of the last `func` invocation.\n *\n * **Note:** If `leading` and `trailing` options are `true`, `func` is\n * invoked on the trailing edge of the timeout only if the throttled function\n * is invoked more than once during the `wait` timeout.\n *\n * If `wait` is `0` and `leading` is `false`, `func` invocation is deferred\n * until to the next tick, similar to `setTimeout` with a timeout of `0`.\n *\n * See [David Corbacho's article](https://css-tricks.com/debouncing-throttling-explained-examples/)\n * for details over the differences between `_.throttle` and `_.debounce`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to throttle.\n * @param {number} [wait=0] The number of milliseconds to throttle invocations to.\n * @param {Object} [options={}] The options object.\n * @param {boolean} [options.leading=true]\n *  Specify invoking on the leading edge of the timeout.\n * @param {boolean} [options.trailing=true]\n *  Specify invoking on the trailing edge of the timeout.\n * @returns {Function} Returns the new throttled function.\n * @example\n *\n * // Avoid excessively updating the position while scrolling.\n * jQuery(window).on('scroll', _.throttle(updatePosition, 100));\n *\n * // Invoke `renewToken` when the click event is fired, but not more than once every 5 minutes.\n * var throttled = _.throttle(renewToken, 300000, { 'trailing': false });\n * jQuery(element).on('click', throttled);\n *\n * // Cancel the trailing throttled invocation.\n * jQuery(window).on('popstate', throttled.cancel);\n */\nfunction throttle(func, wait, options) {\n  var leading = true,\n      trailing = true;\n\n  if (typeof func != 'function') {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  if (isObject(options)) {\n    leading = 'leading' in options ? !!options.leading : leading;\n    trailing = 'trailing' in options ? !!options.trailing : trailing;\n  }\n  return debounce(func, wait, {\n    'leading': leading,\n    'maxWait': wait,\n    'trailing': trailing\n  });\n}\n\nexport default throttle;\n", "/**\n * This method is like `_.tap` except that it returns the result of `interceptor`.\n * The purpose of this method is to \"pass thru\" values replacing intermediate\n * results in a method chain sequence.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Seq\n * @param {*} value The value to provide to `interceptor`.\n * @param {Function} interceptor The function to invoke.\n * @returns {*} Returns the result of `interceptor`.\n * @example\n *\n * _('  abc  ')\n *  .chain()\n *  .trim()\n *  .thru(function(value) {\n *    return [value];\n *  })\n *  .value();\n * // => ['abc']\n */\nfunction thru(value, interceptor) {\n  return interceptor(value);\n}\n\nexport default thru;\n", "import baseTimes from './_baseTimes.js';\nimport castFunction from './_castFunction.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Invokes the iteratee `n` times, returning an array of the results of\n * each invocation. The iteratee is invoked with one argument; (index).\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n * @example\n *\n * _.times(3, String);\n * // => ['0', '1', '2']\n *\n *  _.times(4, _.constant(0));\n * // => [0, 0, 0, 0]\n */\nfunction times(n, iteratee) {\n  n = toInteger(n);\n  if (n < 1 || n > MAX_SAFE_INTEGER) {\n    return [];\n  }\n  var index = MAX_ARRAY_LENGTH,\n      length = nativeMin(n, MAX_ARRAY_LENGTH);\n\n  iteratee = castFunction(iteratee);\n  n -= MAX_ARRAY_LENGTH;\n\n  var result = baseTimes(length, iteratee);\n  while (++index < n) {\n    iteratee(index);\n  }\n  return result;\n}\n\nexport default times;\n", "/**\n * Enables the wrapper to be iterable.\n *\n * @name Symbol.iterator\n * @memberOf _\n * @since 4.0.0\n * @category Seq\n * @returns {Object} Returns the wrapper object.\n * @example\n *\n * var wrapped = _([1, 2]);\n *\n * wrapped[Symbol.iterator]() === wrapped;\n * // => true\n *\n * Array.from(wrapped);\n * // => [1, 2]\n */\nfunction wrapperToIterator() {\n  return this;\n}\n\nexport default wrapperToIterator;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport arrayPush from './_arrayPush.js';\nimport arrayReduce from './_arrayReduce.js';\n\n/**\n * The base implementation of `wrapperValue` which returns the result of\n * performing a sequence of actions on the unwrapped `value`, where each\n * successive action is supplied the return value of the previous.\n *\n * @private\n * @param {*} value The unwrapped value.\n * @param {Array} actions Actions to perform to resolve the unwrapped value.\n * @returns {*} Returns the resolved value.\n */\nfunction baseWrapperValue(value, actions) {\n  var result = value;\n  if (result instanceof LazyWrapper) {\n    result = result.value();\n  }\n  return arrayReduce(actions, function(result, action) {\n    return action.func.apply(action.thisArg, arrayPush([result], action.args));\n  }, result);\n}\n\nexport default baseWrapperValue;\n", "import baseWrapperValue from './_baseWrapperValue.js';\n\n/**\n * Executes the chain sequence to resolve the unwrapped value.\n *\n * @name value\n * @memberOf _\n * @since 0.1.0\n * @alias toJSON, valueOf\n * @category Seq\n * @returns {*} Returns the resolved unwrapped value.\n * @example\n *\n * _([1, 2, 3]).value();\n * // => [1, 2, 3]\n */\nfunction wrapperValue() {\n  return baseWrapperValue(this.__wrapped__, this.__actions__);\n}\n\nexport default wrapperValue;\n", "import toString from './toString.js';\n\n/**\n * Converts `string`, as a whole, to lower case just like\n * [String#toLowerCase](https://mdn.io/toLowerCase).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the lower cased string.\n * @example\n *\n * _.toLower('--Foo-Bar--');\n * // => '--foo-bar--'\n *\n * _.toLower('fooBar');\n * // => 'foobar'\n *\n * _.toLower('__FOO_BAR__');\n * // => '__foo_bar__'\n */\nfunction toLower(value) {\n  return toString(value).toLowerCase();\n}\n\nexport default toLower;\n", "import arrayMap from './_arrayMap.js';\nimport copyArray from './_copyArray.js';\nimport isArray from './isArray.js';\nimport isSymbol from './isSymbol.js';\nimport stringToPath from './_stringToPath.js';\nimport toKey from './_toKey.js';\nimport toString from './toString.js';\n\n/**\n * Converts `value` to a property path array.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Util\n * @param {*} value The value to convert.\n * @returns {Array} Returns the new property path array.\n * @example\n *\n * _.toPath('a.b.c');\n * // => ['a', 'b', 'c']\n *\n * _.toPath('a[0].b.c');\n * // => ['a', '0', 'b', 'c']\n */\nfunction toPath(value) {\n  if (isArray(value)) {\n    return arrayMap(value, toKey);\n  }\n  return isSymbol(value) ? [value] : copyArray(stringToPath(toString(value)));\n}\n\nexport default toPath;\n", "import baseClamp from './_baseClamp.js';\nimport toInteger from './toInteger.js';\n\n/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Converts `value` to a safe integer. A safe integer can be compared and\n * represented correctly.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toSafeInteger(3.2);\n * // => 3\n *\n * _.toSafeInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toSafeInteger(Infinity);\n * // => 9007199254740991\n *\n * _.toSafeInteger('3.2');\n * // => 3\n */\nfunction toSafeInteger(value) {\n  return value\n    ? baseClamp(toInteger(value), -MAX_SAFE_INTEGER, MAX_SAFE_INTEGER)\n    : (value === 0 ? value : 0);\n}\n\nexport default toSafeInteger;\n", "import toString from './toString.js';\n\n/**\n * Converts `string`, as a whole, to upper case just like\n * [String#toUpperCase](https://mdn.io/toUpperCase).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the upper cased string.\n * @example\n *\n * _.toUpper('--foo-bar--');\n * // => '--FOO-BAR--'\n *\n * _.toUpper('fooBar');\n * // => 'FOOBAR'\n *\n * _.toUpper('__foo_bar__');\n * // => '__FOO_BAR__'\n */\nfunction toUpper(value) {\n  return toString(value).toUpperCase();\n}\n\nexport default toUpper;\n", "import arrayEach from './_arrayEach.js';\nimport baseCreate from './_baseCreate.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseIteratee from './_baseIteratee.js';\nimport getPrototype from './_getPrototype.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isFunction from './isFunction.js';\nimport isObject from './isObject.js';\nimport isTypedArray from './isTypedArray.js';\n\n/**\n * An alternative to `_.reduce`; this method transforms `object` to a new\n * `accumulator` object which is the result of running each of its own\n * enumerable string keyed properties thru `iteratee`, with each invocation\n * potentially mutating the `accumulator` object. If `accumulator` is not\n * provided, a new object with the same `[[Prototype]]` will be used. The\n * iteratee is invoked with four arguments: (accumulator, value, key, object).\n * Iteratee functions may exit iteration early by explicitly returning `false`.\n *\n * @static\n * @memberOf _\n * @since 1.3.0\n * @category Object\n * @param {Object} object The object to iterate over.\n * @param {Function} [iteratee=_.identity] The function invoked per iteration.\n * @param {*} [accumulator] The custom accumulator value.\n * @returns {*} Returns the accumulated value.\n * @example\n *\n * _.transform([2, 3, 4], function(result, n) {\n *   result.push(n *= n);\n *   return n % 2 == 0;\n * }, []);\n * // => [4, 9]\n *\n * _.transform({ 'a': 1, 'b': 2, 'c': 1 }, function(result, value, key) {\n *   (result[value] || (result[value] = [])).push(key);\n * }, {});\n * // => { '1': ['a', 'c'], '2': ['b'] }\n */\nfunction transform(object, iteratee, accumulator) {\n  var isArr = isArray(object),\n      isArrLike = isArr || isBuffer(object) || isTypedArray(object);\n\n  iteratee = baseIteratee(iteratee, 4);\n  if (accumulator == null) {\n    var Ctor = object && object.constructor;\n    if (isArrLike) {\n      accumulator = isArr ? new Ctor : [];\n    }\n    else if (isObject(object)) {\n      accumulator = isFunction(Ctor) ? baseCreate(getPrototype(object)) : {};\n    }\n    else {\n      accumulator = {};\n    }\n  }\n  (isArrLike ? arrayEach : baseForOwn)(object, function(value, index, object) {\n    return iteratee(accumulator, value, index, object);\n  });\n  return accumulator;\n}\n\nexport default transform;\n", "import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the last unmatched string symbol.\n */\nfunction charsEndIndex(strSymbols, chrSymbols) {\n  var index = strSymbols.length;\n\n  while (index-- && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nexport default charsEndIndex;\n", "import baseIndexOf from './_baseIndexOf.js';\n\n/**\n * Used by `_.trim` and `_.trimStart` to get the index of the first string symbol\n * that is not found in the character symbols.\n *\n * @private\n * @param {Array} strSymbols The string symbols to inspect.\n * @param {Array} chrSymbols The character symbols to find.\n * @returns {number} Returns the index of the first unmatched string symbol.\n */\nfunction charsStartIndex(strSymbols, chrSymbols) {\n  var index = -1,\n      length = strSymbols.length;\n\n  while (++index < length && baseIndexOf(chrSymbols, strSymbols[index], 0) > -1) {}\n  return index;\n}\n\nexport default charsStartIndex;\n", "import baseToString from './_baseToString.js';\nimport baseTrim from './_baseTrim.js';\nimport castSlice from './_castSlice.js';\nimport charsEndIndex from './_charsEndIndex.js';\nimport charsStartIndex from './_charsStartIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/**\n * Removes leading and trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trim('  abc  ');\n * // => 'abc'\n *\n * _.trim('-_-abc-_-', '_-');\n * // => 'abc'\n *\n * _.map(['  foo  ', '  bar  '], _.trim);\n * // => ['foo', 'bar']\n */\nfunction trim(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return baseTrim(string);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      chrSymbols = stringToArray(chars),\n      start = charsStartIndex(strSymbols, chrSymbols),\n      end = charsEndIndex(strSymbols, chrSymbols) + 1;\n\n  return castSlice(strSymbols, start, end).join('');\n}\n\nexport default trim;\n", "import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport charsEndIndex from './_charsEndIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\nimport trimmedEndIndex from './_trimmedEndIndex.js';\n\n/**\n * Removes trailing whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimEnd('  abc  ');\n * // => '  abc'\n *\n * _.trimEnd('-_-abc-_-', '_-');\n * // => '-_-abc'\n */\nfunction trimEnd(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.slice(0, trimmedEndIndex(string) + 1);\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      end = charsEndIndex(strSymbols, stringToArray(chars)) + 1;\n\n  return castSlice(strSymbols, 0, end).join('');\n}\n\nexport default trimEnd;\n", "import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport charsStartIndex from './_charsStartIndex.js';\nimport stringToArray from './_stringToArray.js';\nimport toString from './toString.js';\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * Removes leading whitespace or specified characters from `string`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to trim.\n * @param {string} [chars=whitespace] The characters to trim.\n * @param- {Object} [guard] Enables use as an iteratee for methods like `_.map`.\n * @returns {string} Returns the trimmed string.\n * @example\n *\n * _.trimStart('  abc  ');\n * // => 'abc  '\n *\n * _.trimStart('-_-abc-_-', '_-');\n * // => 'abc-_-'\n */\nfunction trimStart(string, chars, guard) {\n  string = toString(string);\n  if (string && (guard || chars === undefined)) {\n    return string.replace(reTrimStart, '');\n  }\n  if (!string || !(chars = baseToString(chars))) {\n    return string;\n  }\n  var strSymbols = stringToArray(string),\n      start = charsStartIndex(strSymbols, stringToArray(chars));\n\n  return castSlice(strSymbols, start).join('');\n}\n\nexport default trimStart;\n", "import baseToString from './_baseToString.js';\nimport castSlice from './_castSlice.js';\nimport hasUnicode from './_hasUnicode.js';\nimport isObject from './isObject.js';\nimport isRegExp from './isRegExp.js';\nimport stringSize from './_stringSize.js';\nimport stringToArray from './_stringToArray.js';\nimport toInteger from './toInteger.js';\nimport toString from './toString.js';\n\n/** Used as default options for `_.truncate`. */\nvar DEFAULT_TRUNC_LENGTH = 30,\n    DEFAULT_TRUNC_OMISSION = '...';\n\n/** Used to match `RegExp` flags from their coerced string values. */\nvar reFlags = /\\w*$/;\n\n/**\n * Truncates `string` if it's longer than the given maximum string length.\n * The last characters of the truncated string are replaced with the omission\n * string which defaults to \"...\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to truncate.\n * @param {Object} [options={}] The options object.\n * @param {number} [options.length=30] The maximum string length.\n * @param {string} [options.omission='...'] The string to indicate text is omitted.\n * @param {RegExp|string} [options.separator] The separator pattern to truncate to.\n * @returns {string} Returns the truncated string.\n * @example\n *\n * _.truncate('hi-diddly-ho there, neighborino');\n * // => 'hi-diddly-ho there, neighbo...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': ' '\n * });\n * // => 'hi-diddly-ho there,...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'length': 24,\n *   'separator': /,? +/\n * });\n * // => 'hi-diddly-ho there...'\n *\n * _.truncate('hi-diddly-ho there, neighborino', {\n *   'omission': ' [...]'\n * });\n * // => 'hi-diddly-ho there, neig [...]'\n */\nfunction truncate(string, options) {\n  var length = DEFAULT_TRUNC_LENGTH,\n      omission = DEFAULT_TRUNC_OMISSION;\n\n  if (isObject(options)) {\n    var separator = 'separator' in options ? options.separator : separator;\n    length = 'length' in options ? toInteger(options.length) : length;\n    omission = 'omission' in options ? baseToString(options.omission) : omission;\n  }\n  string = toString(string);\n\n  var strLength = string.length;\n  if (hasUnicode(string)) {\n    var strSymbols = stringToArray(string);\n    strLength = strSymbols.length;\n  }\n  if (length >= strLength) {\n    return string;\n  }\n  var end = length - stringSize(omission);\n  if (end < 1) {\n    return omission;\n  }\n  var result = strSymbols\n    ? castSlice(strSymbols, 0, end).join('')\n    : string.slice(0, end);\n\n  if (separator === undefined) {\n    return result + omission;\n  }\n  if (strSymbols) {\n    end += (result.length - end);\n  }\n  if (isRegExp(separator)) {\n    if (string.slice(end).search(separator)) {\n      var match,\n          substring = result;\n\n      if (!separator.global) {\n        separator = RegExp(separator.source, toString(reFlags.exec(separator)) + 'g');\n      }\n      separator.lastIndex = 0;\n      while ((match = separator.exec(substring))) {\n        var newEnd = match.index;\n      }\n      result = result.slice(0, newEnd === undefined ? end : newEnd);\n    }\n  } else if (string.indexOf(baseToString(separator), end) != end) {\n    var index = result.lastIndexOf(separator);\n    if (index > -1) {\n      result = result.slice(0, index);\n    }\n  }\n  return result + omission;\n}\n\nexport default truncate;\n", "import ary from './ary.js';\n\n/**\n * Creates a function that accepts up to one argument, ignoring any\n * additional arguments.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Function\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n * @example\n *\n * _.map(['6', '8', '10'], _.unary(parseInt));\n * // => [6, 8, 10]\n */\nfunction unary(func) {\n  return ary(func, 1);\n}\n\nexport default unary;\n", "import basePropertyOf from './_basePropertyOf.js';\n\n/** Used to map HTML entities to characters. */\nvar htmlUnescapes = {\n  '&amp;': '&',\n  '&lt;': '<',\n  '&gt;': '>',\n  '&quot;': '\"',\n  '&#39;': \"'\"\n};\n\n/**\n * Used by `_.unescape` to convert HTML entities to characters.\n *\n * @private\n * @param {string} chr The matched character to unescape.\n * @returns {string} Returns the unescaped character.\n */\nvar unescapeHtmlChar = basePropertyOf(htmlUnescapes);\n\nexport default unescapeHtmlChar;\n", "import toString from './toString.js';\nimport unescapeHtmlChar from './_unescapeHtmlChar.js';\n\n/** Used to match HTML entities and HTML characters. */\nvar reEscapedHtml = /&(?:amp|lt|gt|quot|#39);/g,\n    reHasEscapedHtml = RegExp(reEscapedHtml.source);\n\n/**\n * The inverse of `_.escape`; this method converts the HTML entities\n * `&amp;`, `&lt;`, `&gt;`, `&quot;`, and `&#39;` in `string` to\n * their corresponding characters.\n *\n * **Note:** No other HTML entities are unescaped. To unescape additional\n * HTML entities use a third-party library like [_he_](https://mths.be/he).\n *\n * @static\n * @memberOf _\n * @since 0.6.0\n * @category String\n * @param {string} [string=''] The string to unescape.\n * @returns {string} Returns the unescaped string.\n * @example\n *\n * _.unescape('fred, barney, &amp; pebbles');\n * // => 'fred, barney, & pebbles'\n */\nfunction unescape(string) {\n  string = toString(string);\n  return (string && reHasEscapedHtml.test(string))\n    ? string.replace(reEscapedHtml, unescapeHtmlChar)\n    : string;\n}\n\nexport default unescape;\n", "import Set from './_Set.js';\nimport noop from './noop.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nexport default createSet;\n", "import SetCache from './_SetCache.js';\nimport arrayIncludes from './_arrayIncludes.js';\nimport arrayIncludesWith from './_arrayIncludesWith.js';\nimport cacheHas from './_cacheHas.js';\nimport createSet from './_createSet.js';\nimport setToArray from './_setToArray.js';\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nexport default baseUniq;\n", "import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nexport default union;\n", "import baseFlatten from './_baseFlatten.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.union` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which uniqueness is computed. Result values are chosen from the first\n * array in which the value occurs. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.unionBy([2.1], [1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.unionBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nvar unionBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), baseIteratee(iteratee, 2));\n});\n\nexport default unionBy;\n", "import baseFlatten from './_baseFlatten.js';\nimport baseRest from './_baseRest.js';\nimport baseUniq from './_baseUniq.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.union` except that it accepts `comparator` which\n * is invoked to compare elements of `arrays`. Result values are chosen from\n * the first array in which the value occurs. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.unionWith(objects, others, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar unionWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true), undefined, comparator);\n});\n\nexport default unionWith;\n", "import baseUniq from './_baseUniq.js';\n\n/**\n * Creates a duplicate-free version of an array, using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons, in which only the first occurrence of each element\n * is kept. The order of result values is determined by the order they occur\n * in the array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniq([2, 1, 2]);\n * // => [2, 1]\n */\nfunction uniq(array) {\n  return (array && array.length) ? baseUniq(array) : [];\n}\n\nexport default uniq;\n", "import baseIteratee from './_baseIteratee.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `iteratee` which is\n * invoked for each element in `array` to generate the criterion by which\n * uniqueness is computed. The order of result values is determined by the\n * order they occur in the array. The iteratee is invoked with one argument:\n * (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * _.uniqBy([2.1, 1.2, 2.3], Math.floor);\n * // => [2.1, 1.2]\n *\n * // The `_.property` iteratee shorthand.\n * _.uniqBy([{ 'x': 1 }, { 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 1 }, { 'x': 2 }]\n */\nfunction uniqBy(array, iteratee) {\n  return (array && array.length) ? baseUniq(array, baseIteratee(iteratee, 2)) : [];\n}\n\nexport default uniqBy;\n", "import baseUniq from './_baseUniq.js';\n\n/**\n * This method is like `_.uniq` except that it accepts `comparator` which\n * is invoked to compare elements of `array`. The order of result values is\n * determined by the order they occur in the array.The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.uniqWith(objects, _.isEqual);\n * // => [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }]\n */\nfunction uniqWith(array, comparator) {\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return (array && array.length) ? baseUniq(array, undefined, comparator) : [];\n}\n\nexport default uniqWith;\n", "import toString from './toString.js';\n\n/** Used to generate unique IDs. */\nvar idCounter = 0;\n\n/**\n * Generates a unique ID. If `prefix` is given, the ID is appended to it.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {string} [prefix=''] The value to prefix the ID with.\n * @returns {string} Returns the unique ID.\n * @example\n *\n * _.uniqueId('contact_');\n * // => 'contact_104'\n *\n * _.uniqueId();\n * // => '105'\n */\nfunction uniqueId(prefix) {\n  var id = ++idCounter;\n  return toString(prefix) + id;\n}\n\nexport default uniqueId;\n", "import baseUnset from './_baseUnset.js';\n\n/**\n * Removes the property at `path` of `object`.\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to unset.\n * @returns {boolean} Returns `true` if the property is deleted, else `false`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 7 } }] };\n * _.unset(object, 'a[0].b.c');\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n *\n * _.unset(object, ['a', '0', 'b', 'c']);\n * // => true\n *\n * console.log(object);\n * // => { 'a': [{ 'b': {} }] };\n */\nfunction unset(object, path) {\n  return object == null ? true : baseUnset(object, path);\n}\n\nexport default unset;\n", "import arrayFilter from './_arrayFilter.js';\nimport arrayMap from './_arrayMap.js';\nimport baseProperty from './_baseProperty.js';\nimport baseTimes from './_baseTimes.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nexport default unzip;\n", "import apply from './_apply.js';\nimport arrayMap from './_arrayMap.js';\nimport unzip from './unzip.js';\n\n/**\n * This method is like `_.unzip` except that it accepts `iteratee` to specify\n * how regrouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  regrouped values.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip([1, 2], [10, 20], [100, 200]);\n * // => [[1, 10, 100], [2, 20, 200]]\n *\n * _.unzipWith(zipped, _.add);\n * // => [3, 30, 300]\n */\nfunction unzipWith(array, iteratee) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var result = unzip(array);\n  if (iteratee == null) {\n    return result;\n  }\n  return arrayMap(result, function(group) {\n    return apply(iteratee, undefined, group);\n  });\n}\n\nexport default unzipWith;\n", "import baseGet from './_baseGet.js';\nimport baseSet from './_baseSet.js';\n\n/**\n * The base implementation of `_.update`.\n *\n * @private\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to update.\n * @param {Function} updater The function to produce the updated value.\n * @param {Function} [customizer] The function to customize path creation.\n * @returns {Object} Returns `object`.\n */\nfunction baseUpdate(object, path, updater, customizer) {\n  return baseSet(object, path, updater(baseGet(object, path)), customizer);\n}\n\nexport default baseUpdate;\n", "import baseUpdate from './_baseUpdate.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * This method is like `_.set` except that accepts `updater` to produce the\n * value to set. Use `_.updateWith` to customize `path` creation. The `updater`\n * is invoked with one argument: (value).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.update(object, 'a[0].b.c', function(n) { return n * n; });\n * console.log(object.a[0].b.c);\n * // => 9\n *\n * _.update(object, 'x[0].y.z', function(n) { return n ? n + 1 : 0; });\n * console.log(object.x[0].y.z);\n * // => 0\n */\nfunction update(object, path, updater) {\n  return object == null ? object : baseUpdate(object, path, castFunction(updater));\n}\n\nexport default update;\n", "import baseUpdate from './_baseUpdate.js';\nimport castFunction from './_castFunction.js';\n\n/**\n * This method is like `_.update` except that it accepts `customizer` which is\n * invoked to produce the objects of `path`.  If `customizer` returns `undefined`\n * path creation is handled by the method instead. The `customizer` is invoked\n * with three arguments: (nsValue, key, nsObject).\n *\n * **Note:** This method mutates `object`.\n *\n * @static\n * @memberOf _\n * @since 4.6.0\n * @category Object\n * @param {Object} object The object to modify.\n * @param {Array|string} path The path of the property to set.\n * @param {Function} updater The function to produce the updated value.\n * @param {Function} [customizer] The function to customize assigned values.\n * @returns {Object} Returns `object`.\n * @example\n *\n * var object = {};\n *\n * _.updateWith(object, '[0][1]', _.constant('a'), Object);\n * // => { '0': { '1': 'a' } }\n */\nfunction updateWith(object, path, updater, customizer) {\n  customizer = typeof customizer == 'function' ? customizer : undefined;\n  return object == null ? object : baseUpdate(object, path, castFunction(updater), customizer);\n}\n\nexport default updateWith;\n", "import createCompounder from './_createCompounder.js';\n\n/**\n * Converts `string`, as space separated words, to upper case.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category String\n * @param {string} [string=''] The string to convert.\n * @returns {string} Returns the upper cased string.\n * @example\n *\n * _.upperCase('--foo-bar');\n * // => 'FOO BAR'\n *\n * _.upperCase('fooBar');\n * // => 'FOO BAR'\n *\n * _.upperCase('__foo_bar__');\n * // => 'FOO BAR'\n */\nvar upperCase = createCompounder(function(result, word, index) {\n  return result + (index ? ' ' : '') + word.toUpperCase();\n});\n\nexport default upperCase;\n", "import baseValues from './_baseValues.js';\nimport keysIn from './keysIn.js';\n\n/**\n * Creates an array of the own and inherited enumerable string keyed property\n * values of `object`.\n *\n * **Note:** Non-object values are coerced to objects.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property values.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.valuesIn(new Foo);\n * // => [1, 2, 3] (iteration order is not guaranteed)\n */\nfunction valuesIn(object) {\n  return object == null ? [] : baseValues(object, keysIn(object));\n}\n\nexport default valuesIn;\n", "import baseDifference from './_baseDifference.js';\nimport baseRest from './_baseRest.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array excluding all given values using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * **Note:** Unlike `_.pull`, this method returns a new array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {...*} [values] The values to exclude.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.xor\n * @example\n *\n * _.without([2, 1, 2, 3], 1, 2);\n * // => [3]\n */\nvar without = baseRest(function(array, values) {\n  return isArrayLikeObject(array)\n    ? baseDifference(array, values)\n    : [];\n});\n\nexport default without;\n", "import castFunction from './_castFunction.js';\nimport partial from './partial.js';\n\n/**\n * Creates a function that provides `value` to `wrapper` as its first\n * argument. Any additional arguments provided to the function are appended\n * to those provided to the `wrapper`. The wrapper is invoked with the `this`\n * binding of the created function.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {*} value The value to wrap.\n * @param {Function} [wrapper=identity] The wrapper function.\n * @returns {Function} Returns the new function.\n * @example\n *\n * var p = _.wrap(_.escape, function(func, text) {\n *   return '<p>' + func(text) + '</p>';\n * });\n *\n * p('fred, barney, & pebbles');\n * // => '<p>fred, barney, &amp; pebbles</p>'\n */\nfunction wrap(value, wrapper) {\n  return partial(castFunction(wrapper), value);\n}\n\nexport default wrap;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport baseAt from './_baseAt.js';\nimport flatRest from './_flatRest.js';\nimport isIndex from './_isIndex.js';\nimport thru from './thru.js';\n\n/**\n * This method is the wrapper version of `_.at`.\n *\n * @name at\n * @memberOf _\n * @since 1.0.0\n * @category Seq\n * @param {...(string|string[])} [paths] The property paths to pick.\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }, 4] };\n *\n * _(object).at(['a[0].b.c', 'a[1]']).value();\n * // => [3, 4]\n */\nvar wrapperAt = flatRest(function(paths) {\n  var length = paths.length,\n      start = length ? paths[0] : 0,\n      value = this.__wrapped__,\n      interceptor = function(object) { return baseAt(object, paths); };\n\n  if (length > 1 || this.__actions__.length ||\n      !(value instanceof LazyWrapper) || !isIndex(start)) {\n    return this.thru(interceptor);\n  }\n  value = value.slice(start, +start + (length ? 1 : 0));\n  value.__actions__.push({\n    'func': thru,\n    'args': [interceptor],\n    'thisArg': undefined\n  });\n  return new LodashWrapper(value, this.__chain__).thru(function(array) {\n    if (length && !array.length) {\n      array.push(undefined);\n    }\n    return array;\n  });\n});\n\nexport default wrapperAt;\n", "import chain from './chain.js';\n\n/**\n * Creates a `lodash` wrapper instance with explicit method chain sequences enabled.\n *\n * @name chain\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var users = [\n *   { 'user': 'barney', 'age': 36 },\n *   { 'user': 'fred',   'age': 40 }\n * ];\n *\n * // A sequence without explicit chaining.\n * _(users).head();\n * // => { 'user': 'barney', 'age': 36 }\n *\n * // A sequence with explicit chaining.\n * _(users)\n *   .chain()\n *   .head()\n *   .pick('user')\n *   .value();\n * // => { 'user': 'barney' }\n */\nfunction wrapperChain() {\n  return chain(this);\n}\n\nexport default wrapperChain;\n", "import LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport reverse from './reverse.js';\nimport thru from './thru.js';\n\n/**\n * This method is the wrapper version of `_.reverse`.\n *\n * **Note:** This method mutates the wrapped array.\n *\n * @name reverse\n * @memberOf _\n * @since 0.1.0\n * @category Seq\n * @returns {Object} Returns the new `lodash` wrapper instance.\n * @example\n *\n * var array = [1, 2, 3];\n *\n * _(array).reverse().value()\n * // => [3, 2, 1]\n *\n * console.log(array);\n * // => [3, 2, 1]\n */\nfunction wrapperReverse() {\n  var value = this.__wrapped__;\n  if (value instanceof LazyWrapper) {\n    var wrapped = value;\n    if (this.__actions__.length) {\n      wrapped = new LazyWrapper(this);\n    }\n    wrapped = wrapped.reverse();\n    wrapped.__actions__.push({\n      'func': thru,\n      'args': [reverse],\n      'thisArg': undefined\n    });\n    return new LodashWrapper(wrapped, this.__chain__);\n  }\n  return this.thru(reverse);\n}\n\nexport default wrapperReverse;\n", "import baseDifference from './_baseDifference.js';\nimport baseFlatten from './_baseFlatten.js';\nimport baseUniq from './_baseUniq.js';\n\n/**\n * The base implementation of methods like `_.xor`, without support for\n * iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of values.\n */\nfunction baseXor(arrays, iteratee, comparator) {\n  var length = arrays.length;\n  if (length < 2) {\n    return length ? baseUniq(arrays[0]) : [];\n  }\n  var index = -1,\n      result = Array(length);\n\n  while (++index < length) {\n    var array = arrays[index],\n        othIndex = -1;\n\n    while (++othIndex < length) {\n      if (othIndex != index) {\n        result[index] = baseDifference(result[index] || array, arrays[othIndex], iteratee, comparator);\n      }\n    }\n  }\n  return baseUniq(baseFlatten(result, 1), iteratee, comparator);\n}\n\nexport default baseXor;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseRest from './_baseRest.js';\nimport baseXor from './_baseXor.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/**\n * Creates an array of unique values that is the\n * [symmetric difference](https://en.wikipedia.org/wiki/Symmetric_difference)\n * of the given arrays. The order of result values is determined by the order\n * they occur in the arrays.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of filtered values.\n * @see _.difference, _.without\n * @example\n *\n * _.xor([2, 1], [2, 3]);\n * // => [1, 3]\n */\nvar xor = baseRest(function(arrays) {\n  return baseXor(arrayFilter(arrays, isArrayLikeObject));\n});\n\nexport default xor;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport baseXor from './_baseXor.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.xor` except that it accepts `iteratee` which is\n * invoked for each element of each `arrays` to generate the criterion by\n * which by which they're compared. The order of result values is determined\n * by the order they occur in the arrays. The iteratee is invoked with one\n * argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * _.xorBy([2.1, 1.2], [2.3, 3.4], Math.floor);\n * // => [1.2, 3.4]\n *\n * // The `_.property` iteratee shorthand.\n * _.xorBy([{ 'x': 1 }], [{ 'x': 2 }, { 'x': 1 }], 'x');\n * // => [{ 'x': 2 }]\n */\nvar xorBy = baseRest(function(arrays) {\n  var iteratee = last(arrays);\n  if (isArrayLikeObject(iteratee)) {\n    iteratee = undefined;\n  }\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), baseIteratee(iteratee, 2));\n});\n\nexport default xorBy;\n", "import arrayFilter from './_arrayFilter.js';\nimport baseRest from './_baseRest.js';\nimport baseXor from './_baseXor.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport last from './last.js';\n\n/**\n * This method is like `_.xor` except that it accepts `comparator` which is\n * invoked to compare elements of `arrays`. The order of result values is\n * determined by the order they occur in the arrays. The comparator is invoked\n * with two arguments: (arrVal, othVal).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of filtered values.\n * @example\n *\n * var objects = [{ 'x': 1, 'y': 2 }, { 'x': 2, 'y': 1 }];\n * var others = [{ 'x': 1, 'y': 1 }, { 'x': 1, 'y': 2 }];\n *\n * _.xorWith(objects, others, _.isEqual);\n * // => [{ 'x': 2, 'y': 1 }, { 'x': 1, 'y': 1 }]\n */\nvar xorWith = baseRest(function(arrays) {\n  var comparator = last(arrays);\n  comparator = typeof comparator == 'function' ? comparator : undefined;\n  return baseXor(arrayFilter(arrays, isArrayLikeObject), undefined, comparator);\n});\n\nexport default xorWith;\n", "import baseRest from './_baseRest.js';\nimport unzip from './unzip.js';\n\n/**\n * Creates an array of grouped elements, the first of which contains the\n * first elements of the given arrays, the second of which contains the\n * second elements of the given arrays, and so on.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n */\nvar zip = baseRest(unzip);\n\nexport default zip;\n", "/**\n * This base implementation of `_.zipObject` which assigns values using `assignFunc`.\n *\n * @private\n * @param {Array} props The property identifiers.\n * @param {Array} values The property values.\n * @param {Function} assignFunc The function to assign values.\n * @returns {Object} Returns the new object.\n */\nfunction baseZipObject(props, values, assignFunc) {\n  var index = -1,\n      length = props.length,\n      valsLength = values.length,\n      result = {};\n\n  while (++index < length) {\n    var value = index < valsLength ? values[index] : undefined;\n    assignFunc(result, props[index], value);\n  }\n  return result;\n}\n\nexport default baseZipObject;\n", "import assignValue from './_assignValue.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.fromPairs` except that it accepts two arrays,\n * one of property identifiers and one of corresponding values.\n *\n * @static\n * @memberOf _\n * @since 0.4.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObject(['a', 'b'], [1, 2]);\n * // => { 'a': 1, 'b': 2 }\n */\nfunction zipObject(props, values) {\n  return baseZipObject(props || [], values || [], assignValue);\n}\n\nexport default zipObject;\n", "import baseSet from './_baseSet.js';\nimport baseZipObject from './_baseZipObject.js';\n\n/**\n * This method is like `_.zipObject` except that it supports property paths.\n *\n * @static\n * @memberOf _\n * @since 4.1.0\n * @category Array\n * @param {Array} [props=[]] The property identifiers.\n * @param {Array} [values=[]] The property values.\n * @returns {Object} Returns the new object.\n * @example\n *\n * _.zipObjectDeep(['a.b[0].c', 'a.b[1].d'], [1, 2]);\n * // => { 'a': { 'b': [{ 'c': 1 }, { 'd': 2 }] } }\n */\nfunction zipObjectDeep(props, values) {\n  return baseZipObject(props || [], values || [], baseSet);\n}\n\nexport default zipObjectDeep;\n", "import baseRest from './_baseRest.js';\nimport unzipWith from './unzipWith.js';\n\n/**\n * This method is like `_.zip` except that it accepts `iteratee` to specify\n * how grouped values should be combined. The iteratee is invoked with the\n * elements of each group: (...group).\n *\n * @static\n * @memberOf _\n * @since 3.8.0\n * @category Array\n * @param {...Array} [arrays] The arrays to process.\n * @param {Function} [iteratee=_.identity] The function to combine\n *  grouped values.\n * @returns {Array} Returns the new array of grouped elements.\n * @example\n *\n * _.zipWith([1, 2], [10, 20], [100, 200], function(a, b, c) {\n *   return a + b + c;\n * });\n * // => [111, 222]\n */\nvar zipWith = baseRest(function(arrays) {\n  var length = arrays.length,\n      iteratee = length > 1 ? arrays[length - 1] : undefined;\n\n  iteratee = typeof iteratee == 'function' ? (arrays.pop(), iteratee) : undefined;\n  return unzipWith(arrays, iteratee);\n});\n\nexport default zipWith;\n", "import chunk from './chunk.js';\nimport compact from './compact.js';\nimport concat from './concat.js';\nimport difference from './difference.js';\nimport differenceBy from './differenceBy.js';\nimport differenceWith from './differenceWith.js';\nimport drop from './drop.js';\nimport dropRight from './dropRight.js';\nimport dropRightWhile from './dropRightWhile.js';\nimport dropWhile from './dropWhile.js';\nimport fill from './fill.js';\nimport findIndex from './findIndex.js';\nimport findLastIndex from './findLastIndex.js';\nimport first from './first.js';\nimport flatten from './flatten.js';\nimport flattenDeep from './flattenDeep.js';\nimport flattenDepth from './flattenDepth.js';\nimport fromPairs from './fromPairs.js';\nimport head from './head.js';\nimport indexOf from './indexOf.js';\nimport initial from './initial.js';\nimport intersection from './intersection.js';\nimport intersectionBy from './intersectionBy.js';\nimport intersectionWith from './intersectionWith.js';\nimport join from './join.js';\nimport last from './last.js';\nimport lastIndexOf from './lastIndexOf.js';\nimport nth from './nth.js';\nimport pull from './pull.js';\nimport pullAll from './pullAll.js';\nimport pullAllBy from './pullAllBy.js';\nimport pullAllWith from './pullAllWith.js';\nimport pullAt from './pullAt.js';\nimport remove from './remove.js';\nimport reverse from './reverse.js';\nimport slice from './slice.js';\nimport sortedIndex from './sortedIndex.js';\nimport sortedIndexBy from './sortedIndexBy.js';\nimport sortedIndexOf from './sortedIndexOf.js';\nimport sortedLastIndex from './sortedLastIndex.js';\nimport sortedLastIndexBy from './sortedLastIndexBy.js';\nimport sortedLastIndexOf from './sortedLastIndexOf.js';\nimport sortedUniq from './sortedUniq.js';\nimport sortedUniqBy from './sortedUniqBy.js';\nimport tail from './tail.js';\nimport take from './take.js';\nimport takeRight from './takeRight.js';\nimport takeRightWhile from './takeRightWhile.js';\nimport takeWhile from './takeWhile.js';\nimport union from './union.js';\nimport unionBy from './unionBy.js';\nimport unionWith from './unionWith.js';\nimport uniq from './uniq.js';\nimport uniqBy from './uniqBy.js';\nimport uniqWith from './uniqWith.js';\nimport unzip from './unzip.js';\nimport unzipWith from './unzipWith.js';\nimport without from './without.js';\nimport xor from './xor.js';\nimport xorBy from './xorBy.js';\nimport xorWith from './xorWith.js';\nimport zip from './zip.js';\nimport zipObject from './zipObject.js';\nimport zipObjectDeep from './zipObjectDeep.js';\nimport zipWith from './zipWith.js';\n\nexport default {\n  chunk, compact, concat, difference, differenceBy,\n  differenceWith, drop, dropRight, dropRightWhile, dropWhile,\n  fill, findIndex, findLastIndex, first, flatten,\n  flattenDeep, flattenDepth, fromPairs, head, indexOf,\n  initial, intersection, intersectionBy, intersectionWith, join,\n  last, lastIndexOf, nth, pull, pullAll,\n  pullAllBy, pullAllWith, pullAt, remove, reverse,\n  slice, sortedIndex, sortedIndexBy, sortedIndexOf, sortedLastIndex,\n  sortedLastIndexBy, sortedLastIndexOf, sortedUniq, sortedUniqBy, tail,\n  take, takeRight, takeRightWhile, takeWhile, union,\n  unionBy, unionWith, uniq, uniqBy, uniqWith,\n  unzip, unzipWith, without, xor, xorBy,\n  xorWith, zip, zipObject, zipObjectDeep, zipWith\n};\n", "import countBy from './countBy.js';\nimport each from './each.js';\nimport eachRight from './eachRight.js';\nimport every from './every.js';\nimport filter from './filter.js';\nimport find from './find.js';\nimport findLast from './findLast.js';\nimport flatMap from './flatMap.js';\nimport flatMapDeep from './flatMapDeep.js';\nimport flatMapDepth from './flatMapDepth.js';\nimport forEach from './forEach.js';\nimport forEachRight from './forEachRight.js';\nimport groupBy from './groupBy.js';\nimport includes from './includes.js';\nimport invokeMap from './invokeMap.js';\nimport keyBy from './keyBy.js';\nimport map from './map.js';\nimport orderBy from './orderBy.js';\nimport partition from './partition.js';\nimport reduce from './reduce.js';\nimport reduceRight from './reduceRight.js';\nimport reject from './reject.js';\nimport sample from './sample.js';\nimport sampleSize from './sampleSize.js';\nimport shuffle from './shuffle.js';\nimport size from './size.js';\nimport some from './some.js';\nimport sortBy from './sortBy.js';\n\nexport default {\n  countBy, each, eachRight, every, filter,\n  find, findLast, flatMap, flatMapDeep, flatMapDepth,\n  forEach, forEachRight, groupBy, includes, invokeMap,\n  keyBy, map, orderBy, partition, reduce,\n  reduceRight, reject, sample, sampleSize, shuffle,\n  size, some, sortBy\n};\n", "import now from './now.js';\n\nexport default {\n  now\n};\n", "import after from './after.js';\nimport ary from './ary.js';\nimport before from './before.js';\nimport bind from './bind.js';\nimport bindKey from './bindKey.js';\nimport curry from './curry.js';\nimport curryRight from './curryRight.js';\nimport debounce from './debounce.js';\nimport defer from './defer.js';\nimport delay from './delay.js';\nimport flip from './flip.js';\nimport memoize from './memoize.js';\nimport negate from './negate.js';\nimport once from './once.js';\nimport overArgs from './overArgs.js';\nimport partial from './partial.js';\nimport partialRight from './partialRight.js';\nimport rearg from './rearg.js';\nimport rest from './rest.js';\nimport spread from './spread.js';\nimport throttle from './throttle.js';\nimport unary from './unary.js';\nimport wrap from './wrap.js';\n\nexport default {\n  after, ary, before, bind, bindKey,\n  curry, curryRight, debounce, defer, delay,\n  flip, memoize, negate, once, overArgs,\n  partial, partialRight, rearg, rest, spread,\n  throttle, unary, wrap\n};\n", "import castArray from './castArray.js';\nimport clone from './clone.js';\nimport cloneDeep from './cloneDeep.js';\nimport cloneDeepWith from './cloneDeepWith.js';\nimport cloneWith from './cloneWith.js';\nimport conformsTo from './conformsTo.js';\nimport eq from './eq.js';\nimport gt from './gt.js';\nimport gte from './gte.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isArrayBuffer from './isArrayBuffer.js';\nimport isArrayLike from './isArrayLike.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\nimport isBoolean from './isBoolean.js';\nimport isBuffer from './isBuffer.js';\nimport isDate from './isDate.js';\nimport isElement from './isElement.js';\nimport isEmpty from './isEmpty.js';\nimport isEqual from './isEqual.js';\nimport isEqualWith from './isEqualWith.js';\nimport isError from './isError.js';\nimport isFinite from './isFinite.js';\nimport isFunction from './isFunction.js';\nimport isInteger from './isInteger.js';\nimport isLength from './isLength.js';\nimport isMap from './isMap.js';\nimport isMatch from './isMatch.js';\nimport isMatchWith from './isMatchWith.js';\nimport isNaN from './isNaN.js';\nimport isNative from './isNative.js';\nimport isNil from './isNil.js';\nimport isNull from './isNull.js';\nimport isNumber from './isNumber.js';\nimport isObject from './isObject.js';\nimport isObjectLike from './isObjectLike.js';\nimport isPlainObject from './isPlainObject.js';\nimport isRegExp from './isRegExp.js';\nimport isSafeInteger from './isSafeInteger.js';\nimport isSet from './isSet.js';\nimport isString from './isString.js';\nimport isSymbol from './isSymbol.js';\nimport isTypedArray from './isTypedArray.js';\nimport isUndefined from './isUndefined.js';\nimport isWeakMap from './isWeakMap.js';\nimport isWeakSet from './isWeakSet.js';\nimport lt from './lt.js';\nimport lte from './lte.js';\nimport toArray from './toArray.js';\nimport toFinite from './toFinite.js';\nimport toInteger from './toInteger.js';\nimport toLength from './toLength.js';\nimport toNumber from './toNumber.js';\nimport toPlainObject from './toPlainObject.js';\nimport toSafeInteger from './toSafeInteger.js';\nimport toString from './toString.js';\n\nexport default {\n  castArray, clone, cloneDeep, cloneDeepWith, cloneWith,\n  conformsTo, eq, gt, gte, isArguments,\n  isArray, isArrayBuffer, isArrayLike, isArrayLikeObject, isBoolean,\n  isBuffer, isDate, isElement, isEmpty, isEqual,\n  isEqualWith, isError, isFinite, isFunction, isInteger,\n  isLength, isMap, isMatch, isMatchWith, isNaN,\n  isNative, isNil, isNull, isNumber, isObject,\n  isObjectLike, isPlainObject, isRegExp, isSafeInteger, isSet,\n  isString, isSymbol, isTypedArray, isUndefined, isWeakMap,\n  isWeakSet, lt, lte, toArray, toFinite,\n  toInteger, toLength, toNumber, toPlainObject, toSafeInteger,\n  toString\n};\n", "import add from './add.js';\nimport ceil from './ceil.js';\nimport divide from './divide.js';\nimport floor from './floor.js';\nimport max from './max.js';\nimport maxBy from './maxBy.js';\nimport mean from './mean.js';\nimport meanBy from './meanBy.js';\nimport min from './min.js';\nimport minBy from './minBy.js';\nimport multiply from './multiply.js';\nimport round from './round.js';\nimport subtract from './subtract.js';\nimport sum from './sum.js';\nimport sumBy from './sumBy.js';\n\nexport default {\n  add, ceil, divide, floor, max,\n  maxBy, mean, meanBy, min, minBy,\n  multiply, round, subtract, sum, sumBy\n};\n", "import clamp from './clamp.js';\nimport inRange from './inRange.js';\nimport random from './random.js';\n\nexport default {\n  clamp, inRange, random\n};\n", "import assign from './assign.js';\nimport assignIn from './assignIn.js';\nimport assignInWith from './assignInWith.js';\nimport assignWith from './assignWith.js';\nimport at from './at.js';\nimport create from './create.js';\nimport defaults from './defaults.js';\nimport defaultsDeep from './defaultsDeep.js';\nimport entries from './entries.js';\nimport entriesIn from './entriesIn.js';\nimport extend from './extend.js';\nimport extendWith from './extendWith.js';\nimport findKey from './findKey.js';\nimport findLastKey from './findLastKey.js';\nimport forIn from './forIn.js';\nimport forInRight from './forInRight.js';\nimport forOwn from './forOwn.js';\nimport forOwnRight from './forOwnRight.js';\nimport functions from './functions.js';\nimport functionsIn from './functionsIn.js';\nimport get from './get.js';\nimport has from './has.js';\nimport hasIn from './hasIn.js';\nimport invert from './invert.js';\nimport invertBy from './invertBy.js';\nimport invoke from './invoke.js';\nimport keys from './keys.js';\nimport keysIn from './keysIn.js';\nimport mapKeys from './mapKeys.js';\nimport mapValues from './mapValues.js';\nimport merge from './merge.js';\nimport mergeWith from './mergeWith.js';\nimport omit from './omit.js';\nimport omitBy from './omitBy.js';\nimport pick from './pick.js';\nimport pickBy from './pickBy.js';\nimport result from './result.js';\nimport set from './set.js';\nimport setWith from './setWith.js';\nimport toPairs from './toPairs.js';\nimport toPairsIn from './toPairsIn.js';\nimport transform from './transform.js';\nimport unset from './unset.js';\nimport update from './update.js';\nimport updateWith from './updateWith.js';\nimport values from './values.js';\nimport valuesIn from './valuesIn.js';\n\nexport default {\n  assign, assignIn, assignInWith, assignWith, at,\n  create, defaults, defaultsDeep, entries, entriesIn,\n  extend, extendWith, findKey, findLastKey, forIn,\n  forInRight, forOwn, forOwnRight, functions, functionsIn,\n  get, has, hasIn, invert, invertBy,\n  invoke, keys, keysIn, mapKeys, mapValues,\n  merge, mergeWith, omit, omitBy, pick,\n  pickBy, result, set, setWith, toPairs,\n  toPairsIn, transform, unset, update, updateWith,\n  values, valuesIn\n};\n", "import at from './wrapperAt.js';\nimport chain from './chain.js';\nimport commit from './commit.js';\nimport lodash from './wrapperLodash.js';\nimport next from './next.js';\nimport plant from './plant.js';\nimport reverse from './wrapperReverse.js';\nimport tap from './tap.js';\nimport thru from './thru.js';\nimport toIterator from './toIterator.js';\nimport toJSON from './toJSON.js';\nimport value from './wrapperValue.js';\nimport valueOf from './valueOf.js';\nimport wrapperChain from './wrapperChain.js';\n\nexport default {\n  at, chain, commit, lodash, next,\n  plant, reverse, tap, thru, toIterator,\n  toJSON, value, valueOf, wrapperChain\n};\n", "import camelCase from './camelCase.js';\nimport capitalize from './capitalize.js';\nimport deburr from './deburr.js';\nimport endsWith from './endsWith.js';\nimport escape from './escape.js';\nimport escapeRegExp from './escapeRegExp.js';\nimport kebabCase from './kebabCase.js';\nimport lowerCase from './lowerCase.js';\nimport lowerFirst from './lowerFirst.js';\nimport pad from './pad.js';\nimport padEnd from './padEnd.js';\nimport padStart from './padStart.js';\nimport parseInt from './parseInt.js';\nimport repeat from './repeat.js';\nimport replace from './replace.js';\nimport snakeCase from './snakeCase.js';\nimport split from './split.js';\nimport startCase from './startCase.js';\nimport startsWith from './startsWith.js';\nimport template from './template.js';\nimport templateSettings from './templateSettings.js';\nimport toLower from './toLower.js';\nimport toUpper from './toUpper.js';\nimport trim from './trim.js';\nimport trimEnd from './trimEnd.js';\nimport trimStart from './trimStart.js';\nimport truncate from './truncate.js';\nimport unescape from './unescape.js';\nimport upperCase from './upperCase.js';\nimport upperFirst from './upperFirst.js';\nimport words from './words.js';\n\nexport default {\n  camelCase, capitalize, deburr, endsWith, escape,\n  escapeRegExp, kebabCase, lowerCase, lowerFirst, pad,\n  padEnd, padStart, parseInt, repeat, replace,\n  snakeCase, split, startCase, startsWith, template,\n  templateSettings, toLower, toUpper, trim, trimEnd,\n  trimStart, truncate, unescape, upperCase, upperFirst,\n  words\n};\n", "import attempt from './attempt.js';\nimport bindAll from './bindAll.js';\nimport cond from './cond.js';\nimport conforms from './conforms.js';\nimport constant from './constant.js';\nimport defaultTo from './defaultTo.js';\nimport flow from './flow.js';\nimport flowRight from './flowRight.js';\nimport identity from './identity.js';\nimport iteratee from './iteratee.js';\nimport matches from './matches.js';\nimport matchesProperty from './matchesProperty.js';\nimport method from './method.js';\nimport methodOf from './methodOf.js';\nimport mixin from './mixin.js';\nimport noop from './noop.js';\nimport nthArg from './nthArg.js';\nimport over from './over.js';\nimport overEvery from './overEvery.js';\nimport overSome from './overSome.js';\nimport property from './property.js';\nimport propertyOf from './propertyOf.js';\nimport range from './range.js';\nimport rangeRight from './rangeRight.js';\nimport stubArray from './stubArray.js';\nimport stubFalse from './stubFalse.js';\nimport stubObject from './stubObject.js';\nimport stubString from './stubString.js';\nimport stubTrue from './stubTrue.js';\nimport times from './times.js';\nimport toPath from './toPath.js';\nimport uniqueId from './uniqueId.js';\n\nexport default {\n  attempt, bindAll, cond, conforms, constant,\n  defaultTo, flow, flowRight, identity, iteratee,\n  matches, matchesProperty, method, methodOf, mixin,\n  noop, nthArg, over, overEvery, overSome,\n  property, propertyOf, range, rangeRight, stubArray,\n  stubFalse, stubObject, stubString, stubTrue, times,\n  toPath, uniqueId\n};\n", "import LazyWrapper from './_LazyWrapper.js';\nimport copyArray from './_copyArray.js';\n\n/**\n * Creates a clone of the lazy wrapper object.\n *\n * @private\n * @name clone\n * @memberOf LazyWrapper\n * @returns {Object} Returns the cloned `LazyWrapper` object.\n */\nfunction lazyClone() {\n  var result = new LazyWrapper(this.__wrapped__);\n  result.__actions__ = copyArray(this.__actions__);\n  result.__dir__ = this.__dir__;\n  result.__filtered__ = this.__filtered__;\n  result.__iteratees__ = copyArray(this.__iteratees__);\n  result.__takeCount__ = this.__takeCount__;\n  result.__views__ = copyArray(this.__views__);\n  return result;\n}\n\nexport default lazyClone;\n", "import LazyWrapper from './_LazyWrapper.js';\n\n/**\n * Reverses the direction of lazy iteration.\n *\n * @private\n * @name reverse\n * @memberOf LazyWrapper\n * @returns {Object} Returns the new reversed `LazyWrapper` object.\n */\nfunction lazyReverse() {\n  if (this.__filtered__) {\n    var result = new LazyWrapper(this);\n    result.__dir__ = -1;\n    result.__filtered__ = true;\n  } else {\n    result = this.clone();\n    result.__dir__ *= -1;\n  }\n  return result;\n}\n\nexport default lazyReverse;\n", "/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * Gets the view, applying any `transforms` to the `start` and `end` positions.\n *\n * @private\n * @param {number} start The start of the view.\n * @param {number} end The end of the view.\n * @param {Array} transforms The transformations to apply to the view.\n * @returns {Object} Returns an object containing the `start` and `end`\n *  positions of the view.\n */\nfunction getView(start, end, transforms) {\n  var index = -1,\n      length = transforms.length;\n\n  while (++index < length) {\n    var data = transforms[index],\n        size = data.size;\n\n    switch (data.type) {\n      case 'drop':      start += size; break;\n      case 'dropRight': end -= size; break;\n      case 'take':      end = nativeMin(end, start + size); break;\n      case 'takeRight': start = nativeMax(start, end - size); break;\n    }\n  }\n  return { 'start': start, 'end': end };\n}\n\nexport default getView;\n", "import baseWrapperValue from './_baseWrapperValue.js';\nimport getView from './_getView.js';\nimport isArray from './isArray.js';\n\n/** Used to indicate the type of lazy iteratees. */\nvar LAZY_FILTER_FLAG = 1,\n    LAZY_MAP_FLAG = 2;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * Extracts the unwrapped value from its lazy wrapper.\n *\n * @private\n * @name value\n * @memberOf LazyWrapper\n * @returns {*} Returns the unwrapped value.\n */\nfunction lazyValue() {\n  var array = this.__wrapped__.value(),\n      dir = this.__dir__,\n      isArr = isArray(array),\n      isRight = dir < 0,\n      arrLength = isArr ? array.length : 0,\n      view = getView(0, arrLength, this.__views__),\n      start = view.start,\n      end = view.end,\n      length = end - start,\n      index = isRight ? end : (start - 1),\n      iteratees = this.__iteratees__,\n      iterLength = iteratees.length,\n      resIndex = 0,\n      takeCount = nativeMin(length, this.__takeCount__);\n\n  if (!isArr || (!isRight && arrLength == length && takeCount == length)) {\n    return baseWrapperValue(array, this.__actions__);\n  }\n  var result = [];\n\n  outer:\n  while (length-- && resIndex < takeCount) {\n    index += dir;\n\n    var iterIndex = -1,\n        value = array[index];\n\n    while (++iterIndex < iterLength) {\n      var data = iteratees[iterIndex],\n          iteratee = data.iteratee,\n          type = data.type,\n          computed = iteratee(value);\n\n      if (type == LAZY_MAP_FLAG) {\n        value = computed;\n      } else if (!computed) {\n        if (type == LAZY_FILTER_FLAG) {\n          continue outer;\n        } else {\n          break outer;\n        }\n      }\n    }\n    result[resIndex++] = value;\n  }\n  return result;\n}\n\nexport default lazyValue;\n", "/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"es\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nimport array from './array.js';\nimport collection from './collection.js';\nimport date from './date.js';\nimport func from './function.js';\nimport lang from './lang.js';\nimport math from './math.js';\nimport number from './number.js';\nimport object from './object.js';\nimport seq from './seq.js';\nimport string from './string.js';\nimport util from './util.js';\nimport LazyWrapper from './_LazyWrapper.js';\nimport LodashWrapper from './_LodashWrapper.js';\nimport Symbol from './_Symbol.js';\nimport arrayEach from './_arrayEach.js';\nimport arrayPush from './_arrayPush.js';\nimport baseForOwn from './_baseForOwn.js';\nimport baseFunctions from './_baseFunctions.js';\nimport baseInvoke from './_baseInvoke.js';\nimport baseIteratee from './_baseIteratee.js';\nimport baseRest from './_baseRest.js';\nimport createHybrid from './_createHybrid.js';\nimport identity from './identity.js';\nimport isArray from './isArray.js';\nimport isObject from './isObject.js';\nimport keys from './keys.js';\nimport last from './last.js';\nimport lazyClone from './_lazyClone.js';\nimport lazyReverse from './_lazyReverse.js';\nimport lazyValue from './_lazyValue.js';\nimport _mixin from './mixin.js';\nimport negate from './negate.js';\nimport realNames from './_realNames.js';\nimport thru from './thru.js';\nimport toInteger from './toInteger.js';\nimport lodash from './wrapperLodash.js';\n\n/** Used as the semantic version number. */\nvar VERSION = '4.17.21';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_KEY_FLAG = 2;\n\n/** Used to indicate the type of lazy iteratees. */\nvar LAZY_FILTER_FLAG = 1,\n    LAZY_WHILE_FLAG = 3;\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295;\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype,\n    objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar symIterator = Symbol ? Symbol.iterator : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n// wrap `_.mixin` so it works when provided only one argument\nvar mixin = (function(func) {\n  return function(object, source, options) {\n    if (options == null) {\n      var isObj = isObject(source),\n          props = isObj && keys(source),\n          methodNames = props && props.length && baseFunctions(source, props);\n\n      if (!(methodNames ? methodNames.length : isObj)) {\n        options = source;\n        source = object;\n        object = this;\n      }\n    }\n    return func(object, source, options);\n  };\n}(_mixin));\n\n// Add methods that return wrapped values in chain sequences.\nlodash.after = func.after;\nlodash.ary = func.ary;\nlodash.assign = object.assign;\nlodash.assignIn = object.assignIn;\nlodash.assignInWith = object.assignInWith;\nlodash.assignWith = object.assignWith;\nlodash.at = object.at;\nlodash.before = func.before;\nlodash.bind = func.bind;\nlodash.bindAll = util.bindAll;\nlodash.bindKey = func.bindKey;\nlodash.castArray = lang.castArray;\nlodash.chain = seq.chain;\nlodash.chunk = array.chunk;\nlodash.compact = array.compact;\nlodash.concat = array.concat;\nlodash.cond = util.cond;\nlodash.conforms = util.conforms;\nlodash.constant = util.constant;\nlodash.countBy = collection.countBy;\nlodash.create = object.create;\nlodash.curry = func.curry;\nlodash.curryRight = func.curryRight;\nlodash.debounce = func.debounce;\nlodash.defaults = object.defaults;\nlodash.defaultsDeep = object.defaultsDeep;\nlodash.defer = func.defer;\nlodash.delay = func.delay;\nlodash.difference = array.difference;\nlodash.differenceBy = array.differenceBy;\nlodash.differenceWith = array.differenceWith;\nlodash.drop = array.drop;\nlodash.dropRight = array.dropRight;\nlodash.dropRightWhile = array.dropRightWhile;\nlodash.dropWhile = array.dropWhile;\nlodash.fill = array.fill;\nlodash.filter = collection.filter;\nlodash.flatMap = collection.flatMap;\nlodash.flatMapDeep = collection.flatMapDeep;\nlodash.flatMapDepth = collection.flatMapDepth;\nlodash.flatten = array.flatten;\nlodash.flattenDeep = array.flattenDeep;\nlodash.flattenDepth = array.flattenDepth;\nlodash.flip = func.flip;\nlodash.flow = util.flow;\nlodash.flowRight = util.flowRight;\nlodash.fromPairs = array.fromPairs;\nlodash.functions = object.functions;\nlodash.functionsIn = object.functionsIn;\nlodash.groupBy = collection.groupBy;\nlodash.initial = array.initial;\nlodash.intersection = array.intersection;\nlodash.intersectionBy = array.intersectionBy;\nlodash.intersectionWith = array.intersectionWith;\nlodash.invert = object.invert;\nlodash.invertBy = object.invertBy;\nlodash.invokeMap = collection.invokeMap;\nlodash.iteratee = util.iteratee;\nlodash.keyBy = collection.keyBy;\nlodash.keys = keys;\nlodash.keysIn = object.keysIn;\nlodash.map = collection.map;\nlodash.mapKeys = object.mapKeys;\nlodash.mapValues = object.mapValues;\nlodash.matches = util.matches;\nlodash.matchesProperty = util.matchesProperty;\nlodash.memoize = func.memoize;\nlodash.merge = object.merge;\nlodash.mergeWith = object.mergeWith;\nlodash.method = util.method;\nlodash.methodOf = util.methodOf;\nlodash.mixin = mixin;\nlodash.negate = negate;\nlodash.nthArg = util.nthArg;\nlodash.omit = object.omit;\nlodash.omitBy = object.omitBy;\nlodash.once = func.once;\nlodash.orderBy = collection.orderBy;\nlodash.over = util.over;\nlodash.overArgs = func.overArgs;\nlodash.overEvery = util.overEvery;\nlodash.overSome = util.overSome;\nlodash.partial = func.partial;\nlodash.partialRight = func.partialRight;\nlodash.partition = collection.partition;\nlodash.pick = object.pick;\nlodash.pickBy = object.pickBy;\nlodash.property = util.property;\nlodash.propertyOf = util.propertyOf;\nlodash.pull = array.pull;\nlodash.pullAll = array.pullAll;\nlodash.pullAllBy = array.pullAllBy;\nlodash.pullAllWith = array.pullAllWith;\nlodash.pullAt = array.pullAt;\nlodash.range = util.range;\nlodash.rangeRight = util.rangeRight;\nlodash.rearg = func.rearg;\nlodash.reject = collection.reject;\nlodash.remove = array.remove;\nlodash.rest = func.rest;\nlodash.reverse = array.reverse;\nlodash.sampleSize = collection.sampleSize;\nlodash.set = object.set;\nlodash.setWith = object.setWith;\nlodash.shuffle = collection.shuffle;\nlodash.slice = array.slice;\nlodash.sortBy = collection.sortBy;\nlodash.sortedUniq = array.sortedUniq;\nlodash.sortedUniqBy = array.sortedUniqBy;\nlodash.split = string.split;\nlodash.spread = func.spread;\nlodash.tail = array.tail;\nlodash.take = array.take;\nlodash.takeRight = array.takeRight;\nlodash.takeRightWhile = array.takeRightWhile;\nlodash.takeWhile = array.takeWhile;\nlodash.tap = seq.tap;\nlodash.throttle = func.throttle;\nlodash.thru = thru;\nlodash.toArray = lang.toArray;\nlodash.toPairs = object.toPairs;\nlodash.toPairsIn = object.toPairsIn;\nlodash.toPath = util.toPath;\nlodash.toPlainObject = lang.toPlainObject;\nlodash.transform = object.transform;\nlodash.unary = func.unary;\nlodash.union = array.union;\nlodash.unionBy = array.unionBy;\nlodash.unionWith = array.unionWith;\nlodash.uniq = array.uniq;\nlodash.uniqBy = array.uniqBy;\nlodash.uniqWith = array.uniqWith;\nlodash.unset = object.unset;\nlodash.unzip = array.unzip;\nlodash.unzipWith = array.unzipWith;\nlodash.update = object.update;\nlodash.updateWith = object.updateWith;\nlodash.values = object.values;\nlodash.valuesIn = object.valuesIn;\nlodash.without = array.without;\nlodash.words = string.words;\nlodash.wrap = func.wrap;\nlodash.xor = array.xor;\nlodash.xorBy = array.xorBy;\nlodash.xorWith = array.xorWith;\nlodash.zip = array.zip;\nlodash.zipObject = array.zipObject;\nlodash.zipObjectDeep = array.zipObjectDeep;\nlodash.zipWith = array.zipWith;\n\n// Add aliases.\nlodash.entries = object.toPairs;\nlodash.entriesIn = object.toPairsIn;\nlodash.extend = object.assignIn;\nlodash.extendWith = object.assignInWith;\n\n// Add methods to `lodash.prototype`.\nmixin(lodash, lodash);\n\n// Add methods that return unwrapped values in chain sequences.\nlodash.add = math.add;\nlodash.attempt = util.attempt;\nlodash.camelCase = string.camelCase;\nlodash.capitalize = string.capitalize;\nlodash.ceil = math.ceil;\nlodash.clamp = number.clamp;\nlodash.clone = lang.clone;\nlodash.cloneDeep = lang.cloneDeep;\nlodash.cloneDeepWith = lang.cloneDeepWith;\nlodash.cloneWith = lang.cloneWith;\nlodash.conformsTo = lang.conformsTo;\nlodash.deburr = string.deburr;\nlodash.defaultTo = util.defaultTo;\nlodash.divide = math.divide;\nlodash.endsWith = string.endsWith;\nlodash.eq = lang.eq;\nlodash.escape = string.escape;\nlodash.escapeRegExp = string.escapeRegExp;\nlodash.every = collection.every;\nlodash.find = collection.find;\nlodash.findIndex = array.findIndex;\nlodash.findKey = object.findKey;\nlodash.findLast = collection.findLast;\nlodash.findLastIndex = array.findLastIndex;\nlodash.findLastKey = object.findLastKey;\nlodash.floor = math.floor;\nlodash.forEach = collection.forEach;\nlodash.forEachRight = collection.forEachRight;\nlodash.forIn = object.forIn;\nlodash.forInRight = object.forInRight;\nlodash.forOwn = object.forOwn;\nlodash.forOwnRight = object.forOwnRight;\nlodash.get = object.get;\nlodash.gt = lang.gt;\nlodash.gte = lang.gte;\nlodash.has = object.has;\nlodash.hasIn = object.hasIn;\nlodash.head = array.head;\nlodash.identity = identity;\nlodash.includes = collection.includes;\nlodash.indexOf = array.indexOf;\nlodash.inRange = number.inRange;\nlodash.invoke = object.invoke;\nlodash.isArguments = lang.isArguments;\nlodash.isArray = isArray;\nlodash.isArrayBuffer = lang.isArrayBuffer;\nlodash.isArrayLike = lang.isArrayLike;\nlodash.isArrayLikeObject = lang.isArrayLikeObject;\nlodash.isBoolean = lang.isBoolean;\nlodash.isBuffer = lang.isBuffer;\nlodash.isDate = lang.isDate;\nlodash.isElement = lang.isElement;\nlodash.isEmpty = lang.isEmpty;\nlodash.isEqual = lang.isEqual;\nlodash.isEqualWith = lang.isEqualWith;\nlodash.isError = lang.isError;\nlodash.isFinite = lang.isFinite;\nlodash.isFunction = lang.isFunction;\nlodash.isInteger = lang.isInteger;\nlodash.isLength = lang.isLength;\nlodash.isMap = lang.isMap;\nlodash.isMatch = lang.isMatch;\nlodash.isMatchWith = lang.isMatchWith;\nlodash.isNaN = lang.isNaN;\nlodash.isNative = lang.isNative;\nlodash.isNil = lang.isNil;\nlodash.isNull = lang.isNull;\nlodash.isNumber = lang.isNumber;\nlodash.isObject = isObject;\nlodash.isObjectLike = lang.isObjectLike;\nlodash.isPlainObject = lang.isPlainObject;\nlodash.isRegExp = lang.isRegExp;\nlodash.isSafeInteger = lang.isSafeInteger;\nlodash.isSet = lang.isSet;\nlodash.isString = lang.isString;\nlodash.isSymbol = lang.isSymbol;\nlodash.isTypedArray = lang.isTypedArray;\nlodash.isUndefined = lang.isUndefined;\nlodash.isWeakMap = lang.isWeakMap;\nlodash.isWeakSet = lang.isWeakSet;\nlodash.join = array.join;\nlodash.kebabCase = string.kebabCase;\nlodash.last = last;\nlodash.lastIndexOf = array.lastIndexOf;\nlodash.lowerCase = string.lowerCase;\nlodash.lowerFirst = string.lowerFirst;\nlodash.lt = lang.lt;\nlodash.lte = lang.lte;\nlodash.max = math.max;\nlodash.maxBy = math.maxBy;\nlodash.mean = math.mean;\nlodash.meanBy = math.meanBy;\nlodash.min = math.min;\nlodash.minBy = math.minBy;\nlodash.stubArray = util.stubArray;\nlodash.stubFalse = util.stubFalse;\nlodash.stubObject = util.stubObject;\nlodash.stubString = util.stubString;\nlodash.stubTrue = util.stubTrue;\nlodash.multiply = math.multiply;\nlodash.nth = array.nth;\nlodash.noop = util.noop;\nlodash.now = date.now;\nlodash.pad = string.pad;\nlodash.padEnd = string.padEnd;\nlodash.padStart = string.padStart;\nlodash.parseInt = string.parseInt;\nlodash.random = number.random;\nlodash.reduce = collection.reduce;\nlodash.reduceRight = collection.reduceRight;\nlodash.repeat = string.repeat;\nlodash.replace = string.replace;\nlodash.result = object.result;\nlodash.round = math.round;\nlodash.sample = collection.sample;\nlodash.size = collection.size;\nlodash.snakeCase = string.snakeCase;\nlodash.some = collection.some;\nlodash.sortedIndex = array.sortedIndex;\nlodash.sortedIndexBy = array.sortedIndexBy;\nlodash.sortedIndexOf = array.sortedIndexOf;\nlodash.sortedLastIndex = array.sortedLastIndex;\nlodash.sortedLastIndexBy = array.sortedLastIndexBy;\nlodash.sortedLastIndexOf = array.sortedLastIndexOf;\nlodash.startCase = string.startCase;\nlodash.startsWith = string.startsWith;\nlodash.subtract = math.subtract;\nlodash.sum = math.sum;\nlodash.sumBy = math.sumBy;\nlodash.template = string.template;\nlodash.times = util.times;\nlodash.toFinite = lang.toFinite;\nlodash.toInteger = toInteger;\nlodash.toLength = lang.toLength;\nlodash.toLower = string.toLower;\nlodash.toNumber = lang.toNumber;\nlodash.toSafeInteger = lang.toSafeInteger;\nlodash.toString = lang.toString;\nlodash.toUpper = string.toUpper;\nlodash.trim = string.trim;\nlodash.trimEnd = string.trimEnd;\nlodash.trimStart = string.trimStart;\nlodash.truncate = string.truncate;\nlodash.unescape = string.unescape;\nlodash.uniqueId = util.uniqueId;\nlodash.upperCase = string.upperCase;\nlodash.upperFirst = string.upperFirst;\n\n// Add aliases.\nlodash.each = collection.forEach;\nlodash.eachRight = collection.forEachRight;\nlodash.first = array.head;\n\nmixin(lodash, (function() {\n  var source = {};\n  baseForOwn(lodash, function(func, methodName) {\n    if (!hasOwnProperty.call(lodash.prototype, methodName)) {\n      source[methodName] = func;\n    }\n  });\n  return source;\n}()), { 'chain': false });\n\n/**\n * The semantic version number.\n *\n * @static\n * @memberOf _\n * @type {string}\n */\nlodash.VERSION = VERSION;\n(lodash.templateSettings = string.templateSettings).imports._ = lodash;\n\n// Assign default placeholders.\narrayEach(['bind', 'bindKey', 'curry', 'curryRight', 'partial', 'partialRight'], function(methodName) {\n  lodash[methodName].placeholder = lodash;\n});\n\n// Add `LazyWrapper` methods for `_.drop` and `_.take` variants.\narrayEach(['drop', 'take'], function(methodName, index) {\n  LazyWrapper.prototype[methodName] = function(n) {\n    n = n === undefined ? 1 : nativeMax(toInteger(n), 0);\n\n    var result = (this.__filtered__ && !index)\n      ? new LazyWrapper(this)\n      : this.clone();\n\n    if (result.__filtered__) {\n      result.__takeCount__ = nativeMin(n, result.__takeCount__);\n    } else {\n      result.__views__.push({\n        'size': nativeMin(n, MAX_ARRAY_LENGTH),\n        'type': methodName + (result.__dir__ < 0 ? 'Right' : '')\n      });\n    }\n    return result;\n  };\n\n  LazyWrapper.prototype[methodName + 'Right'] = function(n) {\n    return this.reverse()[methodName](n).reverse();\n  };\n});\n\n// Add `LazyWrapper` methods that accept an `iteratee` value.\narrayEach(['filter', 'map', 'takeWhile'], function(methodName, index) {\n  var type = index + 1,\n      isFilter = type == LAZY_FILTER_FLAG || type == LAZY_WHILE_FLAG;\n\n  LazyWrapper.prototype[methodName] = function(iteratee) {\n    var result = this.clone();\n    result.__iteratees__.push({\n      'iteratee': baseIteratee(iteratee, 3),\n      'type': type\n    });\n    result.__filtered__ = result.__filtered__ || isFilter;\n    return result;\n  };\n});\n\n// Add `LazyWrapper` methods for `_.head` and `_.last`.\narrayEach(['head', 'last'], function(methodName, index) {\n  var takeName = 'take' + (index ? 'Right' : '');\n\n  LazyWrapper.prototype[methodName] = function() {\n    return this[takeName](1).value()[0];\n  };\n});\n\n// Add `LazyWrapper` methods for `_.initial` and `_.tail`.\narrayEach(['initial', 'tail'], function(methodName, index) {\n  var dropName = 'drop' + (index ? '' : 'Right');\n\n  LazyWrapper.prototype[methodName] = function() {\n    return this.__filtered__ ? new LazyWrapper(this) : this[dropName](1);\n  };\n});\n\nLazyWrapper.prototype.compact = function() {\n  return this.filter(identity);\n};\n\nLazyWrapper.prototype.find = function(predicate) {\n  return this.filter(predicate).head();\n};\n\nLazyWrapper.prototype.findLast = function(predicate) {\n  return this.reverse().find(predicate);\n};\n\nLazyWrapper.prototype.invokeMap = baseRest(function(path, args) {\n  if (typeof path == 'function') {\n    return new LazyWrapper(this);\n  }\n  return this.map(function(value) {\n    return baseInvoke(value, path, args);\n  });\n});\n\nLazyWrapper.prototype.reject = function(predicate) {\n  return this.filter(negate(baseIteratee(predicate)));\n};\n\nLazyWrapper.prototype.slice = function(start, end) {\n  start = toInteger(start);\n\n  var result = this;\n  if (result.__filtered__ && (start > 0 || end < 0)) {\n    return new LazyWrapper(result);\n  }\n  if (start < 0) {\n    result = result.takeRight(-start);\n  } else if (start) {\n    result = result.drop(start);\n  }\n  if (end !== undefined) {\n    end = toInteger(end);\n    result = end < 0 ? result.dropRight(-end) : result.take(end - start);\n  }\n  return result;\n};\n\nLazyWrapper.prototype.takeRightWhile = function(predicate) {\n  return this.reverse().takeWhile(predicate).reverse();\n};\n\nLazyWrapper.prototype.toArray = function() {\n  return this.take(MAX_ARRAY_LENGTH);\n};\n\n// Add `LazyWrapper` methods to `lodash.prototype`.\nbaseForOwn(LazyWrapper.prototype, function(func, methodName) {\n  var checkIteratee = /^(?:filter|find|map|reject)|While$/.test(methodName),\n      isTaker = /^(?:head|last)$/.test(methodName),\n      lodashFunc = lodash[isTaker ? ('take' + (methodName == 'last' ? 'Right' : '')) : methodName],\n      retUnwrapped = isTaker || /^find/.test(methodName);\n\n  if (!lodashFunc) {\n    return;\n  }\n  lodash.prototype[methodName] = function() {\n    var value = this.__wrapped__,\n        args = isTaker ? [1] : arguments,\n        isLazy = value instanceof LazyWrapper,\n        iteratee = args[0],\n        useLazy = isLazy || isArray(value);\n\n    var interceptor = function(value) {\n      var result = lodashFunc.apply(lodash, arrayPush([value], args));\n      return (isTaker && chainAll) ? result[0] : result;\n    };\n\n    if (useLazy && checkIteratee && typeof iteratee == 'function' && iteratee.length != 1) {\n      // Avoid lazy use if the iteratee has a \"length\" value other than `1`.\n      isLazy = useLazy = false;\n    }\n    var chainAll = this.__chain__,\n        isHybrid = !!this.__actions__.length,\n        isUnwrapped = retUnwrapped && !chainAll,\n        onlyLazy = isLazy && !isHybrid;\n\n    if (!retUnwrapped && useLazy) {\n      value = onlyLazy ? value : new LazyWrapper(this);\n      var result = func.apply(value, args);\n      result.__actions__.push({ 'func': thru, 'args': [interceptor], 'thisArg': undefined });\n      return new LodashWrapper(result, chainAll);\n    }\n    if (isUnwrapped && onlyLazy) {\n      return func.apply(this, args);\n    }\n    result = this.thru(interceptor);\n    return isUnwrapped ? (isTaker ? result.value()[0] : result.value()) : result;\n  };\n});\n\n// Add `Array` methods to `lodash.prototype`.\narrayEach(['pop', 'push', 'shift', 'sort', 'splice', 'unshift'], function(methodName) {\n  var func = arrayProto[methodName],\n      chainName = /^(?:push|sort|unshift)$/.test(methodName) ? 'tap' : 'thru',\n      retUnwrapped = /^(?:pop|shift)$/.test(methodName);\n\n  lodash.prototype[methodName] = function() {\n    var args = arguments;\n    if (retUnwrapped && !this.__chain__) {\n      var value = this.value();\n      return func.apply(isArray(value) ? value : [], args);\n    }\n    return this[chainName](function(value) {\n      return func.apply(isArray(value) ? value : [], args);\n    });\n  };\n});\n\n// Map minified method names to their real names.\nbaseForOwn(LazyWrapper.prototype, function(func, methodName) {\n  var lodashFunc = lodash[methodName];\n  if (lodashFunc) {\n    var key = lodashFunc.name + '';\n    if (!hasOwnProperty.call(realNames, key)) {\n      realNames[key] = [];\n    }\n    realNames[key].push({ 'name': methodName, 'func': lodashFunc });\n  }\n});\n\nrealNames[createHybrid(undefined, WRAP_BIND_KEY_FLAG).name] = [{\n  'name': 'wrapper',\n  'func': undefined\n}];\n\n// Add methods to `LazyWrapper`.\nLazyWrapper.prototype.clone = lazyClone;\nLazyWrapper.prototype.reverse = lazyReverse;\nLazyWrapper.prototype.value = lazyValue;\n\n// Add chain sequence methods to the `lodash` wrapper.\nlodash.prototype.at = seq.at;\nlodash.prototype.chain = seq.wrapperChain;\nlodash.prototype.commit = seq.commit;\nlodash.prototype.next = seq.next;\nlodash.prototype.plant = seq.plant;\nlodash.prototype.reverse = seq.reverse;\nlodash.prototype.toJSON = lodash.prototype.valueOf = lodash.prototype.value = seq.value;\n\n// Add lazy aliases.\nlodash.prototype.first = lodash.prototype.head;\n\nif (symIterator) {\n  lodash.prototype[symIterator] = seq.toIterator;\n}\n\nexport default lodash;\n", "/**\n * @license\n * Lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"es\" -o ./`\n * Copyright OpenJS Foundation and other contributors <https://openjsf.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\nexport { default as add } from './add.js';\nexport { default as after } from './after.js';\nexport { default as ary } from './ary.js';\nexport { default as assign } from './assign.js';\nexport { default as assignIn } from './assignIn.js';\nexport { default as assignInWith } from './assignInWith.js';\nexport { default as assignWith } from './assignWith.js';\nexport { default as at } from './at.js';\nexport { default as attempt } from './attempt.js';\nexport { default as before } from './before.js';\nexport { default as bind } from './bind.js';\nexport { default as bindAll } from './bindAll.js';\nexport { default as bindKey } from './bindKey.js';\nexport { default as camelCase } from './camelCase.js';\nexport { default as capitalize } from './capitalize.js';\nexport { default as castArray } from './castArray.js';\nexport { default as ceil } from './ceil.js';\nexport { default as chain } from './chain.js';\nexport { default as chunk } from './chunk.js';\nexport { default as clamp } from './clamp.js';\nexport { default as clone } from './clone.js';\nexport { default as cloneDeep } from './cloneDeep.js';\nexport { default as cloneDeepWith } from './cloneDeepWith.js';\nexport { default as cloneWith } from './cloneWith.js';\nexport { default as commit } from './commit.js';\nexport { default as compact } from './compact.js';\nexport { default as concat } from './concat.js';\nexport { default as cond } from './cond.js';\nexport { default as conforms } from './conforms.js';\nexport { default as conformsTo } from './conformsTo.js';\nexport { default as constant } from './constant.js';\nexport { default as countBy } from './countBy.js';\nexport { default as create } from './create.js';\nexport { default as curry } from './curry.js';\nexport { default as curryRight } from './curryRight.js';\nexport { default as debounce } from './debounce.js';\nexport { default as deburr } from './deburr.js';\nexport { default as defaultTo } from './defaultTo.js';\nexport { default as defaults } from './defaults.js';\nexport { default as defaultsDeep } from './defaultsDeep.js';\nexport { default as defer } from './defer.js';\nexport { default as delay } from './delay.js';\nexport { default as difference } from './difference.js';\nexport { default as differenceBy } from './differenceBy.js';\nexport { default as differenceWith } from './differenceWith.js';\nexport { default as divide } from './divide.js';\nexport { default as drop } from './drop.js';\nexport { default as dropRight } from './dropRight.js';\nexport { default as dropRightWhile } from './dropRightWhile.js';\nexport { default as dropWhile } from './dropWhile.js';\nexport { default as each } from './each.js';\nexport { default as eachRight } from './eachRight.js';\nexport { default as endsWith } from './endsWith.js';\nexport { default as entries } from './entries.js';\nexport { default as entriesIn } from './entriesIn.js';\nexport { default as eq } from './eq.js';\nexport { default as escape } from './escape.js';\nexport { default as escapeRegExp } from './escapeRegExp.js';\nexport { default as every } from './every.js';\nexport { default as extend } from './extend.js';\nexport { default as extendWith } from './extendWith.js';\nexport { default as fill } from './fill.js';\nexport { default as filter } from './filter.js';\nexport { default as find } from './find.js';\nexport { default as findIndex } from './findIndex.js';\nexport { default as findKey } from './findKey.js';\nexport { default as findLast } from './findLast.js';\nexport { default as findLastIndex } from './findLastIndex.js';\nexport { default as findLastKey } from './findLastKey.js';\nexport { default as first } from './first.js';\nexport { default as flatMap } from './flatMap.js';\nexport { default as flatMapDeep } from './flatMapDeep.js';\nexport { default as flatMapDepth } from './flatMapDepth.js';\nexport { default as flatten } from './flatten.js';\nexport { default as flattenDeep } from './flattenDeep.js';\nexport { default as flattenDepth } from './flattenDepth.js';\nexport { default as flip } from './flip.js';\nexport { default as floor } from './floor.js';\nexport { default as flow } from './flow.js';\nexport { default as flowRight } from './flowRight.js';\nexport { default as forEach } from './forEach.js';\nexport { default as forEachRight } from './forEachRight.js';\nexport { default as forIn } from './forIn.js';\nexport { default as forInRight } from './forInRight.js';\nexport { default as forOwn } from './forOwn.js';\nexport { default as forOwnRight } from './forOwnRight.js';\nexport { default as fromPairs } from './fromPairs.js';\nexport { default as functions } from './functions.js';\nexport { default as functionsIn } from './functionsIn.js';\nexport { default as get } from './get.js';\nexport { default as groupBy } from './groupBy.js';\nexport { default as gt } from './gt.js';\nexport { default as gte } from './gte.js';\nexport { default as has } from './has.js';\nexport { default as hasIn } from './hasIn.js';\nexport { default as head } from './head.js';\nexport { default as identity } from './identity.js';\nexport { default as inRange } from './inRange.js';\nexport { default as includes } from './includes.js';\nexport { default as indexOf } from './indexOf.js';\nexport { default as initial } from './initial.js';\nexport { default as intersection } from './intersection.js';\nexport { default as intersectionBy } from './intersectionBy.js';\nexport { default as intersectionWith } from './intersectionWith.js';\nexport { default as invert } from './invert.js';\nexport { default as invertBy } from './invertBy.js';\nexport { default as invoke } from './invoke.js';\nexport { default as invokeMap } from './invokeMap.js';\nexport { default as isArguments } from './isArguments.js';\nexport { default as isArray } from './isArray.js';\nexport { default as isArrayBuffer } from './isArrayBuffer.js';\nexport { default as isArrayLike } from './isArrayLike.js';\nexport { default as isArrayLikeObject } from './isArrayLikeObject.js';\nexport { default as isBoolean } from './isBoolean.js';\nexport { default as isBuffer } from './isBuffer.js';\nexport { default as isDate } from './isDate.js';\nexport { default as isElement } from './isElement.js';\nexport { default as isEmpty } from './isEmpty.js';\nexport { default as isEqual } from './isEqual.js';\nexport { default as isEqualWith } from './isEqualWith.js';\nexport { default as isError } from './isError.js';\nexport { default as isFinite } from './isFinite.js';\nexport { default as isFunction } from './isFunction.js';\nexport { default as isInteger } from './isInteger.js';\nexport { default as isLength } from './isLength.js';\nexport { default as isMap } from './isMap.js';\nexport { default as isMatch } from './isMatch.js';\nexport { default as isMatchWith } from './isMatchWith.js';\nexport { default as isNaN } from './isNaN.js';\nexport { default as isNative } from './isNative.js';\nexport { default as isNil } from './isNil.js';\nexport { default as isNull } from './isNull.js';\nexport { default as isNumber } from './isNumber.js';\nexport { default as isObject } from './isObject.js';\nexport { default as isObjectLike } from './isObjectLike.js';\nexport { default as isPlainObject } from './isPlainObject.js';\nexport { default as isRegExp } from './isRegExp.js';\nexport { default as isSafeInteger } from './isSafeInteger.js';\nexport { default as isSet } from './isSet.js';\nexport { default as isString } from './isString.js';\nexport { default as isSymbol } from './isSymbol.js';\nexport { default as isTypedArray } from './isTypedArray.js';\nexport { default as isUndefined } from './isUndefined.js';\nexport { default as isWeakMap } from './isWeakMap.js';\nexport { default as isWeakSet } from './isWeakSet.js';\nexport { default as iteratee } from './iteratee.js';\nexport { default as join } from './join.js';\nexport { default as kebabCase } from './kebabCase.js';\nexport { default as keyBy } from './keyBy.js';\nexport { default as keys } from './keys.js';\nexport { default as keysIn } from './keysIn.js';\nexport { default as last } from './last.js';\nexport { default as lastIndexOf } from './lastIndexOf.js';\nexport { default as lodash } from './wrapperLodash.js';\nexport { default as lowerCase } from './lowerCase.js';\nexport { default as lowerFirst } from './lowerFirst.js';\nexport { default as lt } from './lt.js';\nexport { default as lte } from './lte.js';\nexport { default as map } from './map.js';\nexport { default as mapKeys } from './mapKeys.js';\nexport { default as mapValues } from './mapValues.js';\nexport { default as matches } from './matches.js';\nexport { default as matchesProperty } from './matchesProperty.js';\nexport { default as max } from './max.js';\nexport { default as maxBy } from './maxBy.js';\nexport { default as mean } from './mean.js';\nexport { default as meanBy } from './meanBy.js';\nexport { default as memoize } from './memoize.js';\nexport { default as merge } from './merge.js';\nexport { default as mergeWith } from './mergeWith.js';\nexport { default as method } from './method.js';\nexport { default as methodOf } from './methodOf.js';\nexport { default as min } from './min.js';\nexport { default as minBy } from './minBy.js';\nexport { default as mixin } from './mixin.js';\nexport { default as multiply } from './multiply.js';\nexport { default as negate } from './negate.js';\nexport { default as next } from './next.js';\nexport { default as noop } from './noop.js';\nexport { default as now } from './now.js';\nexport { default as nth } from './nth.js';\nexport { default as nthArg } from './nthArg.js';\nexport { default as omit } from './omit.js';\nexport { default as omitBy } from './omitBy.js';\nexport { default as once } from './once.js';\nexport { default as orderBy } from './orderBy.js';\nexport { default as over } from './over.js';\nexport { default as overArgs } from './overArgs.js';\nexport { default as overEvery } from './overEvery.js';\nexport { default as overSome } from './overSome.js';\nexport { default as pad } from './pad.js';\nexport { default as padEnd } from './padEnd.js';\nexport { default as padStart } from './padStart.js';\nexport { default as parseInt } from './parseInt.js';\nexport { default as partial } from './partial.js';\nexport { default as partialRight } from './partialRight.js';\nexport { default as partition } from './partition.js';\nexport { default as pick } from './pick.js';\nexport { default as pickBy } from './pickBy.js';\nexport { default as plant } from './plant.js';\nexport { default as property } from './property.js';\nexport { default as propertyOf } from './propertyOf.js';\nexport { default as pull } from './pull.js';\nexport { default as pullAll } from './pullAll.js';\nexport { default as pullAllBy } from './pullAllBy.js';\nexport { default as pullAllWith } from './pullAllWith.js';\nexport { default as pullAt } from './pullAt.js';\nexport { default as random } from './random.js';\nexport { default as range } from './range.js';\nexport { default as rangeRight } from './rangeRight.js';\nexport { default as rearg } from './rearg.js';\nexport { default as reduce } from './reduce.js';\nexport { default as reduceRight } from './reduceRight.js';\nexport { default as reject } from './reject.js';\nexport { default as remove } from './remove.js';\nexport { default as repeat } from './repeat.js';\nexport { default as replace } from './replace.js';\nexport { default as rest } from './rest.js';\nexport { default as result } from './result.js';\nexport { default as reverse } from './reverse.js';\nexport { default as round } from './round.js';\nexport { default as sample } from './sample.js';\nexport { default as sampleSize } from './sampleSize.js';\nexport { default as set } from './set.js';\nexport { default as setWith } from './setWith.js';\nexport { default as shuffle } from './shuffle.js';\nexport { default as size } from './size.js';\nexport { default as slice } from './slice.js';\nexport { default as snakeCase } from './snakeCase.js';\nexport { default as some } from './some.js';\nexport { default as sortBy } from './sortBy.js';\nexport { default as sortedIndex } from './sortedIndex.js';\nexport { default as sortedIndexBy } from './sortedIndexBy.js';\nexport { default as sortedIndexOf } from './sortedIndexOf.js';\nexport { default as sortedLastIndex } from './sortedLastIndex.js';\nexport { default as sortedLastIndexBy } from './sortedLastIndexBy.js';\nexport { default as sortedLastIndexOf } from './sortedLastIndexOf.js';\nexport { default as sortedUniq } from './sortedUniq.js';\nexport { default as sortedUniqBy } from './sortedUniqBy.js';\nexport { default as split } from './split.js';\nexport { default as spread } from './spread.js';\nexport { default as startCase } from './startCase.js';\nexport { default as startsWith } from './startsWith.js';\nexport { default as stubArray } from './stubArray.js';\nexport { default as stubFalse } from './stubFalse.js';\nexport { default as stubObject } from './stubObject.js';\nexport { default as stubString } from './stubString.js';\nexport { default as stubTrue } from './stubTrue.js';\nexport { default as subtract } from './subtract.js';\nexport { default as sum } from './sum.js';\nexport { default as sumBy } from './sumBy.js';\nexport { default as tail } from './tail.js';\nexport { default as take } from './take.js';\nexport { default as takeRight } from './takeRight.js';\nexport { default as takeRightWhile } from './takeRightWhile.js';\nexport { default as takeWhile } from './takeWhile.js';\nexport { default as tap } from './tap.js';\nexport { default as template } from './template.js';\nexport { default as templateSettings } from './templateSettings.js';\nexport { default as throttle } from './throttle.js';\nexport { default as thru } from './thru.js';\nexport { default as times } from './times.js';\nexport { default as toArray } from './toArray.js';\nexport { default as toFinite } from './toFinite.js';\nexport { default as toInteger } from './toInteger.js';\nexport { default as toIterator } from './toIterator.js';\nexport { default as toJSON } from './toJSON.js';\nexport { default as toLength } from './toLength.js';\nexport { default as toLower } from './toLower.js';\nexport { default as toNumber } from './toNumber.js';\nexport { default as toPairs } from './toPairs.js';\nexport { default as toPairsIn } from './toPairsIn.js';\nexport { default as toPath } from './toPath.js';\nexport { default as toPlainObject } from './toPlainObject.js';\nexport { default as toSafeInteger } from './toSafeInteger.js';\nexport { default as toString } from './toString.js';\nexport { default as toUpper } from './toUpper.js';\nexport { default as transform } from './transform.js';\nexport { default as trim } from './trim.js';\nexport { default as trimEnd } from './trimEnd.js';\nexport { default as trimStart } from './trimStart.js';\nexport { default as truncate } from './truncate.js';\nexport { default as unary } from './unary.js';\nexport { default as unescape } from './unescape.js';\nexport { default as union } from './union.js';\nexport { default as unionBy } from './unionBy.js';\nexport { default as unionWith } from './unionWith.js';\nexport { default as uniq } from './uniq.js';\nexport { default as uniqBy } from './uniqBy.js';\nexport { default as uniqWith } from './uniqWith.js';\nexport { default as uniqueId } from './uniqueId.js';\nexport { default as unset } from './unset.js';\nexport { default as unzip } from './unzip.js';\nexport { default as unzipWith } from './unzipWith.js';\nexport { default as update } from './update.js';\nexport { default as updateWith } from './updateWith.js';\nexport { default as upperCase } from './upperCase.js';\nexport { default as upperFirst } from './upperFirst.js';\nexport { default as value } from './value.js';\nexport { default as valueOf } from './valueOf.js';\nexport { default as values } from './values.js';\nexport { default as valuesIn } from './valuesIn.js';\nexport { default as without } from './without.js';\nexport { default as words } from './words.js';\nexport { default as wrap } from './wrap.js';\nexport { default as wrapperAt } from './wrapperAt.js';\nexport { default as wrapperChain } from './wrapperChain.js';\nexport { default as wrapperCommit } from './commit.js';\nexport { default as wrapperLodash } from './wrapperLodash.js';\nexport { default as wrapperNext } from './next.js';\nexport { default as wrapperPlant } from './plant.js';\nexport { default as wrapperReverse } from './wrapperReverse.js';\nexport { default as wrapperToIterator } from './toIterator.js';\nexport { default as wrapperValue } from './wrapperValue.js';\nexport { default as xor } from './xor.js';\nexport { default as xorBy } from './xorBy.js';\nexport { default as xorWith } from './xorWith.js';\nexport { default as zip } from './zip.js';\nexport { default as zipObject } from './zipObject.js';\nexport { default as zipObjectDeep } from './zipObjectDeep.js';\nexport { default as zipWith } from './zipWith.js';\nexport { default } from './lodash.default.js';\n", "var toString = Object.prototype.toString;\n\nfunction isFunc(obj) {\n  return toString.call(obj) === \"[object Function]\";\n}\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction icPart(str) {\n  return str.split(\"\").map(function (c) {\n    return \"(?:\" + c.toUpperCase() + \"|\" + c.toLowerCase() + \")\";\n  }).join(\"\");\n}\n\nfunction remove(arr, elem) {\n  for (var i = arr.length - 1; i >= 0; i--) {\n    if (arr[i] === elem) {\n      Array.prototype.splice.call(arr, i, 1);\n    }\n  }\n}\n\nfunction hasProp(obj, key) {\n  return Object.prototype.hasOwnProperty.call(obj, key);\n}\n\nvar instances = {};\n\nvar Inflector = function () {\n  createClass(Inflector, null, [{\n    key: \"getInstance\",\n    value: function getInstance(locale) {\n      instances[locale] = instances[locale] || new Inflector();\n      return instances[locale];\n    }\n  }]);\n\n  function Inflector() {\n    classCallCheck(this, Inflector);\n\n    this.plurals = [];\n    this.singulars = [];\n    this.uncountables = [];\n    this.humans = [];\n    this.acronyms = {};\n    this.acronymRegex = /(?=a)b/;\n  }\n\n  createClass(Inflector, [{\n    key: \"acronym\",\n    value: function acronym(word) {\n      this.acronyms[word.toLowerCase()] = word;\n\n      var values = [];\n\n      for (var key in this.acronyms) {\n        if (hasProp(this.acronyms, key)) {\n          values.push(this.acronyms[key]);\n        }\n      }\n\n      this.acronymRegex = new RegExp(values.join(\"|\"));\n    }\n  }, {\n    key: \"plural\",\n    value: function plural(rule, replacement) {\n      if (typeof rule === \"string\") {\n        remove(this.uncountables, rule);\n      }\n\n      remove(this.uncountables, replacement);\n      this.plurals.unshift([rule, replacement]);\n    }\n  }, {\n    key: \"singular\",\n    value: function singular(rule, replacement) {\n      if (typeof rule === \"string\") {\n        remove(this.uncountables, rule);\n      }\n\n      remove(this.uncountables, replacement);\n      this.singulars.unshift([rule, replacement]);\n    }\n  }, {\n    key: \"irregular\",\n    value: function irregular(singular, plural) {\n      remove(this.uncountables, singular);\n      remove(this.uncountables, plural);\n\n      var s0 = singular[0];\n      var sRest = singular.substr(1);\n\n      var p0 = plural[0];\n      var pRest = plural.substr(1);\n\n      if (s0.toUpperCase() === p0.toUpperCase()) {\n        this.plural(new RegExp(\"(\" + s0 + \")\" + sRest + \"$\", \"i\"), \"$1\" + pRest);\n        this.plural(new RegExp(\"(\" + p0 + \")\" + pRest + \"$\", \"i\"), \"$1\" + pRest);\n\n        this.singular(new RegExp(\"(\" + s0 + \")\" + sRest + \"$\", \"i\"), \"$1\" + sRest);\n        this.singular(new RegExp(\"(\" + p0 + \")\" + pRest + \"$\", \"i\"), \"$1\" + sRest);\n      } else {\n        var sRestIC = icPart(sRest);\n        var pRestIC = icPart(pRest);\n\n        this.plural(new RegExp(s0.toUpperCase() + sRestIC + \"$\"), p0.toUpperCase() + pRest);\n        this.plural(new RegExp(s0.toLowerCase() + sRestIC + \"$\"), p0.toLowerCase() + pRest);\n        this.plural(new RegExp(p0.toUpperCase() + pRestIC + \"$\"), p0.toUpperCase() + pRest);\n        this.plural(new RegExp(p0.toLowerCase() + pRestIC + \"$\"), p0.toLowerCase() + pRest);\n\n        this.singular(new RegExp(s0.toUpperCase() + sRestIC + \"$\"), s0.toUpperCase() + sRest);\n        this.singular(new RegExp(s0.toLowerCase() + sRestIC + \"$\"), s0.toLowerCase() + sRest);\n        this.singular(new RegExp(p0.toUpperCase() + pRestIC + \"$\"), s0.toUpperCase() + sRest);\n        this.singular(new RegExp(p0.toLowerCase() + pRestIC + \"$\"), s0.toLowerCase() + sRest);\n      }\n    }\n  }, {\n    key: \"uncountable\",\n    value: function uncountable() {\n      for (var _len = arguments.length, words = Array(_len), _key = 0; _key < _len; _key++) {\n        words[_key] = arguments[_key];\n      }\n\n      this.uncountables = this.uncountables.concat(words);\n    }\n  }, {\n    key: \"human\",\n    value: function human(rule, replacement) {\n      this.humans.unshift([rule, replacement]);\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      var scope = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"all\";\n\n      if (scope === \"all\") {\n        this.plurals = [];\n        this.singulars = [];\n        this.uncountables = [];\n        this.humans = [];\n      } else {\n        this[scope] = [];\n      }\n    }\n  }]);\n  return Inflector;\n}();\n\nfunction en(inflector) {\n  inflector.plural(/$/, \"s\");\n  inflector.plural(/s$/i, \"s\");\n  inflector.plural(/^(ax|test)is$/i, \"$1es\");\n  inflector.plural(/(octop|vir)us$/i, \"$1i\");\n  inflector.plural(/(octop|vir)i$/i, \"$1i\");\n  inflector.plural(/(alias|status)$/i, \"$1es\");\n  inflector.plural(/(bu)s$/i, \"$1ses\");\n  inflector.plural(/(buffal|tomat)o$/i, \"$1oes\");\n  inflector.plural(/([ti])um$/i, \"$1a\");\n  inflector.plural(/([ti])a$/i, \"$1a\");\n  inflector.plural(/sis$/i, \"ses\");\n  inflector.plural(/(?:([^f])fe|([lr])f)$/i, \"$1$2ves\");\n  inflector.plural(/(hive)$/i, \"$1s\");\n  inflector.plural(/([^aeiouy]|qu)y$/i, \"$1ies\");\n  inflector.plural(/(x|ch|ss|sh)$/i, \"$1es\");\n  inflector.plural(/(matr|vert|ind)(?:ix|ex)$/i, \"$1ices\");\n  inflector.plural(/^(m|l)ouse$/i, \"$1ice\");\n  inflector.plural(/^(m|l)ice$/i, \"$1ice\");\n  inflector.plural(/^(ox)$/i, \"$1en\");\n  inflector.plural(/^(oxen)$/i, \"$1\");\n  inflector.plural(/(quiz)$/i, \"$1zes\");\n\n  inflector.singular(/s$/i, \"\");\n  inflector.singular(/(ss)$/i, \"$1\");\n  inflector.singular(/(n)ews$/i, \"$1ews\");\n  inflector.singular(/([ti])a$/i, \"$1um\");\n  inflector.singular(/((a)naly|(b)a|(d)iagno|(p)arenthe|(p)rogno|(s)ynop|(t)he)(sis|ses)$/i, \"$1sis\");\n  inflector.singular(/(^analy)(sis|ses)$/i, \"$1sis\");\n  inflector.singular(/([^f])ves$/i, \"$1fe\");\n  inflector.singular(/(hive)s$/i, \"$1\");\n  inflector.singular(/(tive)s$/i, \"$1\");\n  inflector.singular(/([lr])ves$/i, \"$1f\");\n  inflector.singular(/([^aeiouy]|qu)ies$/i, \"$1y\");\n  inflector.singular(/(s)eries$/i, \"$1eries\");\n  inflector.singular(/(m)ovies$/i, \"$1ovie\");\n  inflector.singular(/(x|ch|ss|sh)es$/i, \"$1\");\n  inflector.singular(/^(m|l)ice$/i, \"$1ouse\");\n  inflector.singular(/(bus)(es)?$/i, \"$1\");\n  inflector.singular(/(o)es$/i, \"$1\");\n  inflector.singular(/(shoe)s$/i, \"$1\");\n  inflector.singular(/(cris|test)(is|es)$/i, \"$1is\");\n  inflector.singular(/^(a)x[ie]s$/i, \"$1xis\");\n  inflector.singular(/(octop|vir)(us|i)$/i, \"$1us\");\n  inflector.singular(/(alias|status)(es)?$/i, \"$1\");\n  inflector.singular(/^(ox)en/i, \"$1\");\n  inflector.singular(/(vert|ind)ices$/i, \"$1ex\");\n  inflector.singular(/(matr)ices$/i, \"$1ix\");\n  inflector.singular(/(quiz)zes$/i, \"$1\");\n  inflector.singular(/(database)s$/i, \"$1\");\n\n  inflector.irregular(\"person\", \"people\");\n  inflector.irregular(\"man\", \"men\");\n  inflector.irregular(\"child\", \"children\");\n  inflector.irregular(\"sex\", \"sexes\");\n  inflector.irregular(\"move\", \"moves\");\n  inflector.irregular(\"zombie\", \"zombies\");\n\n  inflector.uncountable(\"equipment\", \"information\", \"rice\", \"money\", \"species\", \"series\", \"fish\", \"sheep\", \"jeans\", \"police\");\n}\n\nvar defaults$1 = {\n  en: en\n};\n\nfunction inflections(locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || \"en\";\n\n  if (fn) {\n    fn(Inflector.getInstance(locale));\n  } else {\n    return Inflector.getInstance(locale);\n  }\n}\n\nfor (var locale in defaults$1) {\n  inflections(locale, defaults$1[locale]);\n}\n\nfunction applyInflections(word, rules) {\n  var result = \"\" + word,\n      rule,\n      regex,\n      replacement;\n\n  if (result.length === 0) {\n    return result;\n  } else {\n    var match = result.toLowerCase().match(/\\b\\w+$/);\n\n    if (match && inflections().uncountables.indexOf(match[0]) > -1) {\n      return result;\n    } else {\n      for (var i = 0, ii = rules.length; i < ii; i++) {\n        rule = rules[i];\n\n        regex = rule[0];\n        replacement = rule[1];\n\n        if (result.match(regex)) {\n          result = result.replace(regex, replacement);\n          break;\n        }\n      }\n\n      return result;\n    }\n  }\n}\n\nfunction pluralize(word) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"en\";\n\n  return applyInflections(word, inflections(locale).plurals);\n}\n\nfunction singularize(word) {\n  var locale = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"en\";\n\n  return applyInflections(word, inflections(locale).singulars);\n}\n\nfunction capitalize(str) {\n  var result = str === null || str === undefined ? \"\" : String(str);\n  return result.charAt(0).toUpperCase() + result.slice(1);\n}\n\nfunction camelize(term, uppercaseFirstLetter) {\n  if (uppercaseFirstLetter === null || uppercaseFirstLetter === undefined) {\n    uppercaseFirstLetter = true;\n  }\n\n  var result = \"\" + term;\n\n  if (uppercaseFirstLetter) {\n    result = result.replace(/^[a-z\\d]*/, function (a) {\n      return inflections().acronyms[a] || capitalize(a);\n    });\n  } else {\n    result = result.replace(new RegExp(\"^(?:\" + inflections().acronymRegex.source + \"(?=\\\\b|[A-Z_])|\\\\w)\"), function (a) {\n      return a.toLowerCase();\n    });\n  }\n\n  result = result.replace(/(?:_|(\\/))([a-z\\d]*)/gi, function (match, a, b, idx, string) {\n    a || (a = \"\");\n    return \"\" + a + (inflections().acronyms[b] || capitalize(b));\n  });\n\n  return result;\n}\n\nfunction underscore(camelCasedWord) {\n  var result = \"\" + camelCasedWord;\n\n  result = result.replace(new RegExp(\"(?:([A-Za-z\\\\d])|^)(\" + inflections().acronymRegex.source + \")(?=\\\\b|[^a-z])\", \"g\"), function (match, $1, $2) {\n    return \"\" + ($1 || \"\") + ($1 ? \"_\" : \"\") + $2.toLowerCase();\n  });\n\n  result = result.replace(/([A-Z\\d]+)([A-Z][a-z])/g, \"$1_$2\");\n  result = result.replace(/([a-z\\d])([A-Z])/g, \"$1_$2\");\n  result = result.replace(/-/g, \"_\");\n\n  return result.toLowerCase();\n}\n\nfunction humanize(lowerCaseAndUnderscoredWord, options) {\n  var result = \"\" + lowerCaseAndUnderscoredWord;\n  var humans = inflections().humans;\n  var human = void 0,\n      rule = void 0,\n      replacement = void 0;\n\n  options = options || {};\n\n  if (options.capitalize === null || options.capitalize === undefined) {\n    options.capitalize = true;\n  }\n\n  for (var i = 0, ii = humans.length; i < ii; i++) {\n    human = humans[i];\n    rule = human[0];\n    replacement = human[1];\n\n    if (rule.test && rule.test(result) || result.indexOf(rule) > -1) {\n      result = result.replace(rule, replacement);\n      break;\n    }\n  }\n\n  result = result.replace(/_id$/, \"\");\n  result = result.replace(/_/g, \" \");\n\n  result = result.replace(/([a-z\\d]*)/gi, function (match) {\n    return inflections().acronyms[match] || match.toLowerCase();\n  });\n\n  if (options.capitalize) {\n    result = result.replace(/^\\w/, function (match) {\n      return match.toUpperCase();\n    });\n  }\n\n  return result;\n}\n\nfunction titleize(word) {\n  return humanize(underscore(word)).replace(/(^|[\\s\u00BF/]+)([a-z])/g, function (match, boundary, letter, idx, string) {\n    return match.replace(letter, letter.toUpperCase());\n  });\n}\n\nfunction tableize(className) {\n  return pluralize(underscore(className));\n}\n\nfunction classify(tableName) {\n  return camelize(singularize(tableName.replace(/.*\\./g, \"\")));\n}\n\nfunction dasherize(underscoredWord) {\n  return underscoredWord.replace(/_/g, \"-\");\n}\n\nfunction foreignKey(className) {\n  var separateWithUnderscore = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n  return \"\" + underscore(className) + (separateWithUnderscore ? \"_id\" : \"id\");\n}\n\nfunction ordinal(number) {\n  var absNumber = Math.abs(Number(number));\n  var mod100 = absNumber % 100;\n\n  if (mod100 === 11 || mod100 === 12 || mod100 === 13) {\n    return \"th\";\n  } else {\n    switch (absNumber % 10) {\n      case 1:\n        return \"st\";\n      case 2:\n        return \"nd\";\n      case 3:\n        return \"rd\";\n      default:\n        return \"th\";\n    }\n  }\n}\n\nfunction ordinalize(number) {\n  return \"\" + number + ordinal(number);\n}\n\n// prettier-ignore\nvar DEFAULT_APPROXIMATIONS = {\n  '\u00C0': 'A', '\u00C1': 'A', '\u00C2': 'A', '\u00C3': 'A', '\u00C4': 'A', '\u00C5': 'A', '\u00C6': 'AE',\n  '\u00C7': 'C', '\u00C8': 'E', '\u00C9': 'E', '\u00CA': 'E', '\u00CB': 'E', '\u00CC': 'I', '\u00CD': 'I',\n  '\u00CE': 'I', '\u00CF': 'I', '\u00D0': 'D', '\u00D1': 'N', '\u00D2': 'O', '\u00D3': 'O', '\u00D4': 'O',\n  '\u00D5': 'O', '\u00D6': 'O', '\u00D7': 'x', '\u00D8': 'O', '\u00D9': 'U', '\u00DA': 'U', '\u00DB': 'U',\n  '\u00DC': 'U', '\u00DD': 'Y', '\u00DE': 'Th', '\u00DF': 'ss', '\u00E0': 'a', '\u00E1': 'a', '\u00E2': 'a',\n  '\u00E3': 'a', '\u00E4': 'a', '\u00E5': 'a', '\u00E6': 'ae', '\u00E7': 'c', '\u00E8': 'e', '\u00E9': 'e',\n  '\u00EA': 'e', '\u00EB': 'e', '\u00EC': 'i', '\u00ED': 'i', '\u00EE': 'i', '\u00EF': 'i', '\u00F0': 'd',\n  '\u00F1': 'n', '\u00F2': 'o', '\u00F3': 'o', '\u00F4': 'o', '\u00F5': 'o', '\u00F6': 'o', '\u00F8': 'o',\n  '\u00F9': 'u', '\u00FA': 'u', '\u00FB': 'u', '\u00FC': 'u', '\u00FD': 'y', '\u00FE': 'th', '\u00FF': 'y',\n  '\u0100': 'A', '\u0101': 'a', '\u0102': 'A', '\u0103': 'a', '\u0104': 'A', '\u0105': 'a', '\u0106': 'C',\n  '\u0107': 'c', '\u0108': 'C', '\u0109': 'c', '\u010A': 'C', '\u010B': 'c', '\u010C': 'C', '\u010D': 'c',\n  '\u010E': 'D', '\u010F': 'd', '\u0110': 'D', '\u0111': 'd', '\u0112': 'E', '\u0113': 'e', '\u0114': 'E',\n  '\u0115': 'e', '\u0116': 'E', '\u0117': 'e', '\u0118': 'E', '\u0119': 'e', '\u011A': 'E', '\u011B': 'e',\n  '\u011C': 'G', '\u011D': 'g', '\u011E': 'G', '\u011F': 'g', '\u0120': 'G', '\u0121': 'g', '\u0122': 'G',\n  '\u0123': 'g', '\u0124': 'H', '\u0125': 'h', '\u0126': 'H', '\u0127': 'h', '\u0128': 'I', '\u0129': 'i',\n  '\u012A': 'I', '\u012B': 'i', '\u012C': 'I', '\u012D': 'i', '\u012E': 'I', '\u012F': 'i', '\u0130': 'I',\n  '\u0131': 'i', '\u0132': 'IJ', '\u0133': 'ij', '\u0134': 'J', '\u0135': 'j', '\u0136': 'K', '\u0137': 'k',\n  '\u0138': 'k', '\u0139': 'L', '\u013A': 'l', '\u013B': 'L', '\u013C': 'l', '\u013D': 'L', '\u013E': 'l',\n  '\u013F': 'L', '\u0140': 'l', '\u0141': 'L', '\u0142': 'l', '\u0143': 'N', '\u0144': 'n', '\u0145': 'N',\n  '\u0146': 'n', '\u0147': 'N', '\u0148': 'n', '\u0149': '\\'n', '\u014A': 'NG', '\u014B': 'ng',\n  '\u014C': 'O', '\u014D': 'o', '\u014E': 'O', '\u014F': 'o', '\u0150': 'O', '\u0151': 'o', '\u0152': 'OE',\n  '\u0153': 'oe', '\u0154': 'R', '\u0155': 'r', '\u0156': 'R', '\u0157': 'r', '\u0158': 'R', '\u0159': 'r',\n  '\u015A': 'S', '\u015B': 's', '\u015C': 'S', '\u015D': 's', '\u015E': 'S', '\u015F': 's', '\u0160': 'S',\n  '\u0161': 's', '\u0162': 'T', '\u0163': 't', '\u0164': 'T', '\u0165': 't', '\u0166': 'T', '\u0167': 't',\n  '\u0168': 'U', '\u0169': 'u', '\u016A': 'U', '\u016B': 'u', '\u016C': 'U', '\u016D': 'u', '\u016E': 'U',\n  '\u016F': 'u', '\u0170': 'U', '\u0171': 'u', '\u0172': 'U', '\u0173': 'u', '\u0174': 'W', '\u0175': 'w',\n  '\u0176': 'Y', '\u0177': 'y', '\u0178': 'Y', '\u0179': 'Z', '\u017A': 'z', '\u017B': 'Z', '\u017C': 'z',\n  '\u017D': 'Z', '\u017E': 'z',\n  '\u0410': 'A', '\u0411': 'B', '\u0412': 'V', '\u0413': 'G', '\u0414': 'D', '\u0415': 'E', '\u0401': 'E',\n  '\u0416': 'ZH', '\u0417': 'Z', '\u0418': 'I', '\u0419': 'J', '\u041A': 'K', '\u041B': 'L', '\u041C': 'M',\n  '\u041D': 'N', '\u041E': 'O', '\u041F': 'P', '\u0420': 'R', '\u0421': 'S', '\u0422': 'T', '\u0423': 'U',\n  '\u0424': 'F', '\u0425': 'KH', '\u0426': 'C', '\u0427': 'CH', '\u0428': 'SH', '\u0429': 'SHCH',\n  '\u042A': '', '\u042B': 'Y', '\u042C': '', '\u042D': 'E', '\u042E': 'YU', '\u042F': 'YA',\n  '\u0430': 'a', '\u0431': 'b', '\u0432': 'v', '\u0433': 'g', '\u0434': 'd', '\u0435': 'e', '\u0451': 'e',\n  '\u0436': 'zh', '\u0437': 'z', '\u0438': 'i', '\u0439': 'j', '\u043A': 'k', '\u043B': 'l', '\u043C': 'm',\n  '\u043D': 'n', '\u043E': 'o', '\u043F': 'p', '\u0440': 'r', '\u0441': 's', '\u0442': 't', '\u0443': 'u',\n  '\u0444': 'f', '\u0445': 'kh', '\u0446': 'c', '\u0447': 'ch', '\u0448': 'sh', '\u0449': 'shch',\n  '\u044A': '', '\u044B': 'y', '\u044C': '', '\u044D': 'e', '\u044E': 'yu', '\u044F': 'ya'\n};\n\nvar DEFAULT_REPLACEMENT_CHAR = \"?\";\n\nvar instances$1 = {};\n\nvar Transliterator = function () {\n  createClass(Transliterator, null, [{\n    key: 'getInstance',\n    value: function getInstance(locale) {\n      instances$1[locale] = instances$1[locale] || new Transliterator();\n      return instances$1[locale];\n    }\n  }]);\n\n  function Transliterator() {\n    classCallCheck(this, Transliterator);\n\n    this.approximations = {};\n\n    for (var char in DEFAULT_APPROXIMATIONS) {\n      this.approximate(char, DEFAULT_APPROXIMATIONS[char]);\n    }\n  }\n\n  createClass(Transliterator, [{\n    key: 'approximate',\n    value: function approximate(char, replacement) {\n      this.approximations[char] = replacement;\n    }\n  }, {\n    key: 'transliterate',\n    value: function transliterate(string, replacement) {\n      var _this = this;\n\n      return string.replace(/[^\\u0000-\\u007f]/g, function (c) {\n        return _this.approximations[c] || replacement || DEFAULT_REPLACEMENT_CHAR;\n      });\n    }\n  }]);\n  return Transliterator;\n}();\n\nfunction transliterations(locale, fn) {\n  if (isFunc(locale)) {\n    fn = locale;\n    locale = null;\n  }\n\n  locale = locale || \"en\";\n\n  if (fn) {\n    fn(Transliterator.getInstance(locale));\n  } else {\n    return Transliterator.getInstance(locale);\n  }\n}\n\nfunction transliterate(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var locale = options.locale || \"en\";\n  var replacement = options.replacement || \"?\";\n\n  return transliterations(locale).transliterate(string, replacement);\n}\n\nfunction parameterize(string) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.separator === undefined) {\n    options.separator = \"-\";\n  }\n\n  if (options.separator === null) {\n    options.separator = \"\";\n  }\n\n  // replace accented chars with their ascii equivalents\n  var result = transliterate(string, options);\n\n  result = result.replace(/[^a-z0-9\\-_]+/ig, options.separator);\n\n  if (options.separator.length) {\n    var separatorRegex = new RegExp(options.separator);\n\n    // no more than one of the separator in a row\n    result = result.replace(new RegExp(separatorRegex.source + \"{2,}\"), options.separator);\n\n    // remove leading/trailing separator\n    result = result.replace(new RegExp(\"^\" + separatorRegex.source + \"|\" + separatorRegex.source + \"$\", \"i\"), \"\");\n  }\n\n  if (options.preserveCase) {\n    return result;\n  }\n\n  return result.toLowerCase();\n}\n\nfunction constantify(word) {\n  return underscore(word).toUpperCase().replace(/\\s+/g, \"_\");\n}\n\nexport { pluralize, singularize, camelize, underscore, humanize, titleize, tableize, classify, dasherize, foreignKey, ordinal, ordinalize, transliterate, parameterize, capitalize, inflections, transliterations, constantify };\n", "import { raw } from '@nx-js/observer-util';\n\n// HACK:\n// To get instanceof to work with Proxies (and not raise errors when\n// constructing observed objects), we need to instanceof the raw\n// objects, not the proxy objects.\n//\n// Remove this once https://github.com/nx-js/observer-util/issues/48\n// is fixed.\nexport default function (constructor) {\n  Object.defineProperty(constructor, Symbol.hasInstance, {\n    value: function (instance) {\n      if (!instance) return false;\n      let rawInstance = raw(instance);\n      let rawInstanceProto = raw(Object.getPrototypeOf(rawInstance));\n      let rawThis = raw(this);\n\n      if (rawInstanceProto === rawThis.prototype) {\n        return true;\n      } else {\n        return rawInstanceProto instanceof rawThis;\n      }\n    },\n  });\n}\n", "/**\n * Wraps a string treating it as a GraphQL Enum. These will not be\n * wrapped in quotes when injected into argument lists.\n */\nexport default class EnumValue {\n  constructor(type, value) {\n    this.type = type;\n    this.value = value;\n  }\n\n  toString() {\n    return this.value;\n  }\n}\n", "import { humanize } from 'inflected';\n\nexport default class Errors {\n  constructor(errors = {}) {\n    this.errors = {};\n\n    if (errors.attributes) {\n      errors.attributes.forEach(error => {\n        this.errors[error.name] = {\n          messages: error.messages,\n          fullMessages: error.fullMessages,\n          codes: error.codes,\n        };\n      });\n    }\n  }\n\n  /**\n   * @returns {boolean} true if there are no errors, false otherwise\n   */\n  get isEmpty() {\n    return Object.keys(this.errors).length === 0;\n  }\n\n  /**\n   * Returns a list of partial error messages ('is blank') for an attribute.\n   *\n   * @param {string} attribute name of an attribute\n   * @returns {string[]} partial error messages for that attribute\n   */\n  on(attribute) {\n    return this.errors[attribute]?.messages || [];\n  }\n\n  /**\n   * Does this attribute have errors?\n   *\n   * @param {string} attribute name of an attribute\n   * @returns {boolean} true if the attribute has errors, false otherwise\n   */\n  has(attribute) {\n    return this.on(attribute).length > 0;\n  }\n\n  /**\n   * Add a new error to an attribute.\n   *\n   * @param {string} attribute name of an attribute\n   * @param {string} message the partial error message to add\n   * @param {object} options additional error details. `fullMessage` defines a customized full error message. `code` defines a short string code that can be used instead of string parsing.\n   */\n  add(attribute, message = 'is invalid', options = {}) {\n    if (!this.errors[attribute]) {\n      this.errors[attribute] = {};\n    }\n\n    const attributeErrors = this.errors[attribute];\n\n    if (!attributeErrors.messages) attributeErrors.messages = [];\n\n    if (!attributeErrors.codes)\n      attributeErrors.codes = [...this.codesFor(attribute)];\n\n    if (!attributeErrors.fullMessages)\n      attributeErrors.fullMessages = [...this.fullMessagesFor(attribute)];\n\n    attributeErrors.messages.push(message);\n\n    if (options.code) {\n      attributeErrors.codes.push(options.code);\n    } else {\n      attributeErrors.codes.push(message);\n    }\n\n    if (options.fullMessage) {\n      attributeErrors.fullMessages.push(options.fullMessage);\n    } else {\n      attributeErrors.fullMessages.push(\n        this.generateMessage(attribute, message)\n      );\n    }\n  }\n\n  /**\n   * Clear all errors.\n   */\n  clear() {\n    this.errors = {};\n  }\n\n  /**\n   * Remove all errors from an attribute.\n   *\n   * @param {string} attribute name of an attribute\n   */\n  delete(attribute) {\n    delete this.errors[attribute];\n  }\n\n  /**\n   * Get all full error messages on all attributes.\n   *\n   * @returns {string[]}\n   */\n  get fullMessages() {\n    return Object.keys(this.errors).reduce((acc, attr) => {\n      return acc.concat(this.fullMessagesFor(attr));\n    }, []);\n  }\n\n  /**\n   * Returns short string error codes for an attribute.\n   *\n   * @param {string} attribute name of an attribute\n   * @returns {string[]} a list of short error codes for that attribute\n   */\n  codesFor(attribute) {\n    if (!this.has(attribute)) return [];\n    const attributeErrors = this.errors[attribute];\n\n    if (attributeErrors.codes) {\n      return attributeErrors.codes;\n    }\n\n    return this.on(attribute);\n  }\n\n  /**\n   * Returns full messages for an attribute\n   *\n   * @param {string} attribute name of an attribute\n   * @returns {string[]} full error messages for that attribute\n   */\n  fullMessagesFor(attribute) {\n    if (!this.has(attribute)) return [];\n    const attributeErrors = this.errors[attribute];\n\n    if (attributeErrors.fullMessages) {\n      return attributeErrors.fullMessages;\n    }\n\n    if (attribute === 'base') {\n      return this.on('base');\n    }\n\n    return this.on(attribute).map(msg => this.generateMessage(attribute, msg));\n  }\n\n  /**\n   * Generate a full error message\n   *\n   * @param {string} attribute name of an attribute\n   * @param {string} msg a short error message\n   * @returns {string} full error message based on those properties\n   */\n  generateMessage(attribute, msg) {\n    return `${humanize(attribute)} ${msg}`;\n  }\n}\n", "const errors = {\n\t0: \"Illegal state\",\n\t1: \"Immer drafts cannot have computed properties\",\n\t2: \"This object has been frozen and should not be mutated\",\n\t3(data: any) {\n\t\treturn (\n\t\t\t\"Cannot use a proxy that has been revoked. Did you pass an object from inside an immer function to an async process? \" +\n\t\t\tdata\n\t\t)\n\t},\n\t4: \"An immer producer returned a new value *and* modified its draft. Either return a new value *or* modify the draft.\",\n\t5: \"Immer forbids circular references\",\n\t6: \"The first or second argument to `produce` must be a function\",\n\t7: \"The third argument to `produce` must be a function or undefined\",\n\t8: \"First argument to `createDraft` must be a plain object, an array, or an immerable object\",\n\t9: \"First argument to `finishDraft` must be a draft returned by `createDraft`\",\n\t10: \"The given draft is already finalized\",\n\t11: \"Object.defineProperty() cannot be used on an Immer draft\",\n\t12: \"Object.setPrototypeOf() cannot be used on an Immer draft\",\n\t13: \"Immer only supports deleting array indices\",\n\t14: \"Immer only supports setting array indices and the 'length' property\",\n\t15(path: string) {\n\t\treturn \"Cannot apply patch, path doesn't resolve: \" + path\n\t},\n\t16: 'Sets cannot have \"replace\" patches.',\n\t17(op: string) {\n\t\treturn \"Unsupported patch operation: \" + op\n\t},\n\t18(plugin: string) {\n\t\treturn `The plugin for '${plugin}' has not been loaded into Immer. To enable the plugin, import and call \\`enable${plugin}()\\` when initializing your application.`\n\t},\n\t20: \"Cannot use proxies if Proxy, Proxy.revocable or Reflect are not available\",\n\t21(thing: string) {\n\t\treturn `produce can only be called on things that are draftable: plain objects, arrays, Map, Set or classes that are marked with '[immerable]: true'. Got '${thing}'`\n\t},\n\t22(thing: string) {\n\t\treturn `'current' expects a draft, got: ${thing}`\n\t},\n\t23(thing: string) {\n\t\treturn `'original' expects a draft, got: ${thing}`\n\t},\n\t24: \"Patching reserved attributes like __proto__, prototype and constructor is not allowed\"\n} as const\n\nexport function die(error: keyof typeof errors, ...args: any[]): never {\n\tif (__DEV__) {\n\t\tconst e = errors[error]\n\t\tconst msg = !e\n\t\t\t? \"unknown error nr: \" + error\n\t\t\t: typeof e === \"function\"\n\t\t\t? e.apply(null, args as any)\n\t\t\t: e\n\t\tthrow new Error(`[Immer] ${msg}`)\n\t}\n\tthrow new Error(\n\t\t`[Immer] minified error nr: ${error}${\n\t\t\targs.length ? \" \" + args.map(s => `'${s}'`).join(\",\") : \"\"\n\t\t}. Find the full error at: https://bit.ly/3cXEKWf`\n\t)\n}\n", "import {\n\tDRAFT_STATE,\n\tDRAFTABLE,\n\thasSet,\n\tObjectish,\n\tDrafted,\n\tAnyObject,\n\tAnyMap,\n\tAnySet,\n\tImmerState,\n\thasMap,\n\tArchtype,\n\tdie\n} from \"../internal\"\n\n/** Returns true if the given value is an Immer draft */\n/*#__PURE__*/\nexport function isDraft(value: any): boolean {\n\treturn !!value && !!value[DRAFT_STATE]\n}\n\n/** Returns true if the given value can be drafted by Immer */\n/*#__PURE__*/\nexport function isDraftable(value: any): boolean {\n\tif (!value) return false\n\treturn (\n\t\tisPlainObject(value) ||\n\t\tArray.isArray(value) ||\n\t\t!!value[DRAFTABLE] ||\n\t\t!!value.constructor[DRAFTABLE] ||\n\t\tisMap(value) ||\n\t\tisSet(value)\n\t)\n}\n\nconst objectCtorString = Object.prototype.constructor.toString()\n/*#__PURE__*/\nexport function isPlainObject(value: any): boolean {\n\tif (!value || typeof value !== \"object\") return false\n\tconst proto = Object.getPrototypeOf(value)\n\tif (proto === null) {\n\t\treturn true\n\t}\n\tconst Ctor =\n\t\tObject.hasOwnProperty.call(proto, \"constructor\") && proto.constructor\n\n\tif (Ctor === Object) return true\n\n\treturn (\n\t\ttypeof Ctor == \"function\" &&\n\t\tFunction.toString.call(Ctor) === objectCtorString\n\t)\n}\n\n/** Get the underlying object that is represented by the given draft */\n/*#__PURE__*/\nexport function original<T>(value: T): T | undefined\nexport function original(value: Drafted<any>): any {\n\tif (!isDraft(value)) die(23, value)\n\treturn value[DRAFT_STATE].base_\n}\n\n/*#__PURE__*/\nexport const ownKeys: (target: AnyObject) => PropertyKey[] =\n\ttypeof Reflect !== \"undefined\" && Reflect.ownKeys\n\t\t? Reflect.ownKeys\n\t\t: typeof Object.getOwnPropertySymbols !== \"undefined\"\n\t\t? obj =>\n\t\t\t\tObject.getOwnPropertyNames(obj).concat(\n\t\t\t\t\tObject.getOwnPropertySymbols(obj) as any\n\t\t\t\t)\n\t\t: /* istanbul ignore next */ Object.getOwnPropertyNames\n\nexport const getOwnPropertyDescriptors =\n\tObject.getOwnPropertyDescriptors ||\n\tfunction getOwnPropertyDescriptors(target: any) {\n\t\t// Polyfill needed for Hermes and IE, see https://github.com/facebook/hermes/issues/274\n\t\tconst res: any = {}\n\t\townKeys(target).forEach(key => {\n\t\t\tres[key] = Object.getOwnPropertyDescriptor(target, key)\n\t\t})\n\t\treturn res\n\t}\n\nexport function each<T extends Objectish>(\n\tobj: T,\n\titer: (key: string | number, value: any, source: T) => void,\n\tenumerableOnly?: boolean\n): void\nexport function each(obj: any, iter: any, enumerableOnly = false) {\n\tif (getArchtype(obj) === Archtype.Object) {\n\t\t;(enumerableOnly ? Object.keys : ownKeys)(obj).forEach(key => {\n\t\t\tif (!enumerableOnly || typeof key !== \"symbol\") iter(key, obj[key], obj)\n\t\t})\n\t} else {\n\t\tobj.forEach((entry: any, index: any) => iter(index, entry, obj))\n\t}\n}\n\n/*#__PURE__*/\nexport function getArchtype(thing: any): Archtype {\n\t/* istanbul ignore next */\n\tconst state: undefined | ImmerState = thing[DRAFT_STATE]\n\treturn state\n\t\t? state.type_ > 3\n\t\t\t? state.type_ - 4 // cause Object and Array map back from 4 and 5\n\t\t\t: (state.type_ as any) // others are the same\n\t\t: Array.isArray(thing)\n\t\t? Archtype.Array\n\t\t: isMap(thing)\n\t\t? Archtype.Map\n\t\t: isSet(thing)\n\t\t? Archtype.Set\n\t\t: Archtype.Object\n}\n\n/*#__PURE__*/\nexport function has(thing: any, prop: PropertyKey): boolean {\n\treturn getArchtype(thing) === Archtype.Map\n\t\t? thing.has(prop)\n\t\t: Object.prototype.hasOwnProperty.call(thing, prop)\n}\n\n/*#__PURE__*/\nexport function get(thing: AnyMap | AnyObject, prop: PropertyKey): any {\n\t// @ts-ignore\n\treturn getArchtype(thing) === Archtype.Map ? thing.get(prop) : thing[prop]\n}\n\n/*#__PURE__*/\nexport function set(thing: any, propOrOldValue: PropertyKey, value: any) {\n\tconst t = getArchtype(thing)\n\tif (t === Archtype.Map) thing.set(propOrOldValue, value)\n\telse if (t === Archtype.Set) {\n\t\tthing.delete(propOrOldValue)\n\t\tthing.add(value)\n\t} else thing[propOrOldValue] = value\n}\n\n/*#__PURE__*/\nexport function is(x: any, y: any): boolean {\n\t// From: https://github.com/facebook/fbjs/blob/c69904a511b900266935168223063dd8772dfc40/packages/fbjs/src/core/shallowEqual.js\n\tif (x === y) {\n\t\treturn x !== 0 || 1 / x === 1 / y\n\t} else {\n\t\treturn x !== x && y !== y\n\t}\n}\n\n/*#__PURE__*/\nexport function isMap(target: any): target is AnyMap {\n\treturn hasMap && target instanceof Map\n}\n\n/*#__PURE__*/\nexport function isSet(target: any): target is AnySet {\n\treturn hasSet && target instanceof Set\n}\n/*#__PURE__*/\nexport function latest(state: ImmerState): any {\n\treturn state.copy_ || state.base_\n}\n\n/*#__PURE__*/\nexport function shallowCopy(base: any) {\n\tif (Array.isArray(base)) return Array.prototype.slice.call(base)\n\tconst descriptors = getOwnPropertyDescriptors(base)\n\tdelete descriptors[DRAFT_STATE as any]\n\tlet keys = ownKeys(descriptors)\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tconst key: any = keys[i]\n\t\tconst desc = descriptors[key]\n\t\tif (desc.writable === false) {\n\t\t\tdesc.writable = true\n\t\t\tdesc.configurable = true\n\t\t}\n\t\t// like object.assign, we will read any _own_, get/set accessors. This helps in dealing\n\t\t// with libraries that trap values, like mobx or vue\n\t\t// unlike object.assign, non-enumerables will be copied as well\n\t\tif (desc.get || desc.set)\n\t\t\tdescriptors[key] = {\n\t\t\t\tconfigurable: true,\n\t\t\t\twritable: true, // could live with !!desc.set as well here...\n\t\t\t\tenumerable: desc.enumerable,\n\t\t\t\tvalue: base[key]\n\t\t\t}\n\t}\n\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n}\n\n/**\n * Freezes draftable objects. Returns the original object.\n * By default freezes shallowly, but if the second argument is `true` it will freeze recursively.\n *\n * @param obj\n * @param deep\n */\nexport function freeze<T>(obj: T, deep?: boolean): T\nexport function freeze<T>(obj: any, deep: boolean = false): T {\n\tif (isFrozen(obj) || isDraft(obj) || !isDraftable(obj)) return obj\n\tif (getArchtype(obj) > 1 /* Map or Set */) {\n\t\tobj.set = obj.add = obj.clear = obj.delete = dontMutateFrozenCollections as any\n\t}\n\tObject.freeze(obj)\n\tif (deep) each(obj, (key, value) => freeze(value, true), true)\n\treturn obj\n}\n\nfunction dontMutateFrozenCollections() {\n\tdie(2)\n}\n\nexport function isFrozen(obj: any): boolean {\n\tif (obj == null || typeof obj !== \"object\") return true\n\t// See #600, IE dies on non-objects in Object.isFrozen\n\treturn Object.isFrozen(obj)\n}\n", "import {\n\tImmerState,\n\tPatch,\n\tImmerScope,\n\tDrafted,\n\tAnyObject,\n\tImmerBaseState,\n\tAnyMap,\n\tAnySet,\n\tProxyType,\n\tdie\n} from \"../internal\"\n\n/** Plugin utilities */\nconst plugins: {\n\tPatches?: {\n\t\tgeneratePatches_(\n\t\t\tstate: ImmerState,\n\t\t\tbasePath: PatchPath,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tgenerateReplacementPatches_(\n\t\t\trootState: ImmerState,\n\t\t\treplacement: any,\n\t\t\tpatches: Patch[],\n\t\t\tinversePatches: Patch[]\n\t\t): void\n\t\tapplyPatches_<T>(draft: T, patches: Patch[]): T\n\t}\n\tES5?: {\n\t\twillFinalizeES5_(scope: ImmerScope, result: any, isReplaced: boolean): void\n\t\tcreateES5Proxy_<T>(\n\t\t\tbase: T,\n\t\t\tparent?: ImmerState\n\t\t): Drafted<T, ES5ObjectState | ES5ArrayState>\n\t\thasChanges_(state: ES5ArrayState | ES5ObjectState): boolean\n\t}\n\tMapSet?: {\n\t\tproxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T\n\t\tproxySet_<T extends AnySet>(target: T, parent?: ImmerState): T\n\t}\n} = {}\n\ntype Plugins = typeof plugins\n\nexport function getPlugin<K extends keyof Plugins>(\n\tpluginKey: K\n): Exclude<Plugins[K], undefined> {\n\tconst plugin = plugins[pluginKey]\n\tif (!plugin) {\n\t\tdie(18, pluginKey)\n\t}\n\t// @ts-ignore\n\treturn plugin\n}\n\nexport function loadPlugin<K extends keyof Plugins>(\n\tpluginKey: K,\n\timplementation: Plugins[K]\n): void {\n\tif (!plugins[pluginKey]) plugins[pluginKey] = implementation\n}\n\n/** ES5 Plugin */\n\ninterface ES5BaseState extends ImmerBaseState {\n\tassigned_: {[key: string]: any}\n\tparent_?: ImmerState\n\trevoked_: boolean\n}\n\nexport interface ES5ObjectState extends ES5BaseState {\n\ttype_: ProxyType.ES5Object\n\tdraft_: Drafted<AnyObject, ES5ObjectState>\n\tbase_: AnyObject\n\tcopy_: AnyObject | null\n}\n\nexport interface ES5ArrayState extends ES5BaseState {\n\ttype_: ProxyType.ES5Array\n\tdraft_: Drafted<AnyObject, ES5ArrayState>\n\tbase_: any\n\tcopy_: any\n}\n\n/** Map / Set plugin */\n\nexport interface MapState extends ImmerBaseState {\n\ttype_: ProxyType.Map\n\tcopy_: AnyMap | undefined\n\tassigned_: Map<any, boolean> | undefined\n\tbase_: AnyMap\n\trevoked_: boolean\n\tdraft_: Drafted<AnyMap, MapState>\n}\n\nexport interface SetState extends ImmerBaseState {\n\ttype_: ProxyType.Set\n\tcopy_: AnySet | undefined\n\tbase_: AnySet\n\tdrafts_: Map<any, Drafted> // maps the original value to the draft value in the new set\n\trevoked_: boolean\n\tdraft_: Drafted<AnySet, SetState>\n}\n\n/** Patches plugin */\n\nexport type PatchPath = (string | number)[]\n", "import {\n\tPatch,\n\tPatchListener,\n\tDrafted,\n\tImmer,\n\tDRAFT_STATE,\n\tImmerState,\n\tProxyType,\n\tgetPlugin\n} from \"../internal\"\nimport {die} from \"../utils/errors\"\n\n/** Each scope represents a `produce` call. */\n\nexport interface ImmerScope {\n\tpatches_?: Patch[]\n\tinversePatches_?: Patch[]\n\tcanAutoFreeze_: boolean\n\tdrafts_: any[]\n\tparent_?: ImmerScope\n\tpatchListener_?: PatchListener\n\timmer_: Immer\n\tunfinalizedDrafts_: number\n}\n\nlet currentScope: ImmerScope | undefined\n\nexport function getCurrentScope() {\n\tif (__DEV__ && !currentScope) die(0)\n\treturn currentScope!\n}\n\nfunction createScope(\n\tparent_: ImmerScope | undefined,\n\timmer_: Immer\n): ImmerScope {\n\treturn {\n\t\tdrafts_: [],\n\t\tparent_,\n\t\timmer_,\n\t\t// Whenever the modified draft contains a draft from another scope, we\n\t\t// need to prevent auto-freezing so the unowned draft can be finalized.\n\t\tcanAutoFreeze_: true,\n\t\tunfinalizedDrafts_: 0\n\t}\n}\n\nexport function usePatchesInScope(\n\tscope: ImmerScope,\n\tpatchListener?: PatchListener\n) {\n\tif (patchListener) {\n\t\tgetPlugin(\"Patches\") // assert we have the plugin\n\t\tscope.patches_ = []\n\t\tscope.inversePatches_ = []\n\t\tscope.patchListener_ = patchListener\n\t}\n}\n\nexport function revokeScope(scope: ImmerScope) {\n\tleaveScope(scope)\n\tscope.drafts_.forEach(revokeDraft)\n\t// @ts-ignore\n\tscope.drafts_ = null\n}\n\nexport function leaveScope(scope: ImmerScope) {\n\tif (scope === currentScope) {\n\t\tcurrentScope = scope.parent_\n\t}\n}\n\nexport function enterScope(immer: Immer) {\n\treturn (currentScope = createScope(currentScope, immer))\n}\n\nfunction revokeDraft(draft: Drafted) {\n\tconst state: ImmerState = draft[DRAFT_STATE]\n\tif (\n\t\tstate.type_ === ProxyType.ProxyObject ||\n\t\tstate.type_ === ProxyType.ProxyArray\n\t)\n\t\tstate.revoke_()\n\telse state.revoked_ = true\n}\n", "import {\n\tImmerScope,\n\tDRAFT_STATE,\n\tisDraftable,\n\tNOTHING,\n\tPatchPath,\n\teach,\n\thas,\n\tfreeze,\n\tImmerState,\n\tisDraft,\n\tSetState,\n\tset,\n\tProxyType,\n\tgetPlugin,\n\tdie,\n\trevokeScope,\n\tisFrozen,\n\tshallowCopy\n} from \"../internal\"\n\nexport function processResult(result: any, scope: ImmerScope) {\n\tscope.unfinalizedDrafts_ = scope.drafts_.length\n\tconst baseDraft = scope.drafts_![0]\n\tconst isReplaced = result !== undefined && result !== baseDraft\n\tif (!scope.immer_.useProxies_)\n\t\tgetPlugin(\"ES5\").willFinalizeES5_(scope, result, isReplaced)\n\tif (isReplaced) {\n\t\tif (baseDraft[DRAFT_STATE].modified_) {\n\t\t\trevokeScope(scope)\n\t\t\tdie(4)\n\t\t}\n\t\tif (isDraftable(result)) {\n\t\t\t// Finalize the result in case it contains (or is) a subset of the draft.\n\t\t\tresult = finalize(scope, result)\n\t\t\tif (!scope.parent_) maybeFreeze(scope, result)\n\t\t}\n\t\tif (scope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generateReplacementPatches_(\n\t\t\t\tbaseDraft[DRAFT_STATE],\n\t\t\t\tresult,\n\t\t\t\tscope.patches_,\n\t\t\t\tscope.inversePatches_!\n\t\t\t)\n\t\t}\n\t} else {\n\t\t// Finalize the base draft.\n\t\tresult = finalize(scope, baseDraft, [])\n\t}\n\trevokeScope(scope)\n\tif (scope.patches_) {\n\t\tscope.patchListener_!(scope.patches_, scope.inversePatches_!)\n\t}\n\treturn result !== NOTHING ? result : undefined\n}\n\nfunction finalize(rootScope: ImmerScope, value: any, path?: PatchPath) {\n\t// Don't recurse in tho recursive data structures\n\tif (isFrozen(value)) return value\n\n\tconst state: ImmerState = value[DRAFT_STATE]\n\t// A plain object, might need freezing, might contain drafts\n\tif (!state) {\n\t\teach(\n\t\t\tvalue,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, value, key, childValue, path),\n\t\t\ttrue // See #590, don't recurse into non-enumarable of non drafted objects\n\t\t)\n\t\treturn value\n\t}\n\t// Never finalize drafts owned by another scope.\n\tif (state.scope_ !== rootScope) return value\n\t// Unmodified draft, return the (frozen) original\n\tif (!state.modified_) {\n\t\tmaybeFreeze(rootScope, state.base_, true)\n\t\treturn state.base_\n\t}\n\t// Not finalized yet, let's do that now\n\tif (!state.finalized_) {\n\t\tstate.finalized_ = true\n\t\tstate.scope_.unfinalizedDrafts_--\n\t\tconst result =\n\t\t\t// For ES5, create a good copy from the draft first, with added keys and without deleted keys.\n\t\t\tstate.type_ === ProxyType.ES5Object || state.type_ === ProxyType.ES5Array\n\t\t\t\t? (state.copy_ = shallowCopy(state.draft_))\n\t\t\t\t: state.copy_\n\t\t// Finalize all children of the copy\n\t\t// For sets we clone before iterating, otherwise we can get in endless loop due to modifying during iteration, see #628\n\t\t// Although the original test case doesn't seem valid anyway, so if this in the way we can turn the next line\n\t\t// back to each(result, ....)\n\t\teach(\n\t\t\tstate.type_ === ProxyType.Set ? new Set(result) : result,\n\t\t\t(key, childValue) =>\n\t\t\t\tfinalizeProperty(rootScope, state, result, key, childValue, path)\n\t\t)\n\t\t// everything inside is frozen, we can freeze here\n\t\tmaybeFreeze(rootScope, result, false)\n\t\t// first time finalizing, let's create those patches\n\t\tif (path && rootScope.patches_) {\n\t\t\tgetPlugin(\"Patches\").generatePatches_(\n\t\t\t\tstate,\n\t\t\t\tpath,\n\t\t\t\trootScope.patches_,\n\t\t\t\trootScope.inversePatches_!\n\t\t\t)\n\t\t}\n\t}\n\treturn state.copy_\n}\n\nfunction finalizeProperty(\n\trootScope: ImmerScope,\n\tparentState: undefined | ImmerState,\n\ttargetObject: any,\n\tprop: string | number,\n\tchildValue: any,\n\trootPath?: PatchPath\n) {\n\tif (__DEV__ && childValue === targetObject) die(5)\n\tif (isDraft(childValue)) {\n\t\tconst path =\n\t\t\trootPath &&\n\t\t\tparentState &&\n\t\t\tparentState!.type_ !== ProxyType.Set && // Set objects are atomic since they have no keys.\n\t\t\t!has((parentState as Exclude<ImmerState, SetState>).assigned_!, prop) // Skip deep patches for assigned keys.\n\t\t\t\t? rootPath!.concat(prop)\n\t\t\t\t: undefined\n\t\t// Drafts owned by `scope` are finalized here.\n\t\tconst res = finalize(rootScope, childValue, path)\n\t\tset(targetObject, prop, res)\n\t\t// Drafts from another scope must prevented to be frozen\n\t\t// if we got a draft back from finalize, we're in a nested produce and shouldn't freeze\n\t\tif (isDraft(res)) {\n\t\t\trootScope.canAutoFreeze_ = false\n\t\t} else return\n\t}\n\t// Search new objects for unfinalized drafts. Frozen objects should never contain drafts.\n\tif (isDraftable(childValue) && !isFrozen(childValue)) {\n\t\tif (!rootScope.immer_.autoFreeze_ && rootScope.unfinalizedDrafts_ < 1) {\n\t\t\t// optimization: if an object is not a draft, and we don't have to\n\t\t\t// deepfreeze everything, and we are sure that no drafts are left in the remaining object\n\t\t\t// cause we saw and finalized all drafts already; we can stop visiting the rest of the tree.\n\t\t\t// This benefits especially adding large data tree's without further processing.\n\t\t\t// See add-data.js perf test\n\t\t\treturn\n\t\t}\n\t\tfinalize(rootScope, childValue)\n\t\t// immer deep freezes plain objects, so if there is no parent state, we freeze as well\n\t\tif (!parentState || !parentState.scope_.parent_)\n\t\t\tmaybeFreeze(rootScope, childValue)\n\t}\n}\n\nfunction maybeFreeze(scope: ImmerScope, value: any, deep = false) {\n\tif (scope.immer_.autoFreeze_ && scope.canAutoFreeze_) {\n\t\tfreeze(value, deep)\n\t}\n}\n", "import {\n\teach,\n\thas,\n\tis,\n\tisDraftable,\n\tshallowCopy,\n\tlatest,\n\tImmerBaseState,\n\tImmerState,\n\tDrafted,\n\tAnyObject,\n\tAnyArray,\n\tObjectish,\n\tgetCurrentScope,\n\tDRAFT_STATE,\n\tdie,\n\tcreateProxy,\n\tProxyType\n} from \"../internal\"\n\ninterface ProxyBaseState extends ImmerBaseState {\n\tassigned_: {\n\t\t[property: string]: boolean\n\t}\n\tparent_?: ImmerState\n\trevoke_(): void\n}\n\nexport interface ProxyObjectState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyObject\n\tbase_: any\n\tcopy_: any\n\tdraft_: Drafted<AnyObject, ProxyObjectState>\n}\n\nexport interface ProxyArrayState extends ProxyBaseState {\n\ttype_: ProxyType.ProxyArray\n\tbase_: AnyArray\n\tcopy_: AnyArray | null\n\tdraft_: Drafted<AnyArray, ProxyArrayState>\n}\n\ntype ProxyState = ProxyObjectState | ProxyArrayState\n\n/**\n * Returns a new draft of the `base` object.\n *\n * The second argument is the parent draft-state (used internally).\n */\nexport function createProxyProxy<T extends Objectish>(\n\tbase: T,\n\tparent?: ImmerState\n): Drafted<T, ProxyState> {\n\tconst isArray = Array.isArray(base)\n\tconst state: ProxyState = {\n\t\ttype_: isArray ? ProxyType.ProxyArray : (ProxyType.ProxyObject as any),\n\t\t// Track which produce call this is associated with.\n\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t// True for both shallow and deep changes.\n\t\tmodified_: false,\n\t\t// Used during finalization.\n\t\tfinalized_: false,\n\t\t// Track which properties have been assigned (true) or deleted (false).\n\t\tassigned_: {},\n\t\t// The parent draft state.\n\t\tparent_: parent,\n\t\t// The base state.\n\t\tbase_: base,\n\t\t// The base proxy.\n\t\tdraft_: null as any, // set below\n\t\t// The base copy with any updated values.\n\t\tcopy_: null,\n\t\t// Called by the `produce` function.\n\t\trevoke_: null as any,\n\t\tisManual_: false\n\t}\n\n\t// the traps must target something, a bit like the 'real' base.\n\t// but also, we need to be able to determine from the target what the relevant state is\n\t// (to avoid creating traps per instance to capture the state in closure,\n\t// and to avoid creating weird hidden properties as well)\n\t// So the trick is to use 'state' as the actual 'target'! (and make sure we intercept everything)\n\t// Note that in the case of an array, we put the state in an array to have better Reflect defaults ootb\n\tlet target: T = state as any\n\tlet traps: ProxyHandler<object | Array<any>> = objectTraps\n\tif (isArray) {\n\t\ttarget = [state] as any\n\t\ttraps = arrayTraps\n\t}\n\n\tconst {revoke, proxy} = Proxy.revocable(target, traps)\n\tstate.draft_ = proxy as any\n\tstate.revoke_ = revoke\n\treturn proxy as any\n}\n\n/**\n * Object drafts\n */\nexport const objectTraps: ProxyHandler<ProxyState> = {\n\tget(state, prop) {\n\t\tif (prop === DRAFT_STATE) return state\n\n\t\tconst source = latest(state)\n\t\tif (!has(source, prop)) {\n\t\t\t// non-existing or non-own property...\n\t\t\treturn readPropFromProto(state, source, prop)\n\t\t}\n\t\tconst value = source[prop]\n\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\treturn value\n\t\t}\n\t\t// Check for existing draft in modified state.\n\t\t// Assigned values are never drafted. This catches any drafts we created, too.\n\t\tif (value === peek(state.base_, prop)) {\n\t\t\tprepareCopy(state)\n\t\t\treturn (state.copy_![prop as any] = createProxy(\n\t\t\t\tstate.scope_.immer_,\n\t\t\t\tvalue,\n\t\t\t\tstate\n\t\t\t))\n\t\t}\n\t\treturn value\n\t},\n\thas(state, prop) {\n\t\treturn prop in latest(state)\n\t},\n\townKeys(state) {\n\t\treturn Reflect.ownKeys(latest(state))\n\t},\n\tset(\n\t\tstate: ProxyObjectState,\n\t\tprop: string /* strictly not, but helps TS */,\n\t\tvalue\n\t) {\n\t\tconst desc = getDescriptorFromProto(latest(state), prop)\n\t\tif (desc?.set) {\n\t\t\t// special case: if this write is captured by a setter, we have\n\t\t\t// to trigger it with the correct context\n\t\t\tdesc.set.call(state.draft_, value)\n\t\t\treturn true\n\t\t}\n\t\tif (!state.modified_) {\n\t\t\t// the last check is because we need to be able to distinguish setting a non-existing to undefined (which is a change)\n\t\t\t// from setting an existing property with value undefined to undefined (which is not a change)\n\t\t\tconst current = peek(latest(state), prop)\n\t\t\t// special case, if we assigning the original value to a draft, we can ignore the assignment\n\t\t\tconst currentState: ProxyObjectState = current?.[DRAFT_STATE]\n\t\t\tif (currentState && currentState.base_ === value) {\n\t\t\t\tstate.copy_![prop] = value\n\t\t\t\tstate.assigned_[prop] = false\n\t\t\t\treturn true\n\t\t\t}\n\t\t\tif (is(value, current) && (value !== undefined || has(state.base_, prop)))\n\t\t\t\treturn true\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t}\n\n\t\tif (\n\t\t\tstate.copy_![prop] === value &&\n\t\t\t// special case: NaN\n\t\t\ttypeof value !== \"number\" &&\n\t\t\t// special case: handle new props with value 'undefined'\n\t\t\t(value !== undefined || prop in state.copy_)\n\t\t)\n\t\t\treturn true\n\n\t\t// @ts-ignore\n\t\tstate.copy_![prop] = value\n\t\tstate.assigned_[prop] = true\n\t\treturn true\n\t},\n\tdeleteProperty(state, prop: string) {\n\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\tif (peek(state.base_, prop) !== undefined || prop in state.base_) {\n\t\t\tstate.assigned_[prop] = false\n\t\t\tprepareCopy(state)\n\t\t\tmarkChanged(state)\n\t\t} else {\n\t\t\t// if an originally not assigned property was deleted\n\t\t\tdelete state.assigned_[prop]\n\t\t}\n\t\t// @ts-ignore\n\t\tif (state.copy_) delete state.copy_[prop]\n\t\treturn true\n\t},\n\t// Note: We never coerce `desc.value` into an Immer draft, because we can't make\n\t// the same guarantee in ES5 mode.\n\tgetOwnPropertyDescriptor(state, prop) {\n\t\tconst owner = latest(state)\n\t\tconst desc = Reflect.getOwnPropertyDescriptor(owner, prop)\n\t\tif (!desc) return desc\n\t\treturn {\n\t\t\twritable: true,\n\t\t\tconfigurable: state.type_ !== ProxyType.ProxyArray || prop !== \"length\",\n\t\t\tenumerable: desc.enumerable,\n\t\t\tvalue: owner[prop]\n\t\t}\n\t},\n\tdefineProperty() {\n\t\tdie(11)\n\t},\n\tgetPrototypeOf(state) {\n\t\treturn Object.getPrototypeOf(state.base_)\n\t},\n\tsetPrototypeOf() {\n\t\tdie(12)\n\t}\n}\n\n/**\n * Array drafts\n */\n\nconst arrayTraps: ProxyHandler<[ProxyArrayState]> = {}\neach(objectTraps, (key, fn) => {\n\t// @ts-ignore\n\tarrayTraps[key] = function() {\n\t\targuments[0] = arguments[0][0]\n\t\treturn fn.apply(this, arguments)\n\t}\n})\narrayTraps.deleteProperty = function(state, prop) {\n\tif (__DEV__ && isNaN(parseInt(prop as any))) die(13)\n\treturn objectTraps.deleteProperty!.call(this, state[0], prop)\n}\narrayTraps.set = function(state, prop, value) {\n\tif (__DEV__ && prop !== \"length\" && isNaN(parseInt(prop as any))) die(14)\n\treturn objectTraps.set!.call(this, state[0], prop, value, state[0])\n}\n\n// Access a property without creating an Immer draft.\nfunction peek(draft: Drafted, prop: PropertyKey) {\n\tconst state = draft[DRAFT_STATE]\n\tconst source = state ? latest(state) : draft\n\treturn source[prop]\n}\n\nfunction readPropFromProto(state: ImmerState, source: any, prop: PropertyKey) {\n\tconst desc = getDescriptorFromProto(source, prop)\n\treturn desc\n\t\t? `value` in desc\n\t\t\t? desc.value\n\t\t\t: // This is a very special case, if the prop is a getter defined by the\n\t\t\t  // prototype, we should invoke it with the draft as context!\n\t\t\t  desc.get?.call(state.draft_)\n\t\t: undefined\n}\n\nfunction getDescriptorFromProto(\n\tsource: any,\n\tprop: PropertyKey\n): PropertyDescriptor | undefined {\n\t// 'in' checks proto!\n\tif (!(prop in source)) return undefined\n\tlet proto = Object.getPrototypeOf(source)\n\twhile (proto) {\n\t\tconst desc = Object.getOwnPropertyDescriptor(proto, prop)\n\t\tif (desc) return desc\n\t\tproto = Object.getPrototypeOf(proto)\n\t}\n\treturn undefined\n}\n\nexport function markChanged(state: ImmerState) {\n\tif (!state.modified_) {\n\t\tstate.modified_ = true\n\t\tif (state.parent_) {\n\t\t\tmarkChanged(state.parent_)\n\t\t}\n\t}\n}\n\nexport function prepareCopy(state: {base_: any; copy_: any}) {\n\tif (!state.copy_) {\n\t\tstate.copy_ = shallowCopy(state.base_)\n\t}\n}\n", "import {\n\tIProduceWithPatches,\n\tIProduce,\n\tImmerState,\n\tDrafted,\n\tisDraftable,\n\tprocessResult,\n\tPatch,\n\tObjectish,\n\tDRAFT_STATE,\n\tDraft,\n\tPatchListener,\n\tisDraft,\n\tisMap,\n\tisSet,\n\tcreateProxyProxy,\n\tgetPlugin,\n\tdie,\n\thasProxies,\n\tenterScope,\n\trevokeScope,\n\tleaveScope,\n\tusePatchesInScope,\n\tgetCurrentScope,\n\tNOTHING,\n\tfreeze,\n\tcurrent\n} from \"../internal\"\n\ninterface ProducersFns {\n\tproduce: IProduce\n\tproduceWithPatches: IProduceWithPatches\n}\n\nexport class Immer implements ProducersFns {\n\tuseProxies_: boolean = hasProxies\n\n\tautoFreeze_: boolean = true\n\n\tconstructor(config?: {useProxies?: boolean; autoFreeze?: boolean}) {\n\t\tif (typeof config?.useProxies === \"boolean\")\n\t\t\tthis.setUseProxies(config!.useProxies)\n\t\tif (typeof config?.autoFreeze === \"boolean\")\n\t\t\tthis.setAutoFreeze(config!.autoFreeze)\n\t}\n\n\t/**\n\t * The `produce` function takes a value and a \"recipe function\" (whose\n\t * return value often depends on the base state). The recipe function is\n\t * free to mutate its first argument however it wants. All mutations are\n\t * only ever applied to a __copy__ of the base state.\n\t *\n\t * Pass only a function to create a \"curried producer\" which relieves you\n\t * from passing the recipe function every time.\n\t *\n\t * Only plain objects and arrays are made mutable. All other objects are\n\t * considered uncopyable.\n\t *\n\t * Note: This function is __bound__ to its `Immer` instance.\n\t *\n\t * @param {any} base - the initial state\n\t * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n\t * @param {Function} patchListener - optional function that will be called with all the patches produced here\n\t * @returns {any} a new state, or the initial state if nothing was modified\n\t */\n\tproduce: IProduce = (base: any, recipe?: any, patchListener?: any) => {\n\t\t// curried invocation\n\t\tif (typeof base === \"function\" && typeof recipe !== \"function\") {\n\t\t\tconst defaultBase = recipe\n\t\t\trecipe = base\n\n\t\t\tconst self = this\n\t\t\treturn function curriedProduce(\n\t\t\t\tthis: any,\n\t\t\t\tbase = defaultBase,\n\t\t\t\t...args: any[]\n\t\t\t) {\n\t\t\t\treturn self.produce(base, (draft: Drafted) => recipe.call(this, draft, ...args)) // prettier-ignore\n\t\t\t}\n\t\t}\n\n\t\tif (typeof recipe !== \"function\") die(6)\n\t\tif (patchListener !== undefined && typeof patchListener !== \"function\")\n\t\t\tdie(7)\n\n\t\tlet result\n\n\t\t// Only plain objects, arrays, and \"immerable classes\" are drafted.\n\t\tif (isDraftable(base)) {\n\t\t\tconst scope = enterScope(this)\n\t\t\tconst proxy = createProxy(this, base, undefined)\n\t\t\tlet hasError = true\n\t\t\ttry {\n\t\t\t\tresult = recipe(proxy)\n\t\t\t\thasError = false\n\t\t\t} finally {\n\t\t\t\t// finally instead of catch + rethrow better preserves original stack\n\t\t\t\tif (hasError) revokeScope(scope)\n\t\t\t\telse leaveScope(scope)\n\t\t\t}\n\t\t\tif (typeof Promise !== \"undefined\" && result instanceof Promise) {\n\t\t\t\treturn result.then(\n\t\t\t\t\tresult => {\n\t\t\t\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\t\t\t\treturn processResult(result, scope)\n\t\t\t\t\t},\n\t\t\t\t\terror => {\n\t\t\t\t\t\trevokeScope(scope)\n\t\t\t\t\t\tthrow error\n\t\t\t\t\t}\n\t\t\t\t)\n\t\t\t}\n\t\t\tusePatchesInScope(scope, patchListener)\n\t\t\treturn processResult(result, scope)\n\t\t} else if (!base || typeof base !== \"object\") {\n\t\t\tresult = recipe(base)\n\t\t\tif (result === NOTHING) return undefined\n\t\t\tif (result === undefined) result = base\n\t\t\tif (this.autoFreeze_) freeze(result, true)\n\t\t\treturn result\n\t\t} else die(21, base)\n\t}\n\n\tproduceWithPatches: IProduceWithPatches = (\n\t\targ1: any,\n\t\targ2?: any,\n\t\targ3?: any\n\t): any => {\n\t\tif (typeof arg1 === \"function\") {\n\t\t\treturn (state: any, ...args: any[]) =>\n\t\t\t\tthis.produceWithPatches(state, (draft: any) => arg1(draft, ...args))\n\t\t}\n\n\t\tlet patches: Patch[], inversePatches: Patch[]\n\t\tconst nextState = this.produce(arg1, arg2, (p: Patch[], ip: Patch[]) => {\n\t\t\tpatches = p\n\t\t\tinversePatches = ip\n\t\t})\n\t\treturn [nextState, patches!, inversePatches!]\n\t}\n\n\tcreateDraft<T extends Objectish>(base: T): Draft<T> {\n\t\tif (!isDraftable(base)) die(8)\n\t\tif (isDraft(base)) base = current(base)\n\t\tconst scope = enterScope(this)\n\t\tconst proxy = createProxy(this, base, undefined)\n\t\tproxy[DRAFT_STATE].isManual_ = true\n\t\tleaveScope(scope)\n\t\treturn proxy as any\n\t}\n\n\tfinishDraft<D extends Draft<any>>(\n\t\tdraft: D,\n\t\tpatchListener?: PatchListener\n\t): D extends Draft<infer T> ? T : never {\n\t\tconst state: ImmerState = draft && (draft as any)[DRAFT_STATE]\n\t\tif (__DEV__) {\n\t\t\tif (!state || !state.isManual_) die(9)\n\t\t\tif (state.finalized_) die(10)\n\t\t}\n\t\tconst {scope_: scope} = state\n\t\tusePatchesInScope(scope, patchListener)\n\t\treturn processResult(undefined, scope)\n\t}\n\n\t/**\n\t * Pass true to automatically freeze all copies created by Immer.\n\t *\n\t * By default, auto-freezing is enabled.\n\t */\n\tsetAutoFreeze(value: boolean) {\n\t\tthis.autoFreeze_ = value\n\t}\n\n\t/**\n\t * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n\t * always faster than using ES5 proxies.\n\t *\n\t * By default, feature detection is used, so calling this is rarely necessary.\n\t */\n\tsetUseProxies(value: boolean) {\n\t\tif (value && !hasProxies) {\n\t\t\tdie(20)\n\t\t}\n\t\tthis.useProxies_ = value\n\t}\n\n\tapplyPatches<T extends Objectish>(base: T, patches: Patch[]): T {\n\t\t// If a patch replaces the entire state, take that replacement as base\n\t\t// before applying patches\n\t\tlet i: number\n\t\tfor (i = patches.length - 1; i >= 0; i--) {\n\t\t\tconst patch = patches[i]\n\t\t\tif (patch.path.length === 0 && patch.op === \"replace\") {\n\t\t\t\tbase = patch.value\n\t\t\t\tbreak\n\t\t\t}\n\t\t}\n\n\t\tconst applyPatchesImpl = getPlugin(\"Patches\").applyPatches_\n\t\tif (isDraft(base)) {\n\t\t\t// N.B: never hits if some patch a replacement, patches are never drafts\n\t\t\treturn applyPatchesImpl(base, patches) as any\n\t\t}\n\t\t// Otherwise, produce a copy of the base state.\n\t\treturn this.produce(base, (draft: Drafted) =>\n\t\t\tapplyPatchesImpl(draft, patches.slice(i + 1))\n\t\t) as any\n\t}\n}\n\nexport function createProxy<T extends Objectish>(\n\timmer: Immer,\n\tvalue: T,\n\tparent?: ImmerState\n): Drafted<T, ImmerState> {\n\t// precondition: createProxy should be guarded by isDraftable, so we know we can safely draft\n\tconst draft: Drafted = isMap(value)\n\t\t? getPlugin(\"MapSet\").proxyMap_(value, parent)\n\t\t: isSet(value)\n\t\t? getPlugin(\"MapSet\").proxySet_(value, parent)\n\t\t: immer.useProxies_\n\t\t? createProxyProxy(value, parent)\n\t\t: getPlugin(\"ES5\").createES5Proxy_(value, parent)\n\n\tconst scope = parent ? parent.scope_ : getCurrentScope()\n\tscope.drafts_.push(draft)\n\treturn draft\n}\n", "import {\n\tdie,\n\tisDraft,\n\tshallowCopy,\n\teach,\n\tDRAFT_STATE,\n\tget,\n\tset,\n\tImmerState,\n\tisDraftable,\n\tArchtype,\n\tgetArchtype,\n\tgetPlugin\n} from \"../internal\"\n\n/** Takes a snapshot of the current state of a draft and finalizes it (but without freezing). This is a great utility to print the current state during debugging (no Proxies in the way). The output of current can also be safely leaked outside the producer. */\nexport function current<T>(value: T): T\nexport function current(value: any): any {\n\tif (!isDraft(value)) die(22, value)\n\treturn currentImpl(value)\n}\n\nfunction currentImpl(value: any): any {\n\tif (!isDraftable(value)) return value\n\tconst state: ImmerState | undefined = value[DRAFT_STATE]\n\tlet copy: any\n\tconst archType = getArchtype(value)\n\tif (state) {\n\t\tif (\n\t\t\t!state.modified_ &&\n\t\t\t(state.type_ < 4 || !getPlugin(\"ES5\").hasChanges_(state as any))\n\t\t)\n\t\t\treturn state.base_\n\t\t// Optimization: avoid generating new drafts during copying\n\t\tstate.finalized_ = true\n\t\tcopy = copyHelper(value, archType)\n\t\tstate.finalized_ = false\n\t} else {\n\t\tcopy = copyHelper(value, archType)\n\t}\n\n\teach(copy, (key, childValue) => {\n\t\tif (state && get(state.base_, key) === childValue) return // no need to copy or search in something that didn't change\n\t\tset(copy, key, currentImpl(childValue))\n\t})\n\t// In the future, we might consider freezing here, based on the current settings\n\treturn archType === Archtype.Set ? new Set(copy) : copy\n}\n\nfunction copyHelper(value: any, archType: number): any {\n\t// creates a shallow copy, even if it is a map or set\n\tswitch (archType) {\n\t\tcase Archtype.Map:\n\t\t\treturn new Map(value)\n\t\tcase Archtype.Set:\n\t\t\t// Set will be cloned as array temporarily, so that we can replace individual items\n\t\t\treturn Array.from(value)\n\t}\n\treturn shallowCopy(value)\n}\n", "import {\n\tImmerState,\n\tDrafted,\n\tES5ArrayState,\n\tES5ObjectState,\n\teach,\n\thas,\n\tisDraft,\n\tlatest,\n\tDRAFT_STATE,\n\tis,\n\tloadPlugin,\n\tImmerScope,\n\tProxyType,\n\tgetCurrentScope,\n\tdie,\n\tmarkChanged,\n\tobjectTraps,\n\townKeys,\n\tgetOwnPropertyDescriptors\n} from \"../internal\"\n\ntype ES5State = ES5ArrayState | ES5ObjectState\n\nexport function enableES5() {\n\tfunction willFinalizeES5_(\n\t\tscope: ImmerScope,\n\t\tresult: any,\n\t\tisReplaced: boolean\n\t) {\n\t\tif (!isReplaced) {\n\t\t\tif (scope.patches_) {\n\t\t\t\tmarkChangesRecursively(scope.drafts_![0])\n\t\t\t}\n\t\t\t// This is faster when we don't care about which attributes changed.\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t\t// When a child draft is returned, look for changes.\n\t\telse if (\n\t\t\tisDraft(result) &&\n\t\t\t(result[DRAFT_STATE] as ES5State).scope_ === scope\n\t\t) {\n\t\t\tmarkChangesSweep(scope.drafts_)\n\t\t}\n\t}\n\n\tfunction createES5Draft(isArray: boolean, base: any) {\n\t\tif (isArray) {\n\t\t\tconst draft = new Array(base.length)\n\t\t\tfor (let i = 0; i < base.length; i++)\n\t\t\t\tObject.defineProperty(draft, \"\" + i, proxyProperty(i, true))\n\t\t\treturn draft\n\t\t} else {\n\t\t\tconst descriptors = getOwnPropertyDescriptors(base)\n\t\t\tdelete descriptors[DRAFT_STATE as any]\n\t\t\tconst keys = ownKeys(descriptors)\n\t\t\tfor (let i = 0; i < keys.length; i++) {\n\t\t\t\tconst key: any = keys[i]\n\t\t\t\tdescriptors[key] = proxyProperty(\n\t\t\t\t\tkey,\n\t\t\t\t\tisArray || !!descriptors[key].enumerable\n\t\t\t\t)\n\t\t\t}\n\t\t\treturn Object.create(Object.getPrototypeOf(base), descriptors)\n\t\t}\n\t}\n\n\tfunction createES5Proxy_<T>(\n\t\tbase: T,\n\t\tparent?: ImmerState\n\t): Drafted<T, ES5ObjectState | ES5ArrayState> {\n\t\tconst isArray = Array.isArray(base)\n\t\tconst draft = createES5Draft(isArray, base)\n\n\t\tconst state: ES5ObjectState | ES5ArrayState = {\n\t\t\ttype_: isArray ? ProxyType.ES5Array : (ProxyType.ES5Object as any),\n\t\t\tscope_: parent ? parent.scope_ : getCurrentScope(),\n\t\t\tmodified_: false,\n\t\t\tfinalized_: false,\n\t\t\tassigned_: {},\n\t\t\tparent_: parent,\n\t\t\t// base is the object we are drafting\n\t\t\tbase_: base,\n\t\t\t// draft is the draft object itself, that traps all reads and reads from either the base (if unmodified) or copy (if modified)\n\t\t\tdraft_: draft,\n\t\t\tcopy_: null,\n\t\t\trevoked_: false,\n\t\t\tisManual_: false\n\t\t}\n\n\t\tObject.defineProperty(draft, DRAFT_STATE, {\n\t\t\tvalue: state,\n\t\t\t// enumerable: false <- the default\n\t\t\twritable: true\n\t\t})\n\t\treturn draft\n\t}\n\n\t// property descriptors are recycled to make sure we don't create a get and set closure per property,\n\t// but share them all instead\n\tconst descriptors: {[prop: string]: PropertyDescriptor} = {}\n\n\tfunction proxyProperty(\n\t\tprop: string | number,\n\t\tenumerable: boolean\n\t): PropertyDescriptor {\n\t\tlet desc = descriptors[prop]\n\t\tif (desc) {\n\t\t\tdesc.enumerable = enumerable\n\t\t} else {\n\t\t\tdescriptors[prop] = desc = {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable,\n\t\t\t\tget(this: any) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\treturn objectTraps.get(state, prop)\n\t\t\t\t},\n\t\t\t\tset(this: any, value) {\n\t\t\t\t\tconst state = this[DRAFT_STATE]\n\t\t\t\t\tif (__DEV__) assertUnrevoked(state)\n\t\t\t\t\t// @ts-ignore\n\t\t\t\t\tobjectTraps.set(state, prop, value)\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn desc\n\t}\n\n\t// This looks expensive, but only proxies are visited, and only objects without known changes are scanned.\n\tfunction markChangesSweep(drafts: Drafted<any, ImmerState>[]) {\n\t\t// The natural order of drafts in the `scope` array is based on when they\n\t\t// were accessed. By processing drafts in reverse natural order, we have a\n\t\t// better chance of processing leaf nodes first. When a leaf node is known to\n\t\t// have changed, we can avoid any traversal of its ancestor nodes.\n\t\tfor (let i = drafts.length - 1; i >= 0; i--) {\n\t\t\tconst state: ES5State = drafts[i][DRAFT_STATE]\n\t\t\tif (!state.modified_) {\n\t\t\t\tswitch (state.type_) {\n\t\t\t\t\tcase ProxyType.ES5Array:\n\t\t\t\t\t\tif (hasArrayChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t\tcase ProxyType.ES5Object:\n\t\t\t\t\t\tif (hasObjectChanges(state)) markChanged(state)\n\t\t\t\t\t\tbreak\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction markChangesRecursively(object: any) {\n\t\tif (!object || typeof object !== \"object\") return\n\t\tconst state: ES5State | undefined = object[DRAFT_STATE]\n\t\tif (!state) return\n\t\tconst {base_, draft_, assigned_, type_} = state\n\t\tif (type_ === ProxyType.ES5Object) {\n\t\t\t// Look for added keys.\n\t\t\t// probably there is a faster way to detect changes, as sweep + recurse seems to do some\n\t\t\t// unnecessary work.\n\t\t\t// also: probably we can store the information we detect here, to speed up tree finalization!\n\t\t\teach(draft_, key => {\n\t\t\t\tif ((key as any) === DRAFT_STATE) return\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif ((base_ as any)[key] === undefined && !has(base_, key)) {\n\t\t\t\t\tassigned_[key] = true\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t} else if (!assigned_[key]) {\n\t\t\t\t\t// Only untouched properties trigger recursion.\n\t\t\t\t\tmarkChangesRecursively(draft_[key])\n\t\t\t\t}\n\t\t\t})\n\t\t\t// Look for removed keys.\n\t\t\teach(base_, key => {\n\t\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\t\tif (draft_[key] === undefined && !has(draft_, key)) {\n\t\t\t\t\tassigned_[key] = false\n\t\t\t\t\tmarkChanged(state)\n\t\t\t\t}\n\t\t\t})\n\t\t} else if (type_ === ProxyType.ES5Array) {\n\t\t\tif (hasArrayChanges(state as ES5ArrayState)) {\n\t\t\t\tmarkChanged(state)\n\t\t\t\tassigned_.length = true\n\t\t\t}\n\n\t\t\tif (draft_.length < base_.length) {\n\t\t\t\tfor (let i = draft_.length; i < base_.length; i++) assigned_[i] = false\n\t\t\t} else {\n\t\t\t\tfor (let i = base_.length; i < draft_.length; i++) assigned_[i] = true\n\t\t\t}\n\n\t\t\t// Minimum count is enough, the other parts has been processed.\n\t\t\tconst min = Math.min(draft_.length, base_.length)\n\n\t\t\tfor (let i = 0; i < min; i++) {\n\t\t\t\t// Only untouched indices trigger recursion.\n\t\t\t\tif (assigned_[i] === undefined) markChangesRecursively(draft_[i])\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction hasObjectChanges(state: ES5ObjectState) {\n\t\tconst {base_, draft_} = state\n\n\t\t// Search for added keys and changed keys. Start at the back, because\n\t\t// non-numeric keys are ordered by time of definition on the object.\n\t\tconst keys = ownKeys(draft_)\n\t\tfor (let i = keys.length - 1; i >= 0; i--) {\n\t\t\tconst key: any = keys[i]\n\t\t\tif (key === DRAFT_STATE) continue\n\t\t\tconst baseValue = base_[key]\n\t\t\t// The `undefined` check is a fast path for pre-existing keys.\n\t\t\tif (baseValue === undefined && !has(base_, key)) {\n\t\t\t\treturn true\n\t\t\t}\n\t\t\t// Once a base key is deleted, future changes go undetected, because its\n\t\t\t// descriptor is erased. This branch detects any missed changes.\n\t\t\telse {\n\t\t\t\tconst value = draft_[key]\n\t\t\t\tconst state: ImmerState = value && value[DRAFT_STATE]\n\t\t\t\tif (state ? state.base_ !== baseValue : !is(value, baseValue)) {\n\t\t\t\t\treturn true\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t// At this point, no keys were added or changed.\n\t\t// Compare key count to determine if keys were deleted.\n\t\tconst baseIsDraft = !!base_[DRAFT_STATE as any]\n\t\treturn keys.length !== ownKeys(base_).length + (baseIsDraft ? 0 : 1) // + 1 to correct for DRAFT_STATE\n\t}\n\n\tfunction hasArrayChanges(state: ES5ArrayState) {\n\t\tconst {draft_} = state\n\t\tif (draft_.length !== state.base_.length) return true\n\t\t// See #116\n\t\t// If we first shorten the length, our array interceptors will be removed.\n\t\t// If after that new items are added, result in the same original length,\n\t\t// those last items will have no intercepting property.\n\t\t// So if there is no own descriptor on the last position, we know that items were removed and added\n\t\t// N.B.: splice, unshift, etc only shift values around, but not prop descriptors, so we only have to check\n\t\t// the last one\n\t\tconst descriptor = Object.getOwnPropertyDescriptor(\n\t\t\tdraft_,\n\t\t\tdraft_.length - 1\n\t\t)\n\t\t// descriptor can be null, but only for newly created sparse arrays, eg. new Array(10)\n\t\tif (descriptor && !descriptor.get) return true\n\t\t// For all other cases, we don't have to compare, as they would have been picked up by the index setters\n\t\treturn false\n\t}\n\n\tfunction hasChanges_(state: ES5State) {\n\t\treturn state.type_ === ProxyType.ES5Object\n\t\t\t? hasObjectChanges(state)\n\t\t\t: hasArrayChanges(state)\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"ES5\", {\n\t\tcreateES5Proxy_,\n\t\twillFinalizeES5_,\n\t\thasChanges_\n\t})\n}\n", "import {immerable} from \"../immer\"\nimport {\n\tImmerState,\n\tPatch,\n\tSetState,\n\tES5ArrayState,\n\tProxyArrayState,\n\tMapState,\n\tES5ObjectState,\n\tProxyObjectState,\n\tPatchPath,\n\tget,\n\teach,\n\thas,\n\tgetArchtype,\n\tisSet,\n\tisMap,\n\tloadPlugin,\n\tProxyType,\n\tArchtype,\n\tdie,\n\tisDraft,\n\tisDraftable,\n\tNOTHING\n} from \"../internal\"\n\nexport function enablePatches() {\n\tconst REPLACE = \"replace\"\n\tconst ADD = \"add\"\n\tconst REMOVE = \"remove\"\n\n\tfunction generatePatches_(\n\t\tstate: ImmerState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tswitch (state.type_) {\n\t\t\tcase ProxyType.ProxyObject:\n\t\t\tcase ProxyType.ES5Object:\n\t\t\tcase ProxyType.Map:\n\t\t\t\treturn generatePatchesFromAssigned(\n\t\t\t\t\tstate,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t\tcase ProxyType.ES5Array:\n\t\t\tcase ProxyType.ProxyArray:\n\t\t\t\treturn generateArrayPatches(state, basePath, patches, inversePatches)\n\t\t\tcase ProxyType.Set:\n\t\t\t\treturn generateSetPatches(\n\t\t\t\t\t(state as any) as SetState,\n\t\t\t\t\tbasePath,\n\t\t\t\t\tpatches,\n\t\t\t\t\tinversePatches\n\t\t\t\t)\n\t\t}\n\t}\n\n\tfunction generateArrayPatches(\n\t\tstate: ES5ArrayState | ProxyArrayState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, assigned_} = state\n\t\tlet copy_ = state.copy_!\n\n\t\t// Reduce complexity by ensuring `base` is never longer.\n\t\tif (copy_.length < base_.length) {\n\t\t\t// @ts-ignore\n\t\t\t;[base_, copy_] = [copy_, base_]\n\t\t\t;[patches, inversePatches] = [inversePatches, patches]\n\t\t}\n\n\t\t// Process replaced indices.\n\t\tfor (let i = 0; i < base_.length; i++) {\n\t\t\tif (assigned_[i] && copy_[i] !== base_[i]) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t\t})\n\t\t\t\tinversePatches.push({\n\t\t\t\t\top: REPLACE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue: clonePatchValueIfNeeded(base_[i])\n\t\t\t\t})\n\t\t\t}\n\t\t}\n\n\t\t// Process added indices.\n\t\tfor (let i = base_.length; i < copy_.length; i++) {\n\t\t\tconst path = basePath.concat([i])\n\t\t\tpatches.push({\n\t\t\t\top: ADD,\n\t\t\t\tpath,\n\t\t\t\t// Need to maybe clone it, as it can in fact be the original value\n\t\t\t\t// due to the base/copy inversion at the start of this function\n\t\t\t\tvalue: clonePatchValueIfNeeded(copy_[i])\n\t\t\t})\n\t\t}\n\t\tif (base_.length < copy_.length) {\n\t\t\tinversePatches.push({\n\t\t\t\top: REPLACE,\n\t\t\t\tpath: basePath.concat([\"length\"]),\n\t\t\t\tvalue: base_.length\n\t\t\t})\n\t\t}\n\t}\n\n\t// This is used for both Map objects and normal objects.\n\tfunction generatePatchesFromAssigned(\n\t\tstate: MapState | ES5ObjectState | ProxyObjectState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tconst {base_, copy_} = state\n\t\teach(state.assigned_!, (key, assignedValue) => {\n\t\t\tconst origValue = get(base_, key)\n\t\t\tconst value = get(copy_!, key)\n\t\t\tconst op = !assignedValue ? REMOVE : has(base_, key) ? REPLACE : ADD\n\t\t\tif (origValue === value && op === REPLACE) return\n\t\t\tconst path = basePath.concat(key as any)\n\t\t\tpatches.push(op === REMOVE ? {op, path} : {op, path, value})\n\t\t\tinversePatches.push(\n\t\t\t\top === ADD\n\t\t\t\t\t? {op: REMOVE, path}\n\t\t\t\t\t: op === REMOVE\n\t\t\t\t\t? {op: ADD, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t\t\t: {op: REPLACE, path, value: clonePatchValueIfNeeded(origValue)}\n\t\t\t)\n\t\t})\n\t}\n\n\tfunction generateSetPatches(\n\t\tstate: SetState,\n\t\tbasePath: PatchPath,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t) {\n\t\tlet {base_, copy_} = state\n\n\t\tlet i = 0\n\t\tbase_.forEach((value: any) => {\n\t\t\tif (!copy_!.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t\ti = 0\n\t\tcopy_!.forEach((value: any) => {\n\t\t\tif (!base_.has(value)) {\n\t\t\t\tconst path = basePath.concat([i])\n\t\t\t\tpatches.push({\n\t\t\t\t\top: ADD,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t\tinversePatches.unshift({\n\t\t\t\t\top: REMOVE,\n\t\t\t\t\tpath,\n\t\t\t\t\tvalue\n\t\t\t\t})\n\t\t\t}\n\t\t\ti++\n\t\t})\n\t}\n\n\tfunction generateReplacementPatches_(\n\t\trootState: ImmerState,\n\t\treplacement: any,\n\t\tpatches: Patch[],\n\t\tinversePatches: Patch[]\n\t): void {\n\t\tpatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: replacement === NOTHING ? undefined : replacement\n\t\t})\n\t\tinversePatches.push({\n\t\t\top: REPLACE,\n\t\t\tpath: [],\n\t\t\tvalue: rootState.base_\n\t\t})\n\t}\n\n\tfunction applyPatches_<T>(draft: T, patches: Patch[]): T {\n\t\tpatches.forEach(patch => {\n\t\t\tconst {path, op} = patch\n\n\t\t\tlet base: any = draft\n\t\t\tfor (let i = 0; i < path.length - 1; i++) {\n\t\t\t\tconst parentType = getArchtype(base)\n\t\t\t\tconst p = \"\" + path[i]\n\t\t\t\t// See #738, avoid prototype pollution\n\t\t\t\tif (\n\t\t\t\t\t(parentType === Archtype.Object || parentType === Archtype.Array) &&\n\t\t\t\t\t(p === \"__proto__\" || p === \"constructor\")\n\t\t\t\t)\n\t\t\t\t\tdie(24)\n\t\t\t\tif (typeof base === \"function\" && p === \"prototype\") die(24)\n\t\t\t\tbase = get(base, p)\n\t\t\t\tif (typeof base !== \"object\") die(15, path.join(\"/\"))\n\t\t\t}\n\n\t\t\tconst type = getArchtype(base)\n\t\t\tconst value = deepClonePatchValue(patch.value) // used to clone patch to ensure original patch is not modified, see #411\n\t\t\tconst key = path[path.length - 1]\n\t\t\tswitch (op) {\n\t\t\t\tcase REPLACE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\tdie(16)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// if value is an object, then it's assigned by reference\n\t\t\t\t\t\t\t// in the following add or remove ops, the value field inside the patch will also be modifyed\n\t\t\t\t\t\t\t// so we use value from the cloned patch\n\t\t\t\t\t\t\t// @ts-ignore\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase ADD:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 0, value)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.set(key, value)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.add(value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn (base[key] = value)\n\t\t\t\t\t}\n\t\t\t\tcase REMOVE:\n\t\t\t\t\tswitch (type) {\n\t\t\t\t\t\tcase Archtype.Array:\n\t\t\t\t\t\t\treturn base.splice(key as any, 1)\n\t\t\t\t\t\tcase Archtype.Map:\n\t\t\t\t\t\t\treturn base.delete(key)\n\t\t\t\t\t\tcase Archtype.Set:\n\t\t\t\t\t\t\treturn base.delete(patch.value)\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\treturn delete base[key]\n\t\t\t\t\t}\n\t\t\t\tdefault:\n\t\t\t\t\tdie(17, op)\n\t\t\t}\n\t\t})\n\n\t\treturn draft\n\t}\n\n\t// optimize: this is quite a performance hit, can we detect intelligently when it is needed?\n\t// E.g. auto-draft when new objects from outside are assigned and modified?\n\t// (See failing test when deepClone just returns obj)\n\tfunction deepClonePatchValue<T>(obj: T): T\n\tfunction deepClonePatchValue(obj: any) {\n\t\tif (!isDraftable(obj)) return obj\n\t\tif (Array.isArray(obj)) return obj.map(deepClonePatchValue)\n\t\tif (isMap(obj))\n\t\t\treturn new Map(\n\t\t\t\tArray.from(obj.entries()).map(([k, v]) => [k, deepClonePatchValue(v)])\n\t\t\t)\n\t\tif (isSet(obj)) return new Set(Array.from(obj).map(deepClonePatchValue))\n\t\tconst cloned = Object.create(Object.getPrototypeOf(obj))\n\t\tfor (const key in obj) cloned[key] = deepClonePatchValue(obj[key])\n\t\tif (has(obj, immerable)) cloned[immerable] = obj[immerable]\n\t\treturn cloned\n\t}\n\n\tfunction clonePatchValueIfNeeded<T>(obj: T): T {\n\t\tif (isDraft(obj)) {\n\t\t\treturn deepClonePatchValue(obj)\n\t\t} else return obj\n\t}\n\n\tloadPlugin(\"Patches\", {\n\t\tapplyPatches_,\n\t\tgeneratePatches_,\n\t\tgenerateReplacementPatches_\n\t})\n}\n", "// types only!\nimport {\n\tImmerState,\n\tAnyMap,\n\tAnySet,\n\tMapState,\n\tSetState,\n\tDRAFT_STATE,\n\tgetCurrentScope,\n\tlatest,\n\titeratorSymbol,\n\tisDraftable,\n\tcreateProxy,\n\tloadPlugin,\n\tmarkChanged,\n\tProxyType,\n\tdie,\n\teach\n} from \"../internal\"\n\nexport function enableMapSet() {\n\t/* istanbul ignore next */\n\tvar extendStatics = function(d: any, b: any): any {\n\t\textendStatics =\n\t\t\tObject.setPrototypeOf ||\n\t\t\t({__proto__: []} instanceof Array &&\n\t\t\t\tfunction(d, b) {\n\t\t\t\t\td.__proto__ = b\n\t\t\t\t}) ||\n\t\t\tfunction(d, b) {\n\t\t\t\tfor (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]\n\t\t\t}\n\t\treturn extendStatics(d, b)\n\t}\n\n\t// Ugly hack to resolve #502 and inherit built in Map / Set\n\tfunction __extends(d: any, b: any): any {\n\t\textendStatics(d, b)\n\t\tfunction __(this: any): any {\n\t\t\tthis.constructor = d\n\t\t}\n\t\td.prototype =\n\t\t\t// @ts-ignore\n\t\t\t((__.prototype = b.prototype), new __())\n\t}\n\n\tconst DraftMap = (function(_super) {\n\t\t__extends(DraftMap, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftMap(this: any, target: AnyMap, parent?: ImmerState): any {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Map,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tassigned_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this as any,\n\t\t\t\tisManual_: false,\n\t\t\t\trevoked_: false\n\t\t\t} as MapState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftMap.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: false,\n\t\t\t// configurable: true\n\t\t})\n\n\t\tp.has = function(key: any): boolean {\n\t\t\treturn latest(this[DRAFT_STATE]).has(key)\n\t\t}\n\n\t\tp.set = function(key: any, value: any) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!latest(state).has(key) || latest(state).get(key) !== value) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t\tstate.copy_!.set(key, value)\n\t\t\t\tstate.assigned_!.set(key, true)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(key: any): boolean {\n\t\t\tif (!this.has(key)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareMapCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\tstate.assigned_!.set(key, false)\n\t\t\tstate.copy_!.delete(key)\n\t\t\treturn true\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareMapCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.assigned_ = new Map()\n\t\t\t\teach(state.base_, key => {\n\t\t\t\t\tstate.assigned_!.set(key, false)\n\t\t\t\t})\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.forEach = function(\n\t\t\tcb: (value: any, key: any, self: any) => void,\n\t\t\tthisArg?: any\n\t\t) {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tlatest(state).forEach((_value: any, key: any, _map: any) => {\n\t\t\t\tcb.call(thisArg, this.get(key), key, this)\n\t\t\t})\n\t\t}\n\n\t\tp.get = function(key: any): any {\n\t\t\tconst state: MapState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tconst value = latest(state).get(key)\n\t\t\tif (state.finalized_ || !isDraftable(value)) {\n\t\t\t\treturn value\n\t\t\t}\n\t\t\tif (value !== state.base_.get(key)) {\n\t\t\t\treturn value // either already drafted or reassigned\n\t\t\t}\n\t\t\t// despite what it looks, this creates a draft only once, see above condition\n\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\tprepareMapCopy(state)\n\t\t\tstate.copy_!.set(key, draft)\n\t\t\treturn draft\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn latest(this[DRAFT_STATE]).keys()\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.values(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp.entries = function(): IterableIterator<[any, any]> {\n\t\t\tconst iterator = this.keys()\n\t\t\treturn {\n\t\t\t\t[iteratorSymbol]: () => this.entries(),\n\t\t\t\tnext: () => {\n\t\t\t\t\tconst r = iterator.next()\n\t\t\t\t\t/* istanbul ignore next */\n\t\t\t\t\tif (r.done) return r\n\t\t\t\t\tconst value = this.get(r.value)\n\t\t\t\t\treturn {\n\t\t\t\t\t\tdone: false,\n\t\t\t\t\t\tvalue: [r.value, value]\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} as any\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.entries()\n\t\t}\n\n\t\treturn DraftMap\n\t})(Map)\n\n\tfunction proxyMap_<T extends AnyMap>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftMap(target, parent)\n\t}\n\n\tfunction prepareMapCopy(state: MapState) {\n\t\tif (!state.copy_) {\n\t\t\tstate.assigned_ = new Map()\n\t\t\tstate.copy_ = new Map(state.base_)\n\t\t}\n\t}\n\n\tconst DraftSet = (function(_super) {\n\t\t__extends(DraftSet, _super)\n\t\t// Create class manually, cause #502\n\t\tfunction DraftSet(this: any, target: AnySet, parent?: ImmerState) {\n\t\t\tthis[DRAFT_STATE] = {\n\t\t\t\ttype_: ProxyType.Set,\n\t\t\t\tparent_: parent,\n\t\t\t\tscope_: parent ? parent.scope_ : getCurrentScope()!,\n\t\t\t\tmodified_: false,\n\t\t\t\tfinalized_: false,\n\t\t\t\tcopy_: undefined,\n\t\t\t\tbase_: target,\n\t\t\t\tdraft_: this,\n\t\t\t\tdrafts_: new Map(),\n\t\t\t\trevoked_: false,\n\t\t\t\tisManual_: false\n\t\t\t} as SetState\n\t\t\treturn this\n\t\t}\n\t\tconst p = DraftSet.prototype\n\n\t\tObject.defineProperty(p, \"size\", {\n\t\t\tget: function() {\n\t\t\t\treturn latest(this[DRAFT_STATE]).size\n\t\t\t}\n\t\t\t// enumerable: true,\n\t\t})\n\n\t\tp.has = function(value: any): boolean {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\t// bit of trickery here, to be able to recognize both the value, and the draft of its value\n\t\t\tif (!state.copy_) {\n\t\t\t\treturn state.base_.has(value)\n\t\t\t}\n\t\t\tif (state.copy_.has(value)) return true\n\t\t\tif (state.drafts_.has(value) && state.copy_.has(state.drafts_.get(value)))\n\t\t\t\treturn true\n\t\t\treturn false\n\t\t}\n\n\t\tp.add = function(value: any): any {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (!this.has(value)) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.add(value)\n\t\t\t}\n\t\t\treturn this\n\t\t}\n\n\t\tp.delete = function(value: any): any {\n\t\t\tif (!this.has(value)) {\n\t\t\t\treturn false\n\t\t\t}\n\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\tmarkChanged(state)\n\t\t\treturn (\n\t\t\t\tstate.copy_!.delete(value) ||\n\t\t\t\t(state.drafts_.has(value)\n\t\t\t\t\t? state.copy_!.delete(state.drafts_.get(value))\n\t\t\t\t\t: /* istanbul ignore next */ false)\n\t\t\t)\n\t\t}\n\n\t\tp.clear = function() {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tif (latest(state).size) {\n\t\t\t\tprepareSetCopy(state)\n\t\t\t\tmarkChanged(state)\n\t\t\t\tstate.copy_!.clear()\n\t\t\t}\n\t\t}\n\n\t\tp.values = function(): IterableIterator<any> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.values()\n\t\t}\n\n\t\tp.entries = function entries(): IterableIterator<[any, any]> {\n\t\t\tconst state: SetState = this[DRAFT_STATE]\n\t\t\tassertUnrevoked(state)\n\t\t\tprepareSetCopy(state)\n\t\t\treturn state.copy_!.entries()\n\t\t}\n\n\t\tp.keys = function(): IterableIterator<any> {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp[iteratorSymbol] = function() {\n\t\t\treturn this.values()\n\t\t}\n\n\t\tp.forEach = function forEach(cb: any, thisArg?: any) {\n\t\t\tconst iterator = this.values()\n\t\t\tlet result = iterator.next()\n\t\t\twhile (!result.done) {\n\t\t\t\tcb.call(thisArg, result.value, result.value, this)\n\t\t\t\tresult = iterator.next()\n\t\t\t}\n\t\t}\n\n\t\treturn DraftSet\n\t})(Set)\n\n\tfunction proxySet_<T extends AnySet>(target: T, parent?: ImmerState): T {\n\t\t// @ts-ignore\n\t\treturn new DraftSet(target, parent)\n\t}\n\n\tfunction prepareSetCopy(state: SetState) {\n\t\tif (!state.copy_) {\n\t\t\t// create drafts for all entries to preserve insertion order\n\t\t\tstate.copy_ = new Set()\n\t\t\tstate.base_.forEach(value => {\n\t\t\t\tif (isDraftable(value)) {\n\t\t\t\t\tconst draft = createProxy(state.scope_.immer_, value, state)\n\t\t\t\t\tstate.drafts_.set(value, draft)\n\t\t\t\t\tstate.copy_!.add(draft)\n\t\t\t\t} else {\n\t\t\t\t\tstate.copy_!.add(value)\n\t\t\t\t}\n\t\t\t})\n\t\t}\n\t}\n\n\tfunction assertUnrevoked(state: any /*ES5State | MapState | SetState*/) {\n\t\tif (state.revoked_) die(3, JSON.stringify(latest(state)))\n\t}\n\n\tloadPlugin(\"MapSet\", {proxyMap_, proxySet_})\n}\n", "import {enableES5} from \"./es5\"\nimport {enableMapSet} from \"./mapset\"\nimport {enablePatches} from \"./patches\"\n\nexport function enableAllPlugins() {\n\tenableES5()\n\tenableMapSet()\n\tenablePatches()\n}\n", "import {\n\tIProduce,\n\tIProduceWithPatches,\n\tImmer,\n\tDraft,\n\tImmutable\n} from \"./internal\"\n\nexport {\n\tDraft,\n\tImmutable,\n\tPatch,\n\tPatchListener,\n\toriginal,\n\tcurrent,\n\tisDraft,\n\tisDraftable,\n\tNOTHING as nothing,\n\tDRAFTABLE as immerable,\n\tfreeze\n} from \"./internal\"\n\nconst immer = new Immer()\n\n/**\n * The `produce` function takes a value and a \"recipe function\" (whose\n * return value often depends on the base state). The recipe function is\n * free to mutate its first argument however it wants. All mutations are\n * only ever applied to a __copy__ of the base state.\n *\n * Pass only a function to create a \"curried producer\" which relieves you\n * from passing the recipe function every time.\n *\n * Only plain objects and arrays are made mutable. All other objects are\n * considered uncopyable.\n *\n * Note: This function is __bound__ to its `Immer` instance.\n *\n * @param {any} base - the initial state\n * @param {Function} producer - function that receives a proxy of the base state as first argument and which can be freely modified\n * @param {Function} patchListener - optional function that will be called with all the patches produced here\n * @returns {any} a new state, or the initial state if nothing was modified\n */\nexport const produce: IProduce = immer.produce\nexport default produce\n\n/**\n * Like `produce`, but `produceWithPatches` always returns a tuple\n * [nextState, patches, inversePatches] (instead of just the next state)\n */\nexport const produceWithPatches: IProduceWithPatches = immer.produceWithPatches.bind(\n\timmer\n)\n\n/**\n * Pass true to automatically freeze all copies created by Immer.\n *\n * Always freeze by default, even in production mode\n */\nexport const setAutoFreeze = immer.setAutoFreeze.bind(immer)\n\n/**\n * Pass true to use the ES2015 `Proxy` class when creating drafts, which is\n * always faster than using ES5 proxies.\n *\n * By default, feature detection is used, so calling this is rarely necessary.\n */\nexport const setUseProxies = immer.setUseProxies.bind(immer)\n\n/**\n * Apply an array of Immer patches to the first argument.\n *\n * This function is a producer, which means copy-on-write is in effect.\n */\nexport const applyPatches = immer.applyPatches.bind(immer)\n\n/**\n * Create an Immer draft from the given base state, which may be a draft itself.\n * The draft can be modified until you finalize it with the `finishDraft` function.\n */\nexport const createDraft = immer.createDraft.bind(immer)\n\n/**\n * Finalize an Immer draft from a `createDraft` call, returning the base state\n * (if no changes were made) or a modified copy. The draft must *not* be\n * mutated afterwards.\n *\n * Pass a function as the 2nd argument to generate Immer patches based on the\n * changes that were made.\n */\nexport const finishDraft = immer.finishDraft.bind(immer)\n\n/**\n * This function is actually a no-op, but can be used to cast an immutable type\n * to an draft type and make TypeScript happy\n *\n * @param value\n */\nexport function castDraft<T>(value: T): Draft<T> {\n\treturn value as any\n}\n\n/**\n * This function is actually a no-op, but can be used to cast a mutable type\n * to an immutable type and make TypeScript happy\n * @param value\n */\nexport function castImmutable<T>(value: T): Immutable<T> {\n\treturn value as any\n}\n\nexport {Immer}\n\nexport {enableES5} from \"./plugins/es5\"\nexport {enablePatches} from \"./plugins/patches\"\nexport {enableMapSet} from \"./plugins/mapset\"\nexport {enableAllPlugins} from \"./plugins/all\"\n", "// Should be no imports here!\n\n// Some things that should be evaluated before all else...\n\n// We only want to know if non-polyfilled symbols are available\nconst hasSymbol =\n\ttypeof Symbol !== \"undefined\" && typeof Symbol(\"x\") === \"symbol\"\nexport const hasMap = typeof Map !== \"undefined\"\nexport const hasSet = typeof Set !== \"undefined\"\nexport const hasProxies =\n\ttypeof Proxy !== \"undefined\" &&\n\ttypeof Proxy.revocable !== \"undefined\" &&\n\ttypeof Reflect !== \"undefined\"\n\n/**\n * The sentinel value returned by producers to replace the draft with undefined.\n */\nexport const NOTHING: Nothing = hasSymbol\n\t? Symbol.for(\"immer-nothing\")\n\t: ({[\"immer-nothing\"]: true} as any)\n\n/**\n * To let Immer treat your class instances as plain immutable objects\n * (albeit with a custom prototype), you must define either an instance property\n * or a static property on each of your custom classes.\n *\n * Otherwise, your class instance will never be drafted, which means it won't be\n * safe to mutate in a produce callback.\n */\nexport const DRAFTABLE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-draftable\")\n\t: (\"__$immer_draftable\" as any)\n\nexport const DRAFT_STATE: unique symbol = hasSymbol\n\t? Symbol.for(\"immer-state\")\n\t: (\"__$immer_state\" as any)\n\n// Even a polyfilled Symbol might provide Symbol.iterator\nexport const iteratorSymbol: typeof Symbol.iterator =\n\t(typeof Symbol != \"undefined\" && Symbol.iterator) || (\"@@iterator\" as any)\n\n/** Use a class type for `nothing` so its type is unique */\nexport class Nothing {\n\t// This lets us do `Exclude<T, Nothing>`\n\t// @ts-ignore\n\tprivate _!: unique symbol\n}\n", "import { immerable, produce } from 'immer';\nimport EnumValue from './EnumValue';\nimport mapValues from 'lodash/mapValues';\nimport isObject from 'lodash/isObject';\n\n/** @typedef {{key:string; name:string; type: string, value: any}} FilterVariable */\n\n/**\n * Holds partially generated fragments of graphql. Each fragment has a set of\n * props, a set of child fragments, an optional query, and a set of variables.\n *\n * Usage:\n *\n * ```\n * const fragment = new Fragment('features').attr('id', 'name');\n * fragment.toDocument();\n * ```\n *\n * Generates:\n *\n * ```\n * query Features {\n *   features {\n *     id\n *     name\n *   }\n * }\n * ```\n *\n * A slightly more complicated example:\n *\n * ```\n * const fragment = new Fragment('features', 'Feature')\n *  .attr('id')\n *  .fragment(new Fragment('requirements').attr('id', 'name'))\n *  .argument('workflowStatus', 123, 'ID')\n *  .resolve();\n * fragment.toDocument();\n * ```\n *\n * Generates:\n *\n * ```\n * query Features($workflowStatus: ID) {\n *   features(workflowStatus: $workflowStatus) {\n *     id\n *     requirements {\n *       id\n *       name\n *     }\n *   }\n * }\n * ```\n */\nexport default class Fragment {\n  [immerable] = true;\n\n  /**\n   * @param {string} name\n   * @param {string} type\n   */\n  constructor(name = null, type = null) {\n    this.name = name;\n    /** @type {boolean} */\n    this._union = false;\n    /** @type {string} */\n    this._alias = undefined;\n    this.type = type;\n    /** @type {FilterVariable[]} */\n    this.variables = [];\n    /** @type {Fragment[]} */\n    this.fragments = [];\n    /** @type {string[]} */\n    this.attrs = [];\n  }\n\n  /**\n   * Add an attr or attrs to the fragment selection:\n   *\n   * ```\n   * fragment.attr('id').toDocument() // { id }\n   * ```\n   *\n   * @param  {...string} names\n   * @returns {this}\n   */\n  attr(...names) {\n    return produce(this, draft => {\n      draft.attrs = [...this.attrs, ...names];\n    });\n  }\n\n  /**\n   * Set the alias of this fragment's selection\n   *\n   * @param {string} alias\n   * @returns\n   */\n  alias(alias) {\n    return produce(this, draft => {\n      draft._alias = alias;\n    });\n  }\n\n  /**\n   * Add a child fragment or fragments\n   *\n   * ```\n   * fragment.fragment(new Fragment('features').attr('id')).toDocument() // { features { id } }\n   * ```\n   *\n   * @param  {...Fragment} fragments\n   * @returns {this}\n   */\n  fragment(...fragments) {\n    return produce(this, draft => {\n      draft.fragments = [...this.fragments, ...fragments];\n    });\n  }\n\n  /**\n   * Add a variable or variables\n   *\n   * ```\n   * fragment.variable({\n   *   key: 'name',\n   *   name: 'name',\n   *   value: 'hello',\n   *   type: 'String'\n   * }).toVariables() // { name: 'hello' }\n   * ```\n   *\n   * @param  {...FilterVariable} variables\n   * @returns {this}\n   */\n  variable(...variables) {\n    return produce(this, draft => {\n      draft.variables = [...this.variables, ...variables];\n    });\n  }\n\n  /**\n   * @returns {this}\n   */\n  union() {\n    return produce(this, draft => {\n      draft._union = true;\n    });\n  }\n\n  /**\n   * Add a variable by name and value. The type is optional and will be guessed\n   * if not given.\n   *\n   * ```\n   * new Fragment('features').argument('name', 'hello').toQuery() // query Features($name: String) { ...\n   * new Fragment('features').argument('id', '123', 'ID!').toQuery() // query Features($id: ID!) { ...\n   * ```\n   *\n   * @param {string} name\n   * @param {*} value\n   * @param {string=} type\n   * @returns {this}\n   */\n  argument(name, value, type) {\n    if (value instanceof EnumValue) {\n      type = value.type;\n      value = value.value;\n    }\n\n    if (!type && name.toLowerCase().endsWith('id')) {\n      type = 'ID!';\n    }\n\n    if (!type) {\n      const types = {\n        string: 'String',\n        boolean: 'Boolean',\n        number: 'Int',\n      };\n\n      if (Array.isArray(value) && value.length > 0) {\n        const itemType = types[typeof value[0]];\n        type = `[${itemType}]`;\n      } else {\n        type = types[typeof value];\n      }\n    }\n\n    if (!type) {\n      throw new Error(\n        `Cannot use argument ${name} of type ${typeof value} in graphql query ${\n          this.name\n        }`\n      );\n    }\n\n    return this.variable({ key: name, name: name, type, value });\n  }\n\n  /**\n   * Once a fragment is ready to use to produce a query, it's possible that\n   * there are duplicate variable names at different levels. For example:\n   *\n   * ```\n   * const root = new Fragment('feature', 'Feature');\n   * root.variables = {workflowStatus: {name: 'workflowStatus', type: 'ID', value: 123 }};\n   * root.query = 'features';\n   *\n   * const child = new Fragment('requirements', 'Requirement');\n   * child.variables = {workflowStatus: {name: 'workflowStatus', type: 'ID', value: 321 }};\n   * child.query = 'features';\n   *\n   * root.fragments = [child];\n   * root.toParameters(); // [['workflowStatus', 'ID']] we can only supply one workflowStatus\n   * ```\n   *\n   * In the above code we'll only be able to supply one `workflowStatus`\n   * variable. We need a different one for features and requirements. So resolve\n   * travels down the tree and names each variable after the fragment:\n   *\n   * ```\n   * const newRoot = root.resolve();\n   * newRoot.toParameters(); // [['workflowStatus', 'ID'], ['requirements_Requirement_workflowStatus', 'ID]]\n   * ```\n   *\n   * Now we get the appropriate parameters. The `toVariables()` function will\n   * produce the right values so there is no need to know the naming.\n   *\n   * @returns {this}\n   */\n  resolve() {\n    return produce(this, draft => {\n      draft.fragments = draft.fragments.map((f, idx) =>\n        f._resolveRename(String(idx))\n      );\n    });\n  }\n\n  /**\n   * Rename fragment variables for resolution. This is the function called on\n   * all non-root fragments recursively.\n   *\n   * @hidden\n   * @param {string} id\n   * @returns {this}\n   */\n  _resolveRename(id) {\n    return produce(this, draft => {\n      draft.fragments = draft.fragments.map((f, idx) =>\n        f._resolveRename(`${id}_${idx}`)\n      );\n\n      draft.variables = draft.variables.map(old => {\n        const name = `${this.name}${id}${old.name}`;\n        return { ...old, name };\n      });\n    });\n  }\n\n  /**\n   * Deeply prepares variable values for variable generation. For\n   * example, correctly outputs enum values inside arrays and objects.\n   *\n   * @hidden\n   * @param {any} value\n   * @returns {any}\n   */\n  _toVariableValue(value) {\n    if (value instanceof EnumValue) {\n      return value.value;\n    }\n\n    if (Array.isArray(value)) {\n      return value.map(v => this._toVariableValue(v));\n    }\n\n    if (isObject(value)) {\n      return mapValues(value, v => this._toVariableValue(v));\n    }\n\n    return value;\n  }\n\n  /**\n   * Generate the variables to be passed when this fragment is queried.\n   *\n   * @returns {Record<string, any>}\n   */\n  toVariables() {\n    return this.fragments.reduce(\n      (acc, f) => ({ ...acc, ...f.toVariables() }),\n      this.variables.reduce(\n        (acc, v) => ({ ...acc, [v.name]: this._toVariableValue(v.value) }),\n        {}\n      )\n    );\n  }\n\n  /**\n   * Generate a set of key value pairs where the key is a variable name and the\n   * value is the variable's graphql type. These can be used to construct a\n   * query function parameter list.\n   *\n   * @returns {Array<[string, string]>}\n   */\n  toParameters() {\n    return this.fragments.reduce(\n      (acc, f) => [...acc, ...f.toParameters()],\n      this.variables.reduce((acc, v) => [...acc, [v.name, v.type]], [])\n    );\n  }\n\n  /**\n   * Turn the attrs into field nodes\n   *\n   * @private\n   * @return {import('graphql').FieldNode[]}\n   */\n  fieldNodes() {\n    return this.attrs.map(attr => {\n      return {\n        kind: 'Field',\n        name: nameKind(attr),\n      };\n    });\n  }\n\n  /**\n   * Generate the inner selection set. This selection joins the fields with the\n   * child fragments.\n   *\n   * @private\n   * @return {import('graphql').SelectionSetNode}\n   */\n  selectionSet() {\n    return {\n      kind: 'SelectionSet',\n      selections: [\n        ...this.fieldNodes(),\n        ...this.fragments.map(f => f.toSelection()),\n      ],\n    };\n  }\n\n  /**\n   * Generate the selection for this Fragment. This will be a Field node or an\n   * InlineFragment node\n   *\n   * @private\n   * @returns {import('graphql').SelectionNode}\n   */\n  toSelection() {\n    const selectionSet = this.selectionSet();\n\n    if (this._union) {\n      return {\n        kind: 'InlineFragment',\n        typeCondition: namedTypeKind(this.type),\n        selectionSet,\n      };\n    }\n\n    /** @type {import('graphql').SelectionNode} */\n    let selection = {\n      kind: 'Field',\n      name: nameKind(this.name),\n      arguments: this.variables.map(v => variableArgument(v.key, v.name)),\n      // If the selection set is empty then do not add it to the field\n      selectionSet:\n        selectionSet.selections.length > 0 ? selectionSet : undefined,\n    };\n\n    if (this._alias) {\n      selection = { ...selection, alias: nameKind(this._alias) };\n    }\n\n    return selection;\n  }\n\n  /**\n   * Generate a top level selection set for this Fragment\n   *\n   * @private\n   * @returns {import('graphql').SelectionSetNode}\n   */\n  toSelectionSet() {\n    return {\n      kind: 'SelectionSet',\n      selections: [this.toSelection()],\n    };\n  }\n\n  /**\n   * Generate a graphql document node from the fragment tree\n   *\n   * @param {string} name\n   * @param {import('graphql').OperationTypeNode} operation\n   * @return {import('graphql').DocumentNode}\n   */\n  toDocument(name = this.name, operation = 'query') {\n    return {\n      kind: 'Document',\n      definitions: [\n        {\n          kind: 'OperationDefinition',\n          operation,\n          name: nameKind(name),\n          variableDefinitions: this.toParameters().map(([name, type]) =>\n            variableDefinition(name, type)\n          ),\n          selectionSet: this.toSelectionSet(),\n        },\n      ],\n    };\n  }\n}\n\n/** Helpers for generating graphql nodes */\n\n/**\n * @param {string} name\n * @param {string} type\n * @return {import('graphql').VariableDefinitionNode}\n */\nfunction variableDefinition(name, type) {\n  return {\n    kind: 'VariableDefinition',\n    variable: {\n      kind: 'Variable',\n      name: nameKind(name),\n    },\n    type: namedTypeKind(type),\n  };\n}\n\n/**\n * @param {string} arg\n * @param {string} name\n * @returns {import('graphql').ArgumentNode}\n */\nfunction variableArgument(arg, name) {\n  return {\n    kind: 'Argument',\n    name: nameKind(arg),\n    value: { kind: 'Variable', name: nameKind(name) },\n  };\n}\n\n/**\n * @param {string} value\n * @returns {import('graphql').NameNode}\n */\nfunction nameKind(value) {\n  if (typeof value !== 'string') {\n    throw new Error('value given to nameKind is not a name (string)');\n  }\n\n  return {\n    kind: 'Name',\n    value,\n  };\n}\n\n/**\n * @param {string} value\n * @returns {import('graphql').NamedTypeNode}\n */\nfunction namedTypeKind(value) {\n  return {\n    kind: 'NamedType',\n    name: nameKind(value),\n  };\n}\n", "import { modelInstance } from './modelBuilder';\n\nexport default class ModelCollection {\n  constructor(responseData, options = {}) {\n    Object.keys(responseData).forEach(attribute => {\n      this[attribute] = responseData[attribute];\n    });\n    this.options = options;\n\n    this.models = null;\n\n    return new Proxy(this, {\n      get(target, prop, receiver) {\n        if (prop in target) {\n          return Reflect.get(target, prop, receiver);\n        } else {\n          target.materializeRecords();\n          return Reflect.get(target.models, prop, receiver.models);\n        }\n      },\n      set(target, prop, value) {\n        if (prop in target) {\n          return Reflect.set(target, prop, value);\n        } else {\n          target.materializeRecords();\n          return Reflect.set(target.models, prop, value);\n        }\n      },\n      has(target, prop) {\n        if (Reflect.has(target, prop)) {\n          return true;\n        } else {\n          target.materializeRecords();\n          return Reflect.has(target.models, prop);\n        }\n      },\n    });\n  }\n\n  materializeRecords() {\n    this.models =\n      this.models || this.nodes.map(node => modelInstance(node, this.options));\n    return this.models;\n  }\n}\n", "import ApplicationModel from './ApplicationModel';\nimport ModelCollection from './ModelCollection';\n\n/**\n * Declares `modelClass` as a model type, which can be used to\n * automatically wrap GraphQL objects.\n *\n * Example: export default model(Feature);\n *\n * Additonal parameters can specify a list of mixins to apply to the model\n * class. A mixin is either an object that will extend the model prototype or a\n * function that receives the class and can return a new or modified class.\n *\n * ```js\n * const Feature = model(Feature, { hello() { return 'hello'; } })\n * new Feature().hello; // 'hello'\n * ```\n *\n * ```js\n * const Feature = model(Feature, modelClass => class extends modelClass { hello() { return 'hello'; } });\n * new Feature().hello; // 'hello'\n * ```\n *\n * Function mixins can do things like override methods.\n *\n * @template {{typename: string}} T\n * @param {T} modelClass\n * @param {Array<Function|object>} mixins\n * @returns {T}\n */\nexport function model(modelClass, ...mixins) {\n  const mixedClass = Array.from(mixins).reduce((acc, mixin) => {\n    if (typeof mixin === 'function') {\n      return mixin(acc);\n    } else {\n      acc.extend(mixin);\n      return acc;\n    }\n  }, modelClass);\n  // set the class name after mixins are applied\n  Object.defineProperty(mixedClass, 'name', { value: modelClass.name });\n  ApplicationModel.models[modelClass.typename] = mixedClass;\n  return mixedClass;\n}\n\n/**\n * Wrap `object` in a model object if it can be wrapped.\n *\n * @template {ApplicationModel} M\n * @param {M|{__typename: string}} object\n * @param {object} options\n * @param {import('./RelationAttribute').RelationAttribute=} options.parent\n * @returns {M}\n */\nexport const modelInstance = (object, options = {}) => {\n  if (object instanceof ApplicationModel) {\n    return object;\n  } else if (ApplicationModel.models[object.__typename]) {\n    const Model = ApplicationModel.models[object.__typename];\n    return new Model(object, options);\n  } else {\n    // We don't have a model defined for __typename, but can still use\n    // it as a regular object.\n    // @ts-ignore\n    return object;\n  }\n};\n\n/**\n * Given a value returned from a GraphQL query, return a wrapped\n * version of that value. If you have a bare JS object and want to do\n * something smarter with it, this is the method you want.\n *\n * For example, will wrap models in the correct ApplicationModel\n * subclass, will wrap paginated models in a ModelCollection, will\n * deeply wrap Array and object values, etc.\n *\n * @param {*} attr\n * @param {object} options\n * @param {import('./RelationAttribute').RelationAttribute=} options.parent\n */\nexport const modelAttribute = (attr, options = {}) => {\n  if (attr === null || attr === undefined) {\n    return attr;\n  } else if (Array.isArray(attr)) {\n    return attr.map(obj => modelInstance(obj, options));\n  } else if (typeof attr === 'object' && attr instanceof ApplicationModel) {\n    return attr;\n  } else if (typeof attr === 'object' && attr.nodes) {\n    return new ModelCollection(attr, options);\n  } else if (typeof attr === 'object' && attr.__typename) {\n    return modelInstance(attr, options);\n  } else if (typeof attr === 'object') {\n    return modelObject(attr);\n  } else {\n    return attr;\n  }\n};\n\n/**\n * Given an object, wraps all of its values using modelAttribute.\n */\nexport const modelObject = (object, options = {}) => {\n  const modelObject = {};\n  Object.keys(object).forEach(key => {\n    modelObject[key] = modelAttribute(object[key], options);\n  });\n  return modelObject;\n};\n", "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/**\n * Return true if `value` is object-like. A value is object-like if it's not\n * `null` and has a `typeof` result of \"object\".\n */\nexport default function isObjectLike(value) {\n  return _typeof(value) == 'object' && value !== null;\n}\n", "// In ES2015 (or a polyfilled) environment, this will be Symbol.iterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nexport var SYMBOL_ITERATOR = typeof Symbol === 'function' && Symbol.iterator != null ? Symbol.iterator : '@@iterator'; // In ES2017 (or a polyfilled) environment, this will be Symbol.asyncIterator\n// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_ASYNC_ITERATOR = typeof Symbol === 'function' && Symbol.asyncIterator != null ? Symbol.asyncIterator : '@@asyncIterator'; // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\nexport var SYMBOL_TO_STRING_TAG = typeof Symbol === 'function' && Symbol.toStringTag != null ? Symbol.toStringTag : '@@toStringTag';\n", "/**\n * Represents a location in a Source.\n */\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source, position) {\n  var lineRegexp = /\\r\\n|[\\n\\r]/g;\n  var line = 1;\n  var column = position + 1;\n  var match;\n\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n\n  return {\n    line: line,\n    column: column\n  };\n}\n", "import { getLocation } from \"./location.mjs\";\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printLocation(location) {\n  return printSourceLocation(location.source, getLocation(location.source, location.start));\n}\n/**\n * Render a helpful description of the location in the GraphQL Source document.\n */\n\nexport function printSourceLocation(source, sourceLocation) {\n  var firstLineColumnOffset = source.locationOffset.column - 1;\n  var body = whitespace(firstLineColumnOffset) + source.body;\n  var lineIndex = sourceLocation.line - 1;\n  var lineOffset = source.locationOffset.line - 1;\n  var lineNum = sourceLocation.line + lineOffset;\n  var columnOffset = sourceLocation.line === 1 ? firstLineColumnOffset : 0;\n  var columnNum = sourceLocation.column + columnOffset;\n  var locationStr = \"\".concat(source.name, \":\").concat(lineNum, \":\").concat(columnNum, \"\\n\");\n  var lines = body.split(/\\r\\n|[\\n\\r]/g);\n  var locationLine = lines[lineIndex]; // Special case for minified documents\n\n  if (locationLine.length > 120) {\n    var subLineIndex = Math.floor(columnNum / 80);\n    var subLineColumnNum = columnNum % 80;\n    var subLines = [];\n\n    for (var i = 0; i < locationLine.length; i += 80) {\n      subLines.push(locationLine.slice(i, i + 80));\n    }\n\n    return locationStr + printPrefixedLines([[\"\".concat(lineNum), subLines[0]]].concat(subLines.slice(1, subLineIndex + 1).map(function (subLine) {\n      return ['', subLine];\n    }), [[' ', whitespace(subLineColumnNum - 1) + '^'], ['', subLines[subLineIndex + 1]]]));\n  }\n\n  return locationStr + printPrefixedLines([// Lines specified like this: [\"prefix\", \"string\"],\n  [\"\".concat(lineNum - 1), lines[lineIndex - 1]], [\"\".concat(lineNum), locationLine], ['', whitespace(columnNum - 1) + '^'], [\"\".concat(lineNum + 1), lines[lineIndex + 1]]]);\n}\n\nfunction printPrefixedLines(lines) {\n  var existingLines = lines.filter(function (_ref) {\n    var _ = _ref[0],\n        line = _ref[1];\n    return line !== undefined;\n  });\n  var padLen = Math.max.apply(Math, existingLines.map(function (_ref2) {\n    var prefix = _ref2[0];\n    return prefix.length;\n  }));\n  return existingLines.map(function (_ref3) {\n    var prefix = _ref3[0],\n        line = _ref3[1];\n    return leftPad(padLen, prefix) + (line ? ' | ' + line : ' |');\n  }).join('\\n');\n}\n\nfunction whitespace(len) {\n  return Array(len + 1).join(' ');\n}\n\nfunction leftPad(len, str) {\n  return whitespace(len - str.length) + str;\n}\n", "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _wrapNativeSuper(Class) { var _cache = typeof Map === \"function\" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== \"function\") { throw new TypeError(\"Super expression must either be null or a function\"); } if (typeof _cache !== \"undefined\") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }\n\nfunction _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _isNativeFunction(fn) { return Function.toString.call(fn).indexOf(\"[native code]\") !== -1; }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\n// FIXME:\n// flowlint uninitialized-instance-property:off\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport { getLocation } from \"../language/location.mjs\";\nimport { printLocation, printSourceLocation } from \"../language/printLocation.mjs\";\n/**\n * A GraphQLError describes an Error found during the parse, validate, or\n * execute phases of performing a GraphQL operation. In addition to a message\n * and stack trace, it also includes information about the locations in a\n * GraphQL document and/or execution result that correspond to the Error.\n */\n\nexport var GraphQLError = /*#__PURE__*/function (_Error) {\n  _inherits(GraphQLError, _Error);\n\n  var _super = _createSuper(GraphQLError);\n\n  /**\n   * A message describing the Error for debugging purposes.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   *\n   * Note: should be treated as readonly, despite invariant usage.\n   */\n\n  /**\n   * An array of { line, column } locations within the source GraphQL document\n   * which correspond to this error.\n   *\n   * Errors during validation often contain multiple locations, for example to\n   * point out two things with the same name. Errors during execution include a\n   * single location, the field which produced the error.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array describing the JSON-path into the execution response which\n   * corresponds to this error. Only included for errors during execution.\n   *\n   * Enumerable, and appears in the result of JSON.stringify().\n   */\n\n  /**\n   * An array of GraphQL AST Nodes corresponding to this error.\n   */\n\n  /**\n   * The source GraphQL document for the first location of this error.\n   *\n   * Note that if this Error represents more than one node, the source may not\n   * represent nodes after the first node.\n   */\n\n  /**\n   * An array of character offsets within the source GraphQL document\n   * which correspond to this error.\n   */\n\n  /**\n   * The original error thrown from a field resolver during execution.\n   */\n\n  /**\n   * Extension fields to add to the formatted error.\n   */\n  function GraphQLError(message, nodes, source, positions, path, originalError, extensions) {\n    var _locations2, _source2, _positions2, _extensions2;\n\n    var _this;\n\n    _classCallCheck(this, GraphQLError);\n\n    _this = _super.call(this, message); // Compute list of blame nodes.\n\n    var _nodes = Array.isArray(nodes) ? nodes.length !== 0 ? nodes : undefined : nodes ? [nodes] : undefined; // Compute locations in the source for the given nodes/positions.\n\n\n    var _source = source;\n\n    if (!_source && _nodes) {\n      var _nodes$0$loc;\n\n      _source = (_nodes$0$loc = _nodes[0].loc) === null || _nodes$0$loc === void 0 ? void 0 : _nodes$0$loc.source;\n    }\n\n    var _positions = positions;\n\n    if (!_positions && _nodes) {\n      _positions = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(node.loc.start);\n        }\n\n        return list;\n      }, []);\n    }\n\n    if (_positions && _positions.length === 0) {\n      _positions = undefined;\n    }\n\n    var _locations;\n\n    if (positions && source) {\n      _locations = positions.map(function (pos) {\n        return getLocation(source, pos);\n      });\n    } else if (_nodes) {\n      _locations = _nodes.reduce(function (list, node) {\n        if (node.loc) {\n          list.push(getLocation(node.loc.source, node.loc.start));\n        }\n\n        return list;\n      }, []);\n    }\n\n    var _extensions = extensions;\n\n    if (_extensions == null && originalError != null) {\n      var originalExtensions = originalError.extensions;\n\n      if (isObjectLike(originalExtensions)) {\n        _extensions = originalExtensions;\n      }\n    }\n\n    Object.defineProperties(_assertThisInitialized(_this), {\n      name: {\n        value: 'GraphQLError'\n      },\n      message: {\n        value: message,\n        // By being enumerable, JSON.stringify will include `message` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: true,\n        writable: true\n      },\n      locations: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_locations2 = _locations) !== null && _locations2 !== void 0 ? _locations2 : undefined,\n        // By being enumerable, JSON.stringify will include `locations` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _locations != null\n      },\n      path: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: path !== null && path !== void 0 ? path : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: path != null\n      },\n      nodes: {\n        value: _nodes !== null && _nodes !== void 0 ? _nodes : undefined\n      },\n      source: {\n        value: (_source2 = _source) !== null && _source2 !== void 0 ? _source2 : undefined\n      },\n      positions: {\n        value: (_positions2 = _positions) !== null && _positions2 !== void 0 ? _positions2 : undefined\n      },\n      originalError: {\n        value: originalError\n      },\n      extensions: {\n        // Coercing falsy values to undefined ensures they will not be included\n        // in JSON.stringify() when not provided.\n        value: (_extensions2 = _extensions) !== null && _extensions2 !== void 0 ? _extensions2 : undefined,\n        // By being enumerable, JSON.stringify will include `path` in the\n        // resulting output. This ensures that the simplest possible GraphQL\n        // service adheres to the spec.\n        enumerable: _extensions != null\n      }\n    }); // Include (non-enumerable) stack trace.\n\n    if (originalError !== null && originalError !== void 0 && originalError.stack) {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: originalError.stack,\n        writable: true,\n        configurable: true\n      });\n      return _possibleConstructorReturn(_this);\n    } // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(_assertThisInitialized(_this), GraphQLError);\n    } else {\n      Object.defineProperty(_assertThisInitialized(_this), 'stack', {\n        value: Error().stack,\n        writable: true,\n        configurable: true\n      });\n    }\n\n    return _this;\n  }\n\n  _createClass(GraphQLError, [{\n    key: \"toString\",\n    value: function toString() {\n      return printError(this);\n    } // FIXME: workaround to not break chai comparisons, should be remove in v16\n    // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n  }, {\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Object';\n    }\n  }]);\n\n  return GraphQLError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n/**\n * Prints a GraphQLError to a string, representing useful location information\n * about the error's position in the source.\n */\n\nexport function printError(error) {\n  var output = error.message;\n\n  if (error.nodes) {\n    for (var _i2 = 0, _error$nodes2 = error.nodes; _i2 < _error$nodes2.length; _i2++) {\n      var node = _error$nodes2[_i2];\n\n      if (node.loc) {\n        output += '\\n\\n' + printLocation(node.loc);\n      }\n    }\n  } else if (error.source && error.locations) {\n    for (var _i4 = 0, _error$locations2 = error.locations; _i4 < _error$locations2.length; _i4++) {\n      var location = _error$locations2[_i4];\n      output += '\\n\\n' + printSourceLocation(error.source, location);\n    }\n  }\n\n  return output;\n}\n", "import { GraphQLError } from \"./GraphQLError.mjs\";\n/**\n * Produces a GraphQLError representing a syntax error, containing useful\n * descriptive information about the syntax error's position in the source.\n */\n\nexport function syntaxError(source, position, description) {\n  return new GraphQLError(\"Syntax Error: \".concat(description), undefined, source, [position]);\n}\n", "/**\n * The set of allowed kind values for AST nodes.\n */\nexport var Kind = Object.freeze({\n  // Name\n  NAME: 'Name',\n  // Document\n  DOCUMENT: 'Document',\n  OPERATION_DEFINITION: 'OperationDefinition',\n  VARIABLE_DEFINITION: 'VariableDefinition',\n  SELECTION_SET: 'SelectionSet',\n  FIELD: 'Field',\n  ARGUMENT: 'Argument',\n  // Fragments\n  FRAGMENT_SPREAD: 'FragmentSpread',\n  INLINE_FRAGMENT: 'InlineFragment',\n  FRAGMENT_DEFINITION: 'FragmentDefinition',\n  // Values\n  VARIABLE: 'Variable',\n  INT: 'IntValue',\n  FLOAT: 'FloatValue',\n  STRING: 'StringValue',\n  BOOLEAN: 'BooleanValue',\n  NULL: 'NullValue',\n  ENUM: 'EnumValue',\n  LIST: 'ListValue',\n  OBJECT: 'ObjectValue',\n  OBJECT_FIELD: 'ObjectField',\n  // Directives\n  DIRECTIVE: 'Directive',\n  // Types\n  NAMED_TYPE: 'NamedType',\n  LIST_TYPE: 'ListType',\n  NON_NULL_TYPE: 'NonNullType',\n  // Type System Definitions\n  SCHEMA_DEFINITION: 'SchemaDefinition',\n  OPERATION_TYPE_DEFINITION: 'OperationTypeDefinition',\n  // Type Definitions\n  SCALAR_TYPE_DEFINITION: 'ScalarTypeDefinition',\n  OBJECT_TYPE_DEFINITION: 'ObjectTypeDefinition',\n  FIELD_DEFINITION: 'FieldDefinition',\n  INPUT_VALUE_DEFINITION: 'InputValueDefinition',\n  INTERFACE_TYPE_DEFINITION: 'InterfaceTypeDefinition',\n  UNION_TYPE_DEFINITION: 'UnionTypeDefinition',\n  ENUM_TYPE_DEFINITION: 'EnumTypeDefinition',\n  ENUM_VALUE_DEFINITION: 'EnumValueDefinition',\n  INPUT_OBJECT_TYPE_DEFINITION: 'InputObjectTypeDefinition',\n  // Directive Definitions\n  DIRECTIVE_DEFINITION: 'DirectiveDefinition',\n  // Type System Extensions\n  SCHEMA_EXTENSION: 'SchemaExtension',\n  // Type Extensions\n  SCALAR_TYPE_EXTENSION: 'ScalarTypeExtension',\n  OBJECT_TYPE_EXTENSION: 'ObjectTypeExtension',\n  INTERFACE_TYPE_EXTENSION: 'InterfaceTypeExtension',\n  UNION_TYPE_EXTENSION: 'UnionTypeExtension',\n  ENUM_TYPE_EXTENSION: 'EnumTypeExtension',\n  INPUT_OBJECT_TYPE_EXTENSION: 'InputObjectTypeExtension'\n});\n/**\n * The enum type representing the possible kind values of AST nodes.\n */\n", "export default function invariant(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message != null ? message : 'Unexpected invariant triggered.');\n  }\n}\n", "// istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\nvar nodejsCustomInspectSymbol = typeof Symbol === 'function' && typeof Symbol.for === 'function' ? Symbol.for('nodejs.util.inspect.custom') : undefined;\nexport default nodejsCustomInspectSymbol;\n", "import invariant from \"./invariant.mjs\";\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\n/**\n * The `defineInspect()` function defines `inspect()` prototype method as alias of `toJSON`\n */\n\nexport default function defineInspect(classObject) {\n  var fn = classObject.prototype.toJSON;\n  typeof fn === 'function' || invariant(0);\n  classObject.prototype.inspect = fn; // istanbul ignore else (See: 'https://github.com/graphql/graphql-js/issues/2317')\n\n  if (nodejsCustomInspectSymbol) {\n    classObject.prototype[nodejsCustomInspectSymbol] = fn;\n  }\n}\n", "import defineInspect from \"../jsutils/defineInspect.mjs\";\n\n/**\n * Contains a range of UTF-8 character offsets and token references that\n * identify the region of the source from which the AST derived.\n */\nexport var Location = /*#__PURE__*/function () {\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The Token at which this Node begins.\n   */\n\n  /**\n   * The Token at which this Node ends.\n   */\n\n  /**\n   * The Source document the AST represents.\n   */\n  function Location(startToken, endToken, source) {\n    this.start = startToken.start;\n    this.end = endToken.end;\n    this.startToken = startToken;\n    this.endToken = endToken;\n    this.source = source;\n  }\n\n  var _proto = Location.prototype;\n\n  _proto.toJSON = function toJSON() {\n    return {\n      start: this.start,\n      end: this.end\n    };\n  };\n\n  return Location;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Location);\n/**\n * Represents a range of characters represented by a lexical token\n * within a Source.\n */\n\nexport var Token = /*#__PURE__*/function () {\n  /**\n   * The kind of Token.\n   */\n\n  /**\n   * The character offset at which this Node begins.\n   */\n\n  /**\n   * The character offset at which this Node ends.\n   */\n\n  /**\n   * The 1-indexed line number on which this Token appears.\n   */\n\n  /**\n   * The 1-indexed column number at which this Token begins.\n   */\n\n  /**\n   * For non-punctuation tokens, represents the interpreted value of the token.\n   */\n\n  /**\n   * Tokens exist as nodes in a double-linked-list amongst all tokens\n   * including ignored tokens. <SOF> is always the first node and <EOF>\n   * the last.\n   */\n  function Token(kind, start, end, line, column, prev, value) {\n    this.kind = kind;\n    this.start = start;\n    this.end = end;\n    this.line = line;\n    this.column = column;\n    this.value = value;\n    this.prev = prev;\n    this.next = null;\n  }\n\n  var _proto2 = Token.prototype;\n\n  _proto2.toJSON = function toJSON() {\n    return {\n      kind: this.kind,\n      value: this.value,\n      line: this.line,\n      column: this.column\n    };\n  };\n\n  return Token;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(Token);\n/**\n * @internal\n */\n\nexport function isNode(maybeNode) {\n  return maybeNode != null && typeof maybeNode.kind === 'string';\n}\n/**\n * The list of all possible AST node types.\n */\n", "/**\n * An exported enum describing the different kinds of tokens that the\n * lexer emits.\n */\nexport var TokenKind = Object.freeze({\n  SOF: '<SOF>',\n  EOF: '<EOF>',\n  BANG: '!',\n  DOLLAR: '$',\n  AMP: '&',\n  PAREN_L: '(',\n  PAREN_R: ')',\n  SPREAD: '...',\n  COLON: ':',\n  EQUALS: '=',\n  AT: '@',\n  BRACKET_L: '[',\n  BRACKET_R: ']',\n  BRACE_L: '{',\n  PIPE: '|',\n  BRACE_R: '}',\n  NAME: 'Name',\n  INT: 'Int',\n  FLOAT: 'Float',\n  STRING: 'String',\n  BLOCK_STRING: 'BlockString',\n  COMMENT: 'Comment'\n});\n/**\n * The enum type representing the token kinds values.\n */\n", "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\n/* eslint-disable flowtype/no-weak-types */\nimport nodejsCustomInspectSymbol from \"./nodejsCustomInspectSymbol.mjs\";\nvar MAX_ARRAY_LENGTH = 10;\nvar MAX_RECURSIVE_DEPTH = 2;\n/**\n * Used to print values in error messages.\n */\n\nexport default function inspect(value) {\n  return formatValue(value, []);\n}\n\nfunction formatValue(value, seenValues) {\n  switch (_typeof(value)) {\n    case 'string':\n      return JSON.stringify(value);\n\n    case 'function':\n      return value.name ? \"[function \".concat(value.name, \"]\") : '[function]';\n\n    case 'object':\n      if (value === null) {\n        return 'null';\n      }\n\n      return formatObjectValue(value, seenValues);\n\n    default:\n      return String(value);\n  }\n}\n\nfunction formatObjectValue(value, previouslySeenValues) {\n  if (previouslySeenValues.indexOf(value) !== -1) {\n    return '[Circular]';\n  }\n\n  var seenValues = [].concat(previouslySeenValues, [value]);\n  var customInspectFn = getCustomFn(value);\n\n  if (customInspectFn !== undefined) {\n    var customValue = customInspectFn.call(value); // check for infinite recursion\n\n    if (customValue !== value) {\n      return typeof customValue === 'string' ? customValue : formatValue(customValue, seenValues);\n    }\n  } else if (Array.isArray(value)) {\n    return formatArray(value, seenValues);\n  }\n\n  return formatObject(value, seenValues);\n}\n\nfunction formatObject(object, seenValues) {\n  var keys = Object.keys(object);\n\n  if (keys.length === 0) {\n    return '{}';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[' + getObjectTag(object) + ']';\n  }\n\n  var properties = keys.map(function (key) {\n    var value = formatValue(object[key], seenValues);\n    return key + ': ' + value;\n  });\n  return '{ ' + properties.join(', ') + ' }';\n}\n\nfunction formatArray(array, seenValues) {\n  if (array.length === 0) {\n    return '[]';\n  }\n\n  if (seenValues.length > MAX_RECURSIVE_DEPTH) {\n    return '[Array]';\n  }\n\n  var len = Math.min(MAX_ARRAY_LENGTH, array.length);\n  var remaining = array.length - len;\n  var items = [];\n\n  for (var i = 0; i < len; ++i) {\n    items.push(formatValue(array[i], seenValues));\n  }\n\n  if (remaining === 1) {\n    items.push('... 1 more item');\n  } else if (remaining > 1) {\n    items.push(\"... \".concat(remaining, \" more items\"));\n  }\n\n  return '[' + items.join(', ') + ']';\n}\n\nfunction getCustomFn(object) {\n  var customInspectFn = object[String(nodejsCustomInspectSymbol)];\n\n  if (typeof customInspectFn === 'function') {\n    return customInspectFn;\n  }\n\n  if (typeof object.inspect === 'function') {\n    return object.inspect;\n  }\n}\n\nfunction getObjectTag(object) {\n  var tag = Object.prototype.toString.call(object).replace(/^\\[object /, '').replace(/]$/, '');\n\n  if (tag === 'Object' && typeof object.constructor === 'function') {\n    var name = object.constructor.name;\n\n    if (typeof name === 'string' && name !== '') {\n      return name;\n    }\n  }\n\n  return tag;\n}\n", "export default function devAssert(condition, message) {\n  var booleanCondition = Boolean(condition); // istanbul ignore else (See transformation done in './resources/inlineInvariant.js')\n\n  if (!booleanCondition) {\n    throw new Error(message);\n  }\n}\n", "function _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport inspect from \"./inspect.mjs\";\n/**\n * A replacement for instanceof which includes an error warning when multi-realm\n * constructors are detected.\n */\n\n// See: https://expressjs.com/en/advanced/best-practice-performance.html#set-node_env-to-production\n// See: https://webpack.js.org/guides/production/\nexport default process.env.NODE_ENV === 'production' ? // istanbul ignore next (See: 'https://github.com/graphql/graphql-js/issues/2317')\n// eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  return value instanceof constructor;\n} : // eslint-disable-next-line no-shadow\nfunction instanceOf(value, constructor) {\n  if (value instanceof constructor) {\n    return true;\n  }\n\n  if (_typeof(value) === 'object' && value !== null) {\n    var _value$constructor;\n\n    var className = constructor.prototype[Symbol.toStringTag];\n    var valueClassName = // We still need to support constructor's name to detect conflicts with older versions of this library.\n    Symbol.toStringTag in value ? value[Symbol.toStringTag] : (_value$constructor = value.constructor) === null || _value$constructor === void 0 ? void 0 : _value$constructor.name;\n\n    if (className === valueClassName) {\n      var stringifiedValue = inspect(value);\n      throw new Error(\"Cannot use \".concat(className, \" \\\"\").concat(stringifiedValue, \"\\\" from another module or realm.\\n\\nEnsure that there is only one instance of \\\"graphql\\\" in the node_modules\\ndirectory. If different versions of \\\"graphql\\\" are the dependencies of other\\nrelied on modules, use \\\"resolutions\\\" to ensure only one version is installed.\\n\\nhttps://yarnpkg.com/en/docs/selective-version-resolutions\\n\\nDuplicate \\\"graphql\\\" modules cannot be used at the same time since different\\nversions may have different capabilities and behavior. The data from one\\nversion used in the function from another could produce confusing and\\nspurious results.\"));\n    }\n  }\n\n  return false;\n};\n", "function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\n\n/**\n * A representation of source input to GraphQL. The `name` and `locationOffset` parameters are\n * optional, but they are useful for clients who store GraphQL documents in source files.\n * For example, if the GraphQL input starts at line 40 in a file named `Foo.graphql`, it might\n * be useful for `name` to be `\"Foo.graphql\"` and location to be `{ line: 40, column: 1 }`.\n * The `line` and `column` properties in `locationOffset` are 1-indexed.\n */\nexport var Source = /*#__PURE__*/function () {\n  function Source(body) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'GraphQL request';\n    var locationOffset = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {\n      line: 1,\n      column: 1\n    };\n    typeof body === 'string' || devAssert(0, \"Body must be a string. Received: \".concat(inspect(body), \".\"));\n    this.body = body;\n    this.name = name;\n    this.locationOffset = locationOffset;\n    this.locationOffset.line > 0 || devAssert(0, 'line in locationOffset is 1-indexed and must be positive.');\n    this.locationOffset.column > 0 || devAssert(0, 'column in locationOffset is 1-indexed and must be positive.');\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n\n\n  _createClass(Source, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'Source';\n    }\n  }]);\n\n  return Source;\n}();\n/**\n * Test if the given value is a Source object.\n *\n * @internal\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isSource(source) {\n  return instanceOf(source, Source);\n}\n", "/**\n * The set of allowed directive location values.\n */\nexport var DirectiveLocation = Object.freeze({\n  // Request Definitions\n  QUERY: 'QUERY',\n  MUTATION: 'MUTATION',\n  SUBSCRIPTION: 'SUBSCRIPTION',\n  FIELD: 'FIELD',\n  FRAGMENT_DEFINITION: 'FRAGMENT_DEFINITION',\n  FRAGMENT_SPREAD: 'FRAGMENT_SPREAD',\n  INLINE_FRAGMENT: 'INLINE_FRAGMENT',\n  VARIABLE_DEFINITION: 'VARIABLE_DEFINITION',\n  // Type System Definitions\n  SCHEMA: 'SCHEMA',\n  SCALAR: 'SCALAR',\n  OBJECT: 'OBJECT',\n  FIELD_DEFINITION: 'FIELD_DEFINITION',\n  ARGUMENT_DEFINITION: 'ARGUMENT_DEFINITION',\n  INTERFACE: 'INTERFACE',\n  UNION: 'UNION',\n  ENUM: 'ENUM',\n  ENUM_VALUE: 'ENUM_VALUE',\n  INPUT_OBJECT: 'INPUT_OBJECT',\n  INPUT_FIELD_DEFINITION: 'INPUT_FIELD_DEFINITION'\n});\n/**\n * The enum type representing the directive location values.\n */\n", "/**\n * Produces the value of a block string from its parsed raw value, similar to\n * CoffeeScript's block string, Python's docstring trim or Ruby's strip_heredoc.\n *\n * This implements the GraphQL spec's BlockStringValue() static algorithm.\n *\n * @internal\n */\nexport function dedentBlockStringValue(rawString) {\n  // Expand a block string's raw value into independent lines.\n  var lines = rawString.split(/\\r\\n|[\\n\\r]/g); // Remove common indentation from all lines but first.\n\n  var commonIndent = getBlockStringIndentation(rawString);\n\n  if (commonIndent !== 0) {\n    for (var i = 1; i < lines.length; i++) {\n      lines[i] = lines[i].slice(commonIndent);\n    }\n  } // Remove leading and trailing blank lines.\n\n\n  var startLine = 0;\n\n  while (startLine < lines.length && isBlank(lines[startLine])) {\n    ++startLine;\n  }\n\n  var endLine = lines.length;\n\n  while (endLine > startLine && isBlank(lines[endLine - 1])) {\n    --endLine;\n  } // Return a string of the lines joined with U+000A.\n\n\n  return lines.slice(startLine, endLine).join('\\n');\n}\n\nfunction isBlank(str) {\n  for (var i = 0; i < str.length; ++i) {\n    if (str[i] !== ' ' && str[i] !== '\\t') {\n      return false;\n    }\n  }\n\n  return true;\n}\n/**\n * @internal\n */\n\n\nexport function getBlockStringIndentation(value) {\n  var _commonIndent;\n\n  var isFirstLine = true;\n  var isEmptyLine = true;\n  var indent = 0;\n  var commonIndent = null;\n\n  for (var i = 0; i < value.length; ++i) {\n    switch (value.charCodeAt(i)) {\n      case 13:\n        //  \\r\n        if (value.charCodeAt(i + 1) === 10) {\n          ++i; // skip \\r\\n as one symbol\n        }\n\n      // falls through\n\n      case 10:\n        //  \\n\n        isFirstLine = false;\n        isEmptyLine = true;\n        indent = 0;\n        break;\n\n      case 9: //   \\t\n\n      case 32:\n        //  <space>\n        ++indent;\n        break;\n\n      default:\n        if (isEmptyLine && !isFirstLine && (commonIndent === null || indent < commonIndent)) {\n          commonIndent = indent;\n        }\n\n        isEmptyLine = false;\n    }\n  }\n\n  return (_commonIndent = commonIndent) !== null && _commonIndent !== void 0 ? _commonIndent : 0;\n}\n/**\n * Print a block string in the indented block form by adding a leading and\n * trailing blank line. However, if a block string starts with whitespace and is\n * a single-line, adding a leading blank line would strip that whitespace.\n *\n * @internal\n */\n\nexport function printBlockString(value) {\n  var indentation = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  var preferMultipleLines = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var isSingleLine = value.indexOf('\\n') === -1;\n  var hasLeadingSpace = value[0] === ' ' || value[0] === '\\t';\n  var hasTrailingQuote = value[value.length - 1] === '\"';\n  var hasTrailingSlash = value[value.length - 1] === '\\\\';\n  var printAsMultipleLines = !isSingleLine || hasTrailingQuote || hasTrailingSlash || preferMultipleLines;\n  var result = ''; // Format a multi-line block quote to account for leading space.\n\n  if (printAsMultipleLines && !(isSingleLine && hasLeadingSpace)) {\n    result += '\\n' + indentation;\n  }\n\n  result += indentation ? value.replace(/\\n/g, '\\n' + indentation) : value;\n\n  if (printAsMultipleLines) {\n    result += '\\n';\n  }\n\n  return '\"\"\"' + result.replace(/\"\"\"/g, '\\\\\"\"\"') + '\"\"\"';\n}\n", "import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Token } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { dedentBlockStringValue } from \"./blockString.mjs\";\n/**\n * Given a Source object, creates a Lexer for that source.\n * A Lexer is a stateful stream generator in that every time\n * it is advanced, it returns the next token in the Source. Assuming the\n * source lexes, the final Token emitted by the lexer will be of kind\n * EOF, after which the lexer will repeatedly return the same EOF token\n * whenever called.\n */\n\nexport var Lexer = /*#__PURE__*/function () {\n  /**\n   * The previously focused non-ignored token.\n   */\n\n  /**\n   * The currently focused non-ignored token.\n   */\n\n  /**\n   * The (1-indexed) line containing the current token.\n   */\n\n  /**\n   * The character offset at which the current line begins.\n   */\n  function Lexer(source) {\n    var startOfFileToken = new Token(TokenKind.SOF, 0, 0, 0, 0, null);\n    this.source = source;\n    this.lastToken = startOfFileToken;\n    this.token = startOfFileToken;\n    this.line = 1;\n    this.lineStart = 0;\n  }\n  /**\n   * Advances the token stream to the next non-ignored token.\n   */\n\n\n  var _proto = Lexer.prototype;\n\n  _proto.advance = function advance() {\n    this.lastToken = this.token;\n    var token = this.token = this.lookahead();\n    return token;\n  }\n  /**\n   * Looks ahead and returns the next non-ignored token, but does not change\n   * the state of Lexer.\n   */\n  ;\n\n  _proto.lookahead = function lookahead() {\n    var token = this.token;\n\n    if (token.kind !== TokenKind.EOF) {\n      do {\n        var _token$next;\n\n        // Note: next is only mutable during parsing, so we cast to allow this.\n        token = (_token$next = token.next) !== null && _token$next !== void 0 ? _token$next : token.next = readToken(this, token);\n      } while (token.kind === TokenKind.COMMENT);\n    }\n\n    return token;\n  };\n\n  return Lexer;\n}();\n/**\n * @internal\n */\n\nexport function isPunctuatorTokenKind(kind) {\n  return kind === TokenKind.BANG || kind === TokenKind.DOLLAR || kind === TokenKind.AMP || kind === TokenKind.PAREN_L || kind === TokenKind.PAREN_R || kind === TokenKind.SPREAD || kind === TokenKind.COLON || kind === TokenKind.EQUALS || kind === TokenKind.AT || kind === TokenKind.BRACKET_L || kind === TokenKind.BRACKET_R || kind === TokenKind.BRACE_L || kind === TokenKind.PIPE || kind === TokenKind.BRACE_R;\n}\n\nfunction printCharCode(code) {\n  return (// NaN/undefined represents access beyond the end of the file.\n    isNaN(code) ? TokenKind.EOF : // Trust JSON for ASCII.\n    code < 0x007f ? JSON.stringify(String.fromCharCode(code)) : // Otherwise print the escaped form.\n    \"\\\"\\\\u\".concat(('00' + code.toString(16).toUpperCase()).slice(-4), \"\\\"\")\n  );\n}\n/**\n * Gets the next token from the source starting at the given position.\n *\n * This skips over whitespace until it finds the next lexable token, then lexes\n * punctuators immediately or calls the appropriate helper function for more\n * complicated tokens.\n */\n\n\nfunction readToken(lexer, prev) {\n  var source = lexer.source;\n  var body = source.body;\n  var bodyLength = body.length;\n  var pos = prev.end;\n\n  while (pos < bodyLength) {\n    var code = body.charCodeAt(pos);\n    var _line = lexer.line;\n\n    var _col = 1 + pos - lexer.lineStart; // SourceCharacter\n\n\n    switch (code) {\n      case 0xfeff: // <BOM>\n\n      case 9: //   \\t\n\n      case 32: //  <space>\n\n      case 44:\n        //  ,\n        ++pos;\n        continue;\n\n      case 10:\n        //  \\n\n        ++pos;\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 13:\n        //  \\r\n        if (body.charCodeAt(pos + 1) === 10) {\n          pos += 2;\n        } else {\n          ++pos;\n        }\n\n        ++lexer.line;\n        lexer.lineStart = pos;\n        continue;\n\n      case 33:\n        //  !\n        return new Token(TokenKind.BANG, pos, pos + 1, _line, _col, prev);\n\n      case 35:\n        //  #\n        return readComment(source, pos, _line, _col, prev);\n\n      case 36:\n        //  $\n        return new Token(TokenKind.DOLLAR, pos, pos + 1, _line, _col, prev);\n\n      case 38:\n        //  &\n        return new Token(TokenKind.AMP, pos, pos + 1, _line, _col, prev);\n\n      case 40:\n        //  (\n        return new Token(TokenKind.PAREN_L, pos, pos + 1, _line, _col, prev);\n\n      case 41:\n        //  )\n        return new Token(TokenKind.PAREN_R, pos, pos + 1, _line, _col, prev);\n\n      case 46:\n        //  .\n        if (body.charCodeAt(pos + 1) === 46 && body.charCodeAt(pos + 2) === 46) {\n          return new Token(TokenKind.SPREAD, pos, pos + 3, _line, _col, prev);\n        }\n\n        break;\n\n      case 58:\n        //  :\n        return new Token(TokenKind.COLON, pos, pos + 1, _line, _col, prev);\n\n      case 61:\n        //  =\n        return new Token(TokenKind.EQUALS, pos, pos + 1, _line, _col, prev);\n\n      case 64:\n        //  @\n        return new Token(TokenKind.AT, pos, pos + 1, _line, _col, prev);\n\n      case 91:\n        //  [\n        return new Token(TokenKind.BRACKET_L, pos, pos + 1, _line, _col, prev);\n\n      case 93:\n        //  ]\n        return new Token(TokenKind.BRACKET_R, pos, pos + 1, _line, _col, prev);\n\n      case 123:\n        // {\n        return new Token(TokenKind.BRACE_L, pos, pos + 1, _line, _col, prev);\n\n      case 124:\n        // |\n        return new Token(TokenKind.PIPE, pos, pos + 1, _line, _col, prev);\n\n      case 125:\n        // }\n        return new Token(TokenKind.BRACE_R, pos, pos + 1, _line, _col, prev);\n\n      case 34:\n        //  \"\n        if (body.charCodeAt(pos + 1) === 34 && body.charCodeAt(pos + 2) === 34) {\n          return readBlockString(source, pos, _line, _col, prev, lexer);\n        }\n\n        return readString(source, pos, _line, _col, prev);\n\n      case 45: //  -\n\n      case 48: //  0\n\n      case 49: //  1\n\n      case 50: //  2\n\n      case 51: //  3\n\n      case 52: //  4\n\n      case 53: //  5\n\n      case 54: //  6\n\n      case 55: //  7\n\n      case 56: //  8\n\n      case 57:\n        //  9\n        return readNumber(source, pos, code, _line, _col, prev);\n\n      case 65: //  A\n\n      case 66: //  B\n\n      case 67: //  C\n\n      case 68: //  D\n\n      case 69: //  E\n\n      case 70: //  F\n\n      case 71: //  G\n\n      case 72: //  H\n\n      case 73: //  I\n\n      case 74: //  J\n\n      case 75: //  K\n\n      case 76: //  L\n\n      case 77: //  M\n\n      case 78: //  N\n\n      case 79: //  O\n\n      case 80: //  P\n\n      case 81: //  Q\n\n      case 82: //  R\n\n      case 83: //  S\n\n      case 84: //  T\n\n      case 85: //  U\n\n      case 86: //  V\n\n      case 87: //  W\n\n      case 88: //  X\n\n      case 89: //  Y\n\n      case 90: //  Z\n\n      case 95: //  _\n\n      case 97: //  a\n\n      case 98: //  b\n\n      case 99: //  c\n\n      case 100: // d\n\n      case 101: // e\n\n      case 102: // f\n\n      case 103: // g\n\n      case 104: // h\n\n      case 105: // i\n\n      case 106: // j\n\n      case 107: // k\n\n      case 108: // l\n\n      case 109: // m\n\n      case 110: // n\n\n      case 111: // o\n\n      case 112: // p\n\n      case 113: // q\n\n      case 114: // r\n\n      case 115: // s\n\n      case 116: // t\n\n      case 117: // u\n\n      case 118: // v\n\n      case 119: // w\n\n      case 120: // x\n\n      case 121: // y\n\n      case 122:\n        // z\n        return readName(source, pos, _line, _col, prev);\n    }\n\n    throw syntaxError(source, pos, unexpectedCharacterMessage(code));\n  }\n\n  var line = lexer.line;\n  var col = 1 + pos - lexer.lineStart;\n  return new Token(TokenKind.EOF, bodyLength, bodyLength, line, col, prev);\n}\n/**\n * Report a message that an unexpected character was encountered.\n */\n\n\nfunction unexpectedCharacterMessage(code) {\n  if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n    return \"Cannot contain the invalid character \".concat(printCharCode(code), \".\");\n  }\n\n  if (code === 39) {\n    // '\n    return 'Unexpected single quote character (\\'), did you mean to use a double quote (\")?';\n  }\n\n  return \"Cannot parse the unexpected character \".concat(printCharCode(code), \".\");\n}\n/**\n * Reads a comment token from the source file.\n *\n * #[\\u0009\\u0020-\\uFFFF]*\n */\n\n\nfunction readComment(source, start, line, col, prev) {\n  var body = source.body;\n  var code;\n  var position = start;\n\n  do {\n    code = body.charCodeAt(++position);\n  } while (!isNaN(code) && ( // SourceCharacter but not LineTerminator\n  code > 0x001f || code === 0x0009));\n\n  return new Token(TokenKind.COMMENT, start, position, line, col, prev, body.slice(start + 1, position));\n}\n/**\n * Reads a number token from the source file, either a float\n * or an int depending on whether a decimal point appears.\n *\n * Int:   -?(0|[1-9][0-9]*)\n * Float: -?(0|[1-9][0-9]*)(\\.[0-9]+)?((E|e)(+|-)?[0-9]+)?\n */\n\n\nfunction readNumber(source, start, firstCode, line, col, prev) {\n  var body = source.body;\n  var code = firstCode;\n  var position = start;\n  var isFloat = false;\n\n  if (code === 45) {\n    // -\n    code = body.charCodeAt(++position);\n  }\n\n  if (code === 48) {\n    // 0\n    code = body.charCodeAt(++position);\n\n    if (code >= 48 && code <= 57) {\n      throw syntaxError(source, position, \"Invalid number, unexpected digit after 0: \".concat(printCharCode(code), \".\"));\n    }\n  } else {\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 46) {\n    // .\n    isFloat = true;\n    code = body.charCodeAt(++position);\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  }\n\n  if (code === 69 || code === 101) {\n    // E e\n    isFloat = true;\n    code = body.charCodeAt(++position);\n\n    if (code === 43 || code === 45) {\n      // + -\n      code = body.charCodeAt(++position);\n    }\n\n    position = readDigits(source, position, code);\n    code = body.charCodeAt(position);\n  } // Numbers cannot be followed by . or NameStart\n\n\n  if (code === 46 || isNameStart(code)) {\n    throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n  }\n\n  return new Token(isFloat ? TokenKind.FLOAT : TokenKind.INT, start, position, line, col, prev, body.slice(start, position));\n}\n/**\n * Returns the new position in the source after reading digits.\n */\n\n\nfunction readDigits(source, start, firstCode) {\n  var body = source.body;\n  var position = start;\n  var code = firstCode;\n\n  if (code >= 48 && code <= 57) {\n    // 0 - 9\n    do {\n      code = body.charCodeAt(++position);\n    } while (code >= 48 && code <= 57); // 0 - 9\n\n\n    return position;\n  }\n\n  throw syntaxError(source, position, \"Invalid number, expected digit but got: \".concat(printCharCode(code), \".\"));\n}\n/**\n * Reads a string token from the source file.\n *\n * \"([^\"\\\\\\u000A\\u000D]|(\\\\(u[0-9a-fA-F]{4}|[\"\\\\/bfnrt])))*\"\n */\n\n\nfunction readString(source, start, line, col, prev) {\n  var body = source.body;\n  var position = start + 1;\n  var chunkStart = position;\n  var code = 0;\n  var value = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position)) && // not LineTerminator\n  code !== 0x000a && code !== 0x000d) {\n    // Closing Quote (\")\n    if (code === 34) {\n      value += body.slice(chunkStart, position);\n      return new Token(TokenKind.STRING, start, position + 1, line, col, prev, value);\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    ++position;\n\n    if (code === 92) {\n      // \\\n      value += body.slice(chunkStart, position - 1);\n      code = body.charCodeAt(position);\n\n      switch (code) {\n        case 34:\n          value += '\"';\n          break;\n\n        case 47:\n          value += '/';\n          break;\n\n        case 92:\n          value += '\\\\';\n          break;\n\n        case 98:\n          value += '\\b';\n          break;\n\n        case 102:\n          value += '\\f';\n          break;\n\n        case 110:\n          value += '\\n';\n          break;\n\n        case 114:\n          value += '\\r';\n          break;\n\n        case 116:\n          value += '\\t';\n          break;\n\n        case 117:\n          {\n            // uXXXX\n            var charCode = uniCharCode(body.charCodeAt(position + 1), body.charCodeAt(position + 2), body.charCodeAt(position + 3), body.charCodeAt(position + 4));\n\n            if (charCode < 0) {\n              var invalidSequence = body.slice(position + 1, position + 5);\n              throw syntaxError(source, position, \"Invalid character escape sequence: \\\\u\".concat(invalidSequence, \".\"));\n            }\n\n            value += String.fromCharCode(charCode);\n            position += 4;\n            break;\n          }\n\n        default:\n          throw syntaxError(source, position, \"Invalid character escape sequence: \\\\\".concat(String.fromCharCode(code), \".\"));\n      }\n\n      ++position;\n      chunkStart = position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Reads a block string token from the source file.\n *\n * \"\"\"(\"?\"?(\\\\\"\"\"|\\\\(?!=\"\"\")|[^\"\\\\]))*\"\"\"\n */\n\n\nfunction readBlockString(source, start, line, col, prev, lexer) {\n  var body = source.body;\n  var position = start + 3;\n  var chunkStart = position;\n  var code = 0;\n  var rawValue = '';\n\n  while (position < body.length && !isNaN(code = body.charCodeAt(position))) {\n    // Closing Triple-Quote (\"\"\")\n    if (code === 34 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34) {\n      rawValue += body.slice(chunkStart, position);\n      return new Token(TokenKind.BLOCK_STRING, start, position + 3, line, col, prev, dedentBlockStringValue(rawValue));\n    } // SourceCharacter\n\n\n    if (code < 0x0020 && code !== 0x0009 && code !== 0x000a && code !== 0x000d) {\n      throw syntaxError(source, position, \"Invalid character within String: \".concat(printCharCode(code), \".\"));\n    }\n\n    if (code === 10) {\n      // new line\n      ++position;\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if (code === 13) {\n      // carriage return\n      if (body.charCodeAt(position + 1) === 10) {\n        position += 2;\n      } else {\n        ++position;\n      }\n\n      ++lexer.line;\n      lexer.lineStart = position;\n    } else if ( // Escape Triple-Quote (\\\"\"\")\n    code === 92 && body.charCodeAt(position + 1) === 34 && body.charCodeAt(position + 2) === 34 && body.charCodeAt(position + 3) === 34) {\n      rawValue += body.slice(chunkStart, position) + '\"\"\"';\n      position += 4;\n      chunkStart = position;\n    } else {\n      ++position;\n    }\n  }\n\n  throw syntaxError(source, position, 'Unterminated string.');\n}\n/**\n * Converts four hexadecimal chars to the integer that the\n * string represents. For example, uniCharCode('0','0','0','f')\n * will return 15, and uniCharCode('0','0','f','f') returns 255.\n *\n * Returns a negative number on error, if a char was invalid.\n *\n * This is implemented by noting that char2hex() returns -1 on error,\n * which means the result of ORing the char2hex() will also be negative.\n */\n\n\nfunction uniCharCode(a, b, c, d) {\n  return char2hex(a) << 12 | char2hex(b) << 8 | char2hex(c) << 4 | char2hex(d);\n}\n/**\n * Converts a hex character to its integer value.\n * '0' becomes 0, '9' becomes 9\n * 'A' becomes 10, 'F' becomes 15\n * 'a' becomes 10, 'f' becomes 15\n *\n * Returns -1 on error.\n */\n\n\nfunction char2hex(a) {\n  return a >= 48 && a <= 57 ? a - 48 // 0-9\n  : a >= 65 && a <= 70 ? a - 55 // A-F\n  : a >= 97 && a <= 102 ? a - 87 // a-f\n  : -1;\n}\n/**\n * Reads an alphanumeric + underscore name from the source.\n *\n * [_A-Za-z][_0-9A-Za-z]*\n */\n\n\nfunction readName(source, start, line, col, prev) {\n  var body = source.body;\n  var bodyLength = body.length;\n  var position = start + 1;\n  var code = 0;\n\n  while (position !== bodyLength && !isNaN(code = body.charCodeAt(position)) && (code === 95 || // _\n  code >= 48 && code <= 57 || // 0-9\n  code >= 65 && code <= 90 || // A-Z\n  code >= 97 && code <= 122) // a-z\n  ) {\n    ++position;\n  }\n\n  return new Token(TokenKind.NAME, start, position, line, col, prev, body.slice(start, position));\n} // _ A-Z a-z\n\n\nfunction isNameStart(code) {\n  return code === 95 || code >= 65 && code <= 90 || code >= 97 && code <= 122;\n}\n", "import { syntaxError } from \"../error/syntaxError.mjs\";\nimport { Kind } from \"./kinds.mjs\";\nimport { Location } from \"./ast.mjs\";\nimport { TokenKind } from \"./tokenKind.mjs\";\nimport { Source, isSource } from \"./source.mjs\";\nimport { DirectiveLocation } from \"./directiveLocation.mjs\";\nimport { Lexer, isPunctuatorTokenKind } from \"./lexer.mjs\";\n/**\n * Configuration options to control parser behavior\n */\n\n/**\n * Given a GraphQL source, parses it into a Document.\n * Throws GraphQLError if a syntax error is encountered.\n */\nexport function parse(source, options) {\n  var parser = new Parser(source, options);\n  return parser.parseDocument();\n}\n/**\n * Given a string containing a GraphQL value (ex. `[42]`), parse the AST for\n * that value.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Values directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: valueFromAST().\n */\n\nexport function parseValue(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var value = parser.parseValueLiteral(false);\n  parser.expectToken(TokenKind.EOF);\n  return value;\n}\n/**\n * Given a string containing a GraphQL Type (ex. `[Int!]`), parse the AST for\n * that type.\n * Throws GraphQLError if a syntax error is encountered.\n *\n * This is useful within tools that operate upon GraphQL Types directly and\n * in isolation of complete GraphQL documents.\n *\n * Consider providing the results to the utility function: typeFromAST().\n */\n\nexport function parseType(source, options) {\n  var parser = new Parser(source, options);\n  parser.expectToken(TokenKind.SOF);\n  var type = parser.parseTypeReference();\n  parser.expectToken(TokenKind.EOF);\n  return type;\n}\n/**\n * This class is exported only to assist people in implementing their own parsers\n * without duplicating too much code and should be used only as last resort for cases\n * such as experimental syntax or if certain features could not be contributed upstream.\n *\n * It is still part of the internal API and is versioned, so any changes to it are never\n * considered breaking changes. If you still need to support multiple versions of the\n * library, please use the `versionInfo` variable for version detection.\n *\n * @internal\n */\n\nexport var Parser = /*#__PURE__*/function () {\n  function Parser(source, options) {\n    var sourceObj = isSource(source) ? source : new Source(source);\n    this._lexer = new Lexer(sourceObj);\n    this._options = options;\n  }\n  /**\n   * Converts a name lex token into a name parse node.\n   */\n\n\n  var _proto = Parser.prototype;\n\n  _proto.parseName = function parseName() {\n    var token = this.expectToken(TokenKind.NAME);\n    return {\n      kind: Kind.NAME,\n      value: token.value,\n      loc: this.loc(token)\n    };\n  } // Implements the parsing rules in the Document section.\n\n  /**\n   * Document : Definition+\n   */\n  ;\n\n  _proto.parseDocument = function parseDocument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.DOCUMENT,\n      definitions: this.many(TokenKind.SOF, this.parseDefinition, TokenKind.EOF),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Definition :\n   *   - ExecutableDefinition\n   *   - TypeSystemDefinition\n   *   - TypeSystemExtension\n   *\n   * ExecutableDefinition :\n   *   - OperationDefinition\n   *   - FragmentDefinition\n   */\n  ;\n\n  _proto.parseDefinition = function parseDefinition() {\n    if (this.peek(TokenKind.NAME)) {\n      switch (this._lexer.token.value) {\n        case 'query':\n        case 'mutation':\n        case 'subscription':\n          return this.parseOperationDefinition();\n\n        case 'fragment':\n          return this.parseFragmentDefinition();\n\n        case 'schema':\n        case 'scalar':\n        case 'type':\n        case 'interface':\n        case 'union':\n        case 'enum':\n        case 'input':\n        case 'directive':\n          return this.parseTypeSystemDefinition();\n\n        case 'extend':\n          return this.parseTypeSystemExtension();\n      }\n    } else if (this.peek(TokenKind.BRACE_L)) {\n      return this.parseOperationDefinition();\n    } else if (this.peekDescription()) {\n      return this.parseTypeSystemDefinition();\n    }\n\n    throw this.unexpected();\n  } // Implements the parsing rules in the Operations section.\n\n  /**\n   * OperationDefinition :\n   *  - SelectionSet\n   *  - OperationType Name? VariableDefinitions? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseOperationDefinition = function parseOperationDefinition() {\n    var start = this._lexer.token;\n\n    if (this.peek(TokenKind.BRACE_L)) {\n      return {\n        kind: Kind.OPERATION_DEFINITION,\n        operation: 'query',\n        name: undefined,\n        variableDefinitions: [],\n        directives: [],\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    var operation = this.parseOperationType();\n    var name;\n\n    if (this.peek(TokenKind.NAME)) {\n      name = this.parseName();\n    }\n\n    return {\n      kind: Kind.OPERATION_DEFINITION,\n      operation: operation,\n      name: name,\n      variableDefinitions: this.parseVariableDefinitions(),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationType : one of query mutation subscription\n   */\n  ;\n\n  _proto.parseOperationType = function parseOperationType() {\n    var operationToken = this.expectToken(TokenKind.NAME);\n\n    switch (operationToken.value) {\n      case 'query':\n        return 'query';\n\n      case 'mutation':\n        return 'mutation';\n\n      case 'subscription':\n        return 'subscription';\n    }\n\n    throw this.unexpected(operationToken);\n  }\n  /**\n   * VariableDefinitions : ( VariableDefinition+ )\n   */\n  ;\n\n  _proto.parseVariableDefinitions = function parseVariableDefinitions() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseVariableDefinition, TokenKind.PAREN_R);\n  }\n  /**\n   * VariableDefinition : Variable : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseVariableDefinition = function parseVariableDefinition() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.VARIABLE_DEFINITION,\n      variable: this.parseVariable(),\n      type: (this.expectToken(TokenKind.COLON), this.parseTypeReference()),\n      defaultValue: this.expectOptionalToken(TokenKind.EQUALS) ? this.parseValueLiteral(true) : undefined,\n      directives: this.parseDirectives(true),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Variable : $ Name\n   */\n  ;\n\n  _proto.parseVariable = function parseVariable() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.DOLLAR);\n    return {\n      kind: Kind.VARIABLE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * SelectionSet : { Selection+ }\n   */\n  ;\n\n  _proto.parseSelectionSet = function parseSelectionSet() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.SELECTION_SET,\n      selections: this.many(TokenKind.BRACE_L, this.parseSelection, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Selection :\n   *   - Field\n   *   - FragmentSpread\n   *   - InlineFragment\n   */\n  ;\n\n  _proto.parseSelection = function parseSelection() {\n    return this.peek(TokenKind.SPREAD) ? this.parseFragment() : this.parseField();\n  }\n  /**\n   * Field : Alias? Name Arguments? Directives? SelectionSet?\n   *\n   * Alias : Name :\n   */\n  ;\n\n  _proto.parseField = function parseField() {\n    var start = this._lexer.token;\n    var nameOrAlias = this.parseName();\n    var alias;\n    var name;\n\n    if (this.expectOptionalToken(TokenKind.COLON)) {\n      alias = nameOrAlias;\n      name = this.parseName();\n    } else {\n      name = nameOrAlias;\n    }\n\n    return {\n      kind: Kind.FIELD,\n      alias: alias,\n      name: name,\n      arguments: this.parseArguments(false),\n      directives: this.parseDirectives(false),\n      selectionSet: this.peek(TokenKind.BRACE_L) ? this.parseSelectionSet() : undefined,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * Arguments[Const] : ( Argument[?Const]+ )\n   */\n  ;\n\n  _proto.parseArguments = function parseArguments(isConst) {\n    var item = isConst ? this.parseConstArgument : this.parseArgument;\n    return this.optionalMany(TokenKind.PAREN_L, item, TokenKind.PAREN_R);\n  }\n  /**\n   * Argument[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseArgument = function parseArgument() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.ARGUMENT,\n      name: name,\n      value: this.parseValueLiteral(false),\n      loc: this.loc(start)\n    };\n  };\n\n  _proto.parseConstArgument = function parseConstArgument() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.ARGUMENT,\n      name: this.parseName(),\n      value: (this.expectToken(TokenKind.COLON), this.parseValueLiteral(true)),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Fragments section.\n\n  /**\n   * Corresponds to both FragmentSpread and InlineFragment in the spec.\n   *\n   * FragmentSpread : ... FragmentName Directives?\n   *\n   * InlineFragment : ... TypeCondition? Directives? SelectionSet\n   */\n  ;\n\n  _proto.parseFragment = function parseFragment() {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.SPREAD);\n    var hasTypeCondition = this.expectOptionalKeyword('on');\n\n    if (!hasTypeCondition && this.peek(TokenKind.NAME)) {\n      return {\n        kind: Kind.FRAGMENT_SPREAD,\n        name: this.parseFragmentName(),\n        directives: this.parseDirectives(false),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.INLINE_FRAGMENT,\n      typeCondition: hasTypeCondition ? this.parseNamedType() : undefined,\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentDefinition :\n   *   - fragment FragmentName on TypeCondition Directives? SelectionSet\n   *\n   * TypeCondition : NamedType\n   */\n  ;\n\n  _proto.parseFragmentDefinition = function parseFragmentDefinition() {\n    var _this$_options;\n\n    var start = this._lexer.token;\n    this.expectKeyword('fragment'); // Experimental support for defining variables within fragments changes\n    // the grammar of FragmentDefinition:\n    //   - fragment FragmentName VariableDefinitions? on TypeCondition Directives? SelectionSet\n\n    if (((_this$_options = this._options) === null || _this$_options === void 0 ? void 0 : _this$_options.experimentalFragmentVariables) === true) {\n      return {\n        kind: Kind.FRAGMENT_DEFINITION,\n        name: this.parseFragmentName(),\n        variableDefinitions: this.parseVariableDefinitions(),\n        typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n        directives: this.parseDirectives(false),\n        selectionSet: this.parseSelectionSet(),\n        loc: this.loc(start)\n      };\n    }\n\n    return {\n      kind: Kind.FRAGMENT_DEFINITION,\n      name: this.parseFragmentName(),\n      typeCondition: (this.expectKeyword('on'), this.parseNamedType()),\n      directives: this.parseDirectives(false),\n      selectionSet: this.parseSelectionSet(),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * FragmentName : Name but not `on`\n   */\n  ;\n\n  _proto.parseFragmentName = function parseFragmentName() {\n    if (this._lexer.token.value === 'on') {\n      throw this.unexpected();\n    }\n\n    return this.parseName();\n  } // Implements the parsing rules in the Values section.\n\n  /**\n   * Value[Const] :\n   *   - [~Const] Variable\n   *   - IntValue\n   *   - FloatValue\n   *   - StringValue\n   *   - BooleanValue\n   *   - NullValue\n   *   - EnumValue\n   *   - ListValue[?Const]\n   *   - ObjectValue[?Const]\n   *\n   * BooleanValue : one of `true` `false`\n   *\n   * NullValue : `null`\n   *\n   * EnumValue : Name but not `true`, `false` or `null`\n   */\n  ;\n\n  _proto.parseValueLiteral = function parseValueLiteral(isConst) {\n    var token = this._lexer.token;\n\n    switch (token.kind) {\n      case TokenKind.BRACKET_L:\n        return this.parseList(isConst);\n\n      case TokenKind.BRACE_L:\n        return this.parseObject(isConst);\n\n      case TokenKind.INT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.INT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.FLOAT:\n        this._lexer.advance();\n\n        return {\n          kind: Kind.FLOAT,\n          value: token.value,\n          loc: this.loc(token)\n        };\n\n      case TokenKind.STRING:\n      case TokenKind.BLOCK_STRING:\n        return this.parseStringLiteral();\n\n      case TokenKind.NAME:\n        this._lexer.advance();\n\n        switch (token.value) {\n          case 'true':\n            return {\n              kind: Kind.BOOLEAN,\n              value: true,\n              loc: this.loc(token)\n            };\n\n          case 'false':\n            return {\n              kind: Kind.BOOLEAN,\n              value: false,\n              loc: this.loc(token)\n            };\n\n          case 'null':\n            return {\n              kind: Kind.NULL,\n              loc: this.loc(token)\n            };\n\n          default:\n            return {\n              kind: Kind.ENUM,\n              value: token.value,\n              loc: this.loc(token)\n            };\n        }\n\n      case TokenKind.DOLLAR:\n        if (!isConst) {\n          return this.parseVariable();\n        }\n\n        break;\n    }\n\n    throw this.unexpected();\n  };\n\n  _proto.parseStringLiteral = function parseStringLiteral() {\n    var token = this._lexer.token;\n\n    this._lexer.advance();\n\n    return {\n      kind: Kind.STRING,\n      value: token.value,\n      block: token.kind === TokenKind.BLOCK_STRING,\n      loc: this.loc(token)\n    };\n  }\n  /**\n   * ListValue[Const] :\n   *   - [ ]\n   *   - [ Value[?Const]+ ]\n   */\n  ;\n\n  _proto.parseList = function parseList(isConst) {\n    var _this = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this.parseValueLiteral(isConst);\n    };\n\n    return {\n      kind: Kind.LIST,\n      values: this.any(TokenKind.BRACKET_L, item, TokenKind.BRACKET_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectValue[Const] :\n   *   - { }\n   *   - { ObjectField[?Const]+ }\n   */\n  ;\n\n  _proto.parseObject = function parseObject(isConst) {\n    var _this2 = this;\n\n    var start = this._lexer.token;\n\n    var item = function item() {\n      return _this2.parseObjectField(isConst);\n    };\n\n    return {\n      kind: Kind.OBJECT,\n      fields: this.any(TokenKind.BRACE_L, item, TokenKind.BRACE_R),\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectField[Const] : Name : Value[?Const]\n   */\n  ;\n\n  _proto.parseObjectField = function parseObjectField(isConst) {\n    var start = this._lexer.token;\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    return {\n      kind: Kind.OBJECT_FIELD,\n      name: name,\n      value: this.parseValueLiteral(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Directives section.\n\n  /**\n   * Directives[Const] : Directive[?Const]+\n   */\n  ;\n\n  _proto.parseDirectives = function parseDirectives(isConst) {\n    var directives = [];\n\n    while (this.peek(TokenKind.AT)) {\n      directives.push(this.parseDirective(isConst));\n    }\n\n    return directives;\n  }\n  /**\n   * Directive[Const] : @ Name Arguments[?Const]?\n   */\n  ;\n\n  _proto.parseDirective = function parseDirective(isConst) {\n    var start = this._lexer.token;\n    this.expectToken(TokenKind.AT);\n    return {\n      kind: Kind.DIRECTIVE,\n      name: this.parseName(),\n      arguments: this.parseArguments(isConst),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Types section.\n\n  /**\n   * Type :\n   *   - NamedType\n   *   - ListType\n   *   - NonNullType\n   */\n  ;\n\n  _proto.parseTypeReference = function parseTypeReference() {\n    var start = this._lexer.token;\n    var type;\n\n    if (this.expectOptionalToken(TokenKind.BRACKET_L)) {\n      type = this.parseTypeReference();\n      this.expectToken(TokenKind.BRACKET_R);\n      type = {\n        kind: Kind.LIST_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    } else {\n      type = this.parseNamedType();\n    }\n\n    if (this.expectOptionalToken(TokenKind.BANG)) {\n      return {\n        kind: Kind.NON_NULL_TYPE,\n        type: type,\n        loc: this.loc(start)\n      };\n    }\n\n    return type;\n  }\n  /**\n   * NamedType : Name\n   */\n  ;\n\n  _proto.parseNamedType = function parseNamedType() {\n    var start = this._lexer.token;\n    return {\n      kind: Kind.NAMED_TYPE,\n      name: this.parseName(),\n      loc: this.loc(start)\n    };\n  } // Implements the parsing rules in the Type Definition section.\n\n  /**\n   * TypeSystemDefinition :\n   *   - SchemaDefinition\n   *   - TypeDefinition\n   *   - DirectiveDefinition\n   *\n   * TypeDefinition :\n   *   - ScalarTypeDefinition\n   *   - ObjectTypeDefinition\n   *   - InterfaceTypeDefinition\n   *   - UnionTypeDefinition\n   *   - EnumTypeDefinition\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemDefinition = function parseTypeSystemDefinition() {\n    // Many definitions begin with a description and require a lookahead.\n    var keywordToken = this.peekDescription() ? this._lexer.lookahead() : this._lexer.token;\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaDefinition();\n\n        case 'scalar':\n          return this.parseScalarTypeDefinition();\n\n        case 'type':\n          return this.parseObjectTypeDefinition();\n\n        case 'interface':\n          return this.parseInterfaceTypeDefinition();\n\n        case 'union':\n          return this.parseUnionTypeDefinition();\n\n        case 'enum':\n          return this.parseEnumTypeDefinition();\n\n        case 'input':\n          return this.parseInputObjectTypeDefinition();\n\n        case 'directive':\n          return this.parseDirectiveDefinition();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  };\n\n  _proto.peekDescription = function peekDescription() {\n    return this.peek(TokenKind.STRING) || this.peek(TokenKind.BLOCK_STRING);\n  }\n  /**\n   * Description : StringValue\n   */\n  ;\n\n  _proto.parseDescription = function parseDescription() {\n    if (this.peekDescription()) {\n      return this.parseStringLiteral();\n    }\n  }\n  /**\n   * SchemaDefinition : Description? schema Directives[Const]? { OperationTypeDefinition+ }\n   */\n  ;\n\n  _proto.parseSchemaDefinition = function parseSchemaDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.many(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n    return {\n      kind: Kind.SCHEMA_DEFINITION,\n      description: description,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * OperationTypeDefinition : OperationType : NamedType\n   */\n  ;\n\n  _proto.parseOperationTypeDefinition = function parseOperationTypeDefinition() {\n    var start = this._lexer.token;\n    var operation = this.parseOperationType();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseNamedType();\n    return {\n      kind: Kind.OPERATION_TYPE_DEFINITION,\n      operation: operation,\n      type: type,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeDefinition : Description? scalar Name Directives[Const]?\n   */\n  ;\n\n  _proto.parseScalarTypeDefinition = function parseScalarTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.SCALAR_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeDefinition :\n   *   Description?\n   *   type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseObjectTypeDefinition = function parseObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ImplementsInterfaces :\n   *   - implements `&`? NamedType\n   *   - ImplementsInterfaces & NamedType\n   */\n  ;\n\n  _proto.parseImplementsInterfaces = function parseImplementsInterfaces() {\n    var _this$_options2;\n\n    if (!this.expectOptionalKeyword('implements')) {\n      return [];\n    }\n\n    if (((_this$_options2 = this._options) === null || _this$_options2 === void 0 ? void 0 : _this$_options2.allowLegacySDLImplementsInterfaces) === true) {\n      var types = []; // Optional leading ampersand\n\n      this.expectOptionalToken(TokenKind.AMP);\n\n      do {\n        types.push(this.parseNamedType());\n      } while (this.expectOptionalToken(TokenKind.AMP) || this.peek(TokenKind.NAME));\n\n      return types;\n    }\n\n    return this.delimitedMany(TokenKind.AMP, this.parseNamedType);\n  }\n  /**\n   * FieldsDefinition : { FieldDefinition+ }\n   */\n  ;\n\n  _proto.parseFieldsDefinition = function parseFieldsDefinition() {\n    var _this$_options3;\n\n    // Legacy support for the SDL?\n    if (((_this$_options3 = this._options) === null || _this$_options3 === void 0 ? void 0 : _this$_options3.allowLegacySDLEmptyFields) === true && this.peek(TokenKind.BRACE_L) && this._lexer.lookahead().kind === TokenKind.BRACE_R) {\n      this._lexer.advance();\n\n      this._lexer.advance();\n\n      return [];\n    }\n\n    return this.optionalMany(TokenKind.BRACE_L, this.parseFieldDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * FieldDefinition :\n   *   - Description? Name ArgumentsDefinition? : Type Directives[Const]?\n   */\n  ;\n\n  _proto.parseFieldDefinition = function parseFieldDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.FIELD_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      type: type,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ArgumentsDefinition : ( InputValueDefinition+ )\n   */\n  ;\n\n  _proto.parseArgumentDefs = function parseArgumentDefs() {\n    return this.optionalMany(TokenKind.PAREN_L, this.parseInputValueDef, TokenKind.PAREN_R);\n  }\n  /**\n   * InputValueDefinition :\n   *   - Description? Name : Type DefaultValue? Directives[Const]?\n   */\n  ;\n\n  _proto.parseInputValueDef = function parseInputValueDef() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    this.expectToken(TokenKind.COLON);\n    var type = this.parseTypeReference();\n    var defaultValue;\n\n    if (this.expectOptionalToken(TokenKind.EQUALS)) {\n      defaultValue = this.parseValueLiteral(true);\n    }\n\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.INPUT_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      type: type,\n      defaultValue: defaultValue,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeDefinition :\n   *   - Description? interface Name Directives[Const]? FieldsDefinition?\n   */\n  ;\n\n  _proto.parseInterfaceTypeDefinition = function parseInterfaceTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n    return {\n      kind: Kind.INTERFACE_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeDefinition :\n   *   - Description? union Name Directives[Const]? UnionMemberTypes?\n   */\n  ;\n\n  _proto.parseUnionTypeDefinition = function parseUnionTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n    return {\n      kind: Kind.UNION_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionMemberTypes :\n   *   - = `|`? NamedType\n   *   - UnionMemberTypes | NamedType\n   */\n  ;\n\n  _proto.parseUnionMemberTypes = function parseUnionMemberTypes() {\n    return this.expectOptionalToken(TokenKind.EQUALS) ? this.delimitedMany(TokenKind.PIPE, this.parseNamedType) : [];\n  }\n  /**\n   * EnumTypeDefinition :\n   *   - Description? enum Name Directives[Const]? EnumValuesDefinition?\n   */\n  ;\n\n  _proto.parseEnumTypeDefinition = function parseEnumTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n    return {\n      kind: Kind.ENUM_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumValuesDefinition : { EnumValueDefinition+ }\n   */\n  ;\n\n  _proto.parseEnumValuesDefinition = function parseEnumValuesDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseEnumValueDefinition, TokenKind.BRACE_R);\n  }\n  /**\n   * EnumValueDefinition : Description? EnumValue Directives[Const]?\n   *\n   * EnumValue : Name\n   */\n  ;\n\n  _proto.parseEnumValueDefinition = function parseEnumValueDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    return {\n      kind: Kind.ENUM_VALUE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeDefinition :\n   *   - Description? input Name Directives[Const]? InputFieldsDefinition?\n   */\n  ;\n\n  _proto.parseInputObjectTypeDefinition = function parseInputObjectTypeDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_DEFINITION,\n      description: description,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputFieldsDefinition : { InputValueDefinition+ }\n   */\n  ;\n\n  _proto.parseInputFieldsDefinition = function parseInputFieldsDefinition() {\n    return this.optionalMany(TokenKind.BRACE_L, this.parseInputValueDef, TokenKind.BRACE_R);\n  }\n  /**\n   * TypeSystemExtension :\n   *   - SchemaExtension\n   *   - TypeExtension\n   *\n   * TypeExtension :\n   *   - ScalarTypeExtension\n   *   - ObjectTypeExtension\n   *   - InterfaceTypeExtension\n   *   - UnionTypeExtension\n   *   - EnumTypeExtension\n   *   - InputObjectTypeDefinition\n   */\n  ;\n\n  _proto.parseTypeSystemExtension = function parseTypeSystemExtension() {\n    var keywordToken = this._lexer.lookahead();\n\n    if (keywordToken.kind === TokenKind.NAME) {\n      switch (keywordToken.value) {\n        case 'schema':\n          return this.parseSchemaExtension();\n\n        case 'scalar':\n          return this.parseScalarTypeExtension();\n\n        case 'type':\n          return this.parseObjectTypeExtension();\n\n        case 'interface':\n          return this.parseInterfaceTypeExtension();\n\n        case 'union':\n          return this.parseUnionTypeExtension();\n\n        case 'enum':\n          return this.parseEnumTypeExtension();\n\n        case 'input':\n          return this.parseInputObjectTypeExtension();\n      }\n    }\n\n    throw this.unexpected(keywordToken);\n  }\n  /**\n   * SchemaExtension :\n   *  - extend schema Directives[Const]? { OperationTypeDefinition+ }\n   *  - extend schema Directives[Const]\n   */\n  ;\n\n  _proto.parseSchemaExtension = function parseSchemaExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('schema');\n    var directives = this.parseDirectives(true);\n    var operationTypes = this.optionalMany(TokenKind.BRACE_L, this.parseOperationTypeDefinition, TokenKind.BRACE_R);\n\n    if (directives.length === 0 && operationTypes.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCHEMA_EXTENSION,\n      directives: directives,\n      operationTypes: operationTypes,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ScalarTypeExtension :\n   *   - extend scalar Name Directives[Const]\n   */\n  ;\n\n  _proto.parseScalarTypeExtension = function parseScalarTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('scalar');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n\n    if (directives.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.SCALAR_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * ObjectTypeExtension :\n   *  - extend type Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend type Name ImplementsInterfaces? Directives[Const]\n   *  - extend type Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseObjectTypeExtension = function parseObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('type');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.OBJECT_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InterfaceTypeExtension :\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]? FieldsDefinition\n   *  - extend interface Name ImplementsInterfaces? Directives[Const]\n   *  - extend interface Name ImplementsInterfaces\n   */\n  ;\n\n  _proto.parseInterfaceTypeExtension = function parseInterfaceTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('interface');\n    var name = this.parseName();\n    var interfaces = this.parseImplementsInterfaces();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseFieldsDefinition();\n\n    if (interfaces.length === 0 && directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INTERFACE_TYPE_EXTENSION,\n      name: name,\n      interfaces: interfaces,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * UnionTypeExtension :\n   *   - extend union Name Directives[Const]? UnionMemberTypes\n   *   - extend union Name Directives[Const]\n   */\n  ;\n\n  _proto.parseUnionTypeExtension = function parseUnionTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('union');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var types = this.parseUnionMemberTypes();\n\n    if (directives.length === 0 && types.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.UNION_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      types: types,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * EnumTypeExtension :\n   *   - extend enum Name Directives[Const]? EnumValuesDefinition\n   *   - extend enum Name Directives[Const]\n   */\n  ;\n\n  _proto.parseEnumTypeExtension = function parseEnumTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('enum');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var values = this.parseEnumValuesDefinition();\n\n    if (directives.length === 0 && values.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.ENUM_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      values: values,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * InputObjectTypeExtension :\n   *   - extend input Name Directives[Const]? InputFieldsDefinition\n   *   - extend input Name Directives[Const]\n   */\n  ;\n\n  _proto.parseInputObjectTypeExtension = function parseInputObjectTypeExtension() {\n    var start = this._lexer.token;\n    this.expectKeyword('extend');\n    this.expectKeyword('input');\n    var name = this.parseName();\n    var directives = this.parseDirectives(true);\n    var fields = this.parseInputFieldsDefinition();\n\n    if (directives.length === 0 && fields.length === 0) {\n      throw this.unexpected();\n    }\n\n    return {\n      kind: Kind.INPUT_OBJECT_TYPE_EXTENSION,\n      name: name,\n      directives: directives,\n      fields: fields,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveDefinition :\n   *   - Description? directive @ Name ArgumentsDefinition? `repeatable`? on DirectiveLocations\n   */\n  ;\n\n  _proto.parseDirectiveDefinition = function parseDirectiveDefinition() {\n    var start = this._lexer.token;\n    var description = this.parseDescription();\n    this.expectKeyword('directive');\n    this.expectToken(TokenKind.AT);\n    var name = this.parseName();\n    var args = this.parseArgumentDefs();\n    var repeatable = this.expectOptionalKeyword('repeatable');\n    this.expectKeyword('on');\n    var locations = this.parseDirectiveLocations();\n    return {\n      kind: Kind.DIRECTIVE_DEFINITION,\n      description: description,\n      name: name,\n      arguments: args,\n      repeatable: repeatable,\n      locations: locations,\n      loc: this.loc(start)\n    };\n  }\n  /**\n   * DirectiveLocations :\n   *   - `|`? DirectiveLocation\n   *   - DirectiveLocations | DirectiveLocation\n   */\n  ;\n\n  _proto.parseDirectiveLocations = function parseDirectiveLocations() {\n    return this.delimitedMany(TokenKind.PIPE, this.parseDirectiveLocation);\n  }\n  /*\n   * DirectiveLocation :\n   *   - ExecutableDirectiveLocation\n   *   - TypeSystemDirectiveLocation\n   *\n   * ExecutableDirectiveLocation : one of\n   *   `QUERY`\n   *   `MUTATION`\n   *   `SUBSCRIPTION`\n   *   `FIELD`\n   *   `FRAGMENT_DEFINITION`\n   *   `FRAGMENT_SPREAD`\n   *   `INLINE_FRAGMENT`\n   *\n   * TypeSystemDirectiveLocation : one of\n   *   `SCHEMA`\n   *   `SCALAR`\n   *   `OBJECT`\n   *   `FIELD_DEFINITION`\n   *   `ARGUMENT_DEFINITION`\n   *   `INTERFACE`\n   *   `UNION`\n   *   `ENUM`\n   *   `ENUM_VALUE`\n   *   `INPUT_OBJECT`\n   *   `INPUT_FIELD_DEFINITION`\n   */\n  ;\n\n  _proto.parseDirectiveLocation = function parseDirectiveLocation() {\n    var start = this._lexer.token;\n    var name = this.parseName();\n\n    if (DirectiveLocation[name.value] !== undefined) {\n      return name;\n    }\n\n    throw this.unexpected(start);\n  } // Core parsing utility functions\n\n  /**\n   * Returns a location object, used to identify the place in the source that created a given parsed object.\n   */\n  ;\n\n  _proto.loc = function loc(startToken) {\n    var _this$_options4;\n\n    if (((_this$_options4 = this._options) === null || _this$_options4 === void 0 ? void 0 : _this$_options4.noLocation) !== true) {\n      return new Location(startToken, this._lexer.lastToken, this._lexer.source);\n    }\n  }\n  /**\n   * Determines if the next token is of a given kind\n   */\n  ;\n\n  _proto.peek = function peek(kind) {\n    return this._lexer.token.kind === kind;\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectToken = function expectToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    throw syntaxError(this._lexer.source, token.start, \"Expected \".concat(getTokenKindDesc(kind), \", found \").concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * If the next token is of the given kind, return that token after advancing the lexer.\n   * Otherwise, do not change the parser state and return undefined.\n   */\n  ;\n\n  _proto.expectOptionalToken = function expectOptionalToken(kind) {\n    var token = this._lexer.token;\n\n    if (token.kind === kind) {\n      this._lexer.advance();\n\n      return token;\n    }\n\n    return undefined;\n  }\n  /**\n   * If the next token is a given keyword, advance the lexer.\n   * Otherwise, do not change the parser state and throw an error.\n   */\n  ;\n\n  _proto.expectKeyword = function expectKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n    } else {\n      throw syntaxError(this._lexer.source, token.start, \"Expected \\\"\".concat(value, \"\\\", found \").concat(getTokenDesc(token), \".\"));\n    }\n  }\n  /**\n   * If the next token is a given keyword, return \"true\" after advancing the lexer.\n   * Otherwise, do not change the parser state and return \"false\".\n   */\n  ;\n\n  _proto.expectOptionalKeyword = function expectOptionalKeyword(value) {\n    var token = this._lexer.token;\n\n    if (token.kind === TokenKind.NAME && token.value === value) {\n      this._lexer.advance();\n\n      return true;\n    }\n\n    return false;\n  }\n  /**\n   * Helper function for creating an error when an unexpected lexed token is encountered.\n   */\n  ;\n\n  _proto.unexpected = function unexpected(atToken) {\n    var token = atToken !== null && atToken !== void 0 ? atToken : this._lexer.token;\n    return syntaxError(this._lexer.source, token.start, \"Unexpected \".concat(getTokenDesc(token), \".\"));\n  }\n  /**\n   * Returns a possibly empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.any = function any(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    while (!this.expectOptionalToken(closeKind)) {\n      nodes.push(parseFn.call(this));\n    }\n\n    return nodes;\n  }\n  /**\n   * Returns a list of parse nodes, determined by the parseFn.\n   * It can be empty only if open token is missing otherwise it will always return non-empty list\n   * that begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.optionalMany = function optionalMany(openKind, parseFn, closeKind) {\n    if (this.expectOptionalToken(openKind)) {\n      var nodes = [];\n\n      do {\n        nodes.push(parseFn.call(this));\n      } while (!this.expectOptionalToken(closeKind));\n\n      return nodes;\n    }\n\n    return [];\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list begins with a lex token of openKind and ends with a lex token of closeKind.\n   * Advances the parser to the next lex token after the closing token.\n   */\n  ;\n\n  _proto.many = function many(openKind, parseFn, closeKind) {\n    this.expectToken(openKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (!this.expectOptionalToken(closeKind));\n\n    return nodes;\n  }\n  /**\n   * Returns a non-empty list of parse nodes, determined by the parseFn.\n   * This list may begin with a lex token of delimiterKind followed by items separated by lex tokens of tokenKind.\n   * Advances the parser to the next lex token after last item in the list.\n   */\n  ;\n\n  _proto.delimitedMany = function delimitedMany(delimiterKind, parseFn) {\n    this.expectOptionalToken(delimiterKind);\n    var nodes = [];\n\n    do {\n      nodes.push(parseFn.call(this));\n    } while (this.expectOptionalToken(delimiterKind));\n\n    return nodes;\n  };\n\n  return Parser;\n}();\n/**\n * A helper function to describe a token as a string for debugging.\n */\n\nfunction getTokenDesc(token) {\n  var value = token.value;\n  return getTokenKindDesc(token.kind) + (value != null ? \" \\\"\".concat(value, \"\\\"\") : '');\n}\n/**\n * A helper function to describe a token kind as a string for debugging.\n */\n\n\nfunction getTokenKindDesc(kind) {\n  return isPunctuatorTokenKind(kind) ? \"\\\"\".concat(kind, \"\\\"\") : kind;\n}\n", "import inspect from \"../jsutils/inspect.mjs\";\nimport { isNode } from \"./ast.mjs\";\n/**\n * A visitor is provided to visit, it contains the collection of\n * relevant functions to be called during the visitor's traversal.\n */\n\nexport var QueryDocumentKeys = {\n  Name: [],\n  Document: ['definitions'],\n  OperationDefinition: ['name', 'variableDefinitions', 'directives', 'selectionSet'],\n  VariableDefinition: ['variable', 'type', 'defaultValue', 'directives'],\n  Variable: ['name'],\n  SelectionSet: ['selections'],\n  Field: ['alias', 'name', 'arguments', 'directives', 'selectionSet'],\n  Argument: ['name', 'value'],\n  FragmentSpread: ['name', 'directives'],\n  InlineFragment: ['typeCondition', 'directives', 'selectionSet'],\n  FragmentDefinition: ['name', // Note: fragment variable definitions are experimental and may be changed\n  // or removed in the future.\n  'variableDefinitions', 'typeCondition', 'directives', 'selectionSet'],\n  IntValue: [],\n  FloatValue: [],\n  StringValue: [],\n  BooleanValue: [],\n  NullValue: [],\n  EnumValue: [],\n  ListValue: ['values'],\n  ObjectValue: ['fields'],\n  ObjectField: ['name', 'value'],\n  Directive: ['name', 'arguments'],\n  NamedType: ['name'],\n  ListType: ['type'],\n  NonNullType: ['type'],\n  SchemaDefinition: ['description', 'directives', 'operationTypes'],\n  OperationTypeDefinition: ['type'],\n  ScalarTypeDefinition: ['description', 'name', 'directives'],\n  ObjectTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  FieldDefinition: ['description', 'name', 'arguments', 'type', 'directives'],\n  InputValueDefinition: ['description', 'name', 'type', 'defaultValue', 'directives'],\n  InterfaceTypeDefinition: ['description', 'name', 'interfaces', 'directives', 'fields'],\n  UnionTypeDefinition: ['description', 'name', 'directives', 'types'],\n  EnumTypeDefinition: ['description', 'name', 'directives', 'values'],\n  EnumValueDefinition: ['description', 'name', 'directives'],\n  InputObjectTypeDefinition: ['description', 'name', 'directives', 'fields'],\n  DirectiveDefinition: ['description', 'name', 'arguments', 'locations'],\n  SchemaExtension: ['directives', 'operationTypes'],\n  ScalarTypeExtension: ['name', 'directives'],\n  ObjectTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  InterfaceTypeExtension: ['name', 'interfaces', 'directives', 'fields'],\n  UnionTypeExtension: ['name', 'directives', 'types'],\n  EnumTypeExtension: ['name', 'directives', 'values'],\n  InputObjectTypeExtension: ['name', 'directives', 'fields']\n};\nexport var BREAK = Object.freeze({});\n/**\n * visit() will walk through an AST using a depth-first traversal, calling\n * the visitor's enter function at each node in the traversal, and calling the\n * leave function after visiting that node and all of its child nodes.\n *\n * By returning different values from the enter and leave functions, the\n * behavior of the visitor can be altered, including skipping over a sub-tree of\n * the AST (by returning false), editing the AST by returning a value or null\n * to remove the value, or to stop the whole traversal by returning BREAK.\n *\n * When using visit() to edit an AST, the original AST will not be modified, and\n * a new version of the AST with the changes applied will be returned from the\n * visit function.\n *\n *     const editedAST = visit(ast, {\n *       enter(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: skip visiting this node\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       },\n *       leave(node, key, parent, path, ancestors) {\n *         // @return\n *         //   undefined: no action\n *         //   false: no action\n *         //   visitor.BREAK: stop visiting altogether\n *         //   null: delete this node\n *         //   any value: replace this node with the returned value\n *       }\n *     });\n *\n * Alternatively to providing enter() and leave() functions, a visitor can\n * instead provide functions named the same as the kinds of AST nodes, or\n * enter/leave visitors at a named key, leading to four permutations of the\n * visitor API:\n *\n * 1) Named visitors triggered when entering a node of a specific kind.\n *\n *     visit(ast, {\n *       Kind(node) {\n *         // enter the \"Kind\" node\n *       }\n *     })\n *\n * 2) Named visitors that trigger upon entering and leaving a node of\n *    a specific kind.\n *\n *     visit(ast, {\n *       Kind: {\n *         enter(node) {\n *           // enter the \"Kind\" node\n *         }\n *         leave(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n *\n * 3) Generic visitors that trigger upon entering and leaving any node.\n *\n *     visit(ast, {\n *       enter(node) {\n *         // enter any node\n *       },\n *       leave(node) {\n *         // leave any node\n *       }\n *     })\n *\n * 4) Parallel visitors for entering and leaving nodes of a specific kind.\n *\n *     visit(ast, {\n *       enter: {\n *         Kind(node) {\n *           // enter the \"Kind\" node\n *         }\n *       },\n *       leave: {\n *         Kind(node) {\n *           // leave the \"Kind\" node\n *         }\n *       }\n *     })\n */\n\nexport function visit(root, visitor) {\n  var visitorKeys = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : QueryDocumentKeys;\n\n  /* eslint-disable no-undef-init */\n  var stack = undefined;\n  var inArray = Array.isArray(root);\n  var keys = [root];\n  var index = -1;\n  var edits = [];\n  var node = undefined;\n  var key = undefined;\n  var parent = undefined;\n  var path = [];\n  var ancestors = [];\n  var newRoot = root;\n  /* eslint-enable no-undef-init */\n\n  do {\n    index++;\n    var isLeaving = index === keys.length;\n    var isEdited = isLeaving && edits.length !== 0;\n\n    if (isLeaving) {\n      key = ancestors.length === 0 ? undefined : path[path.length - 1];\n      node = parent;\n      parent = ancestors.pop();\n\n      if (isEdited) {\n        if (inArray) {\n          node = node.slice();\n        } else {\n          var clone = {};\n\n          for (var _i2 = 0, _Object$keys2 = Object.keys(node); _i2 < _Object$keys2.length; _i2++) {\n            var k = _Object$keys2[_i2];\n            clone[k] = node[k];\n          }\n\n          node = clone;\n        }\n\n        var editOffset = 0;\n\n        for (var ii = 0; ii < edits.length; ii++) {\n          var editKey = edits[ii][0];\n          var editValue = edits[ii][1];\n\n          if (inArray) {\n            editKey -= editOffset;\n          }\n\n          if (inArray && editValue === null) {\n            node.splice(editKey, 1);\n            editOffset++;\n          } else {\n            node[editKey] = editValue;\n          }\n        }\n      }\n\n      index = stack.index;\n      keys = stack.keys;\n      edits = stack.edits;\n      inArray = stack.inArray;\n      stack = stack.prev;\n    } else {\n      key = parent ? inArray ? index : keys[index] : undefined;\n      node = parent ? parent[key] : newRoot;\n\n      if (node === null || node === undefined) {\n        continue;\n      }\n\n      if (parent) {\n        path.push(key);\n      }\n    }\n\n    var result = void 0;\n\n    if (!Array.isArray(node)) {\n      if (!isNode(node)) {\n        throw new Error(\"Invalid AST Node: \".concat(inspect(node), \".\"));\n      }\n\n      var visitFn = getVisitFn(visitor, node.kind, isLeaving);\n\n      if (visitFn) {\n        result = visitFn.call(visitor, node, key, parent, path, ancestors);\n\n        if (result === BREAK) {\n          break;\n        }\n\n        if (result === false) {\n          if (!isLeaving) {\n            path.pop();\n            continue;\n          }\n        } else if (result !== undefined) {\n          edits.push([key, result]);\n\n          if (!isLeaving) {\n            if (isNode(result)) {\n              node = result;\n            } else {\n              path.pop();\n              continue;\n            }\n          }\n        }\n      }\n    }\n\n    if (result === undefined && isEdited) {\n      edits.push([key, node]);\n    }\n\n    if (isLeaving) {\n      path.pop();\n    } else {\n      var _visitorKeys$node$kin;\n\n      stack = {\n        inArray: inArray,\n        index: index,\n        keys: keys,\n        edits: edits,\n        prev: stack\n      };\n      inArray = Array.isArray(node);\n      keys = inArray ? node : (_visitorKeys$node$kin = visitorKeys[node.kind]) !== null && _visitorKeys$node$kin !== void 0 ? _visitorKeys$node$kin : [];\n      index = -1;\n      edits = [];\n\n      if (parent) {\n        ancestors.push(parent);\n      }\n\n      parent = node;\n    }\n  } while (stack !== undefined);\n\n  if (edits.length !== 0) {\n    newRoot = edits[edits.length - 1][1];\n  }\n\n  return newRoot;\n}\n/**\n * Creates a new visitor instance which delegates to many visitors to run in\n * parallel. Each visitor will be visited for each node before moving on.\n *\n * If a prior visitor edits a node, no following visitors will see that node.\n */\n\nexport function visitInParallel(visitors) {\n  var skipping = new Array(visitors.length);\n  return {\n    enter: function enter(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          false);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === false) {\n              skipping[i] = node;\n            } else if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined) {\n              return result;\n            }\n          }\n        }\n      }\n    },\n    leave: function leave(node) {\n      for (var i = 0; i < visitors.length; i++) {\n        if (skipping[i] == null) {\n          var fn = getVisitFn(visitors[i], node.kind,\n          /* isLeaving */\n          true);\n\n          if (fn) {\n            var result = fn.apply(visitors[i], arguments);\n\n            if (result === BREAK) {\n              skipping[i] = BREAK;\n            } else if (result !== undefined && result !== false) {\n              return result;\n            }\n          }\n        } else if (skipping[i] === node) {\n          skipping[i] = null;\n        }\n      }\n    }\n  };\n}\n/**\n * Given a visitor instance, if it is leaving or not, and a node kind, return\n * the function the visitor runtime should call.\n */\n\nexport function getVisitFn(visitor, kind, isLeaving) {\n  var kindVisitor = visitor[kind];\n\n  if (kindVisitor) {\n    if (!isLeaving && typeof kindVisitor === 'function') {\n      // { Kind() {} }\n      return kindVisitor;\n    }\n\n    var kindSpecificVisitor = isLeaving ? kindVisitor.leave : kindVisitor.enter;\n\n    if (typeof kindSpecificVisitor === 'function') {\n      // { Kind: { enter() {}, leave() {} } }\n      return kindSpecificVisitor;\n    }\n  } else {\n    var specificVisitor = isLeaving ? visitor.leave : visitor.enter;\n\n    if (specificVisitor) {\n      if (typeof specificVisitor === 'function') {\n        // { enter() {}, leave() {} }\n        return specificVisitor;\n      }\n\n      var specificKindVisitor = specificVisitor[kind];\n\n      if (typeof specificKindVisitor === 'function') {\n        // { enter: { Kind() {} }, leave: { Kind() {} } }\n        return specificKindVisitor;\n      }\n    }\n  }\n}\n", "/* eslint-disable no-redeclare */\n// $FlowFixMe[name-already-bound] workaround for: https://github.com/facebook/flow/issues/4441\nvar objectEntries = Object.entries || function (obj) {\n  return Object.keys(obj).map(function (key) {\n    return [key, obj[key]];\n  });\n};\n\nexport default objectEntries;\n", "/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * for each value in the array.\n *\n * This provides a convenient lookup for the array items if the key function\n * produces unique results.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: { name: 'Jon', num: '555-1234' },\n *     //   Jenny: { name: 'Jenny', num: '867-5309' } }\n *     const entriesByName = keyMap(\n *       phoneBook,\n *       entry => entry.name\n *     )\n *\n *     // { name: 'Jenny', num: '857-6309' }\n *     const jennyEntry = entriesByName['Jenny']\n *\n */\nexport default function keyMap(list, keyFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = item;\n    return map;\n  }, Object.create(null));\n}\n", "import objectEntries from \"../polyfills/objectEntries.mjs\";\n\n/**\n * Creates an object map with the same keys as `map` and values generated by\n * running each value of `map` thru `fn`.\n */\nexport default function mapValue(map, fn) {\n  var result = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(map); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var _key = _ref2[0];\n    var _value = _ref2[1];\n    result[_key] = fn(_value, _key);\n  }\n\n  return result;\n}\n", "import objectEntries from \"../polyfills/objectEntries.mjs\";\nexport default function toObjMap(obj) {\n  /* eslint-enable no-redeclare */\n  if (Object.getPrototypeOf(obj) === null) {\n    return obj;\n  }\n\n  var map = Object.create(null);\n\n  for (var _i2 = 0, _objectEntries2 = objectEntries(obj); _i2 < _objectEntries2.length; _i2++) {\n    var _ref2 = _objectEntries2[_i2];\n    var key = _ref2[0];\n    var value = _ref2[1];\n    map[key] = value;\n  }\n\n  return map;\n}\n", "/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap(list, keyFn, valFn) {\n  return list.reduce(function (map, item) {\n    map[keyFn(item)] = valFn(item);\n    return map;\n  }, Object.create(null));\n}\n", "var MAX_SUGGESTIONS = 5;\n/**\n * Given [ A, B, C ] return ' Did you mean A, B, or C?'.\n */\n\n// eslint-disable-next-line no-redeclare\nexport default function didYouMean(firstArg, secondArg) {\n  var _ref = typeof firstArg === 'string' ? [firstArg, secondArg] : [undefined, firstArg],\n      subMessage = _ref[0],\n      suggestionsArg = _ref[1];\n\n  var message = ' Did you mean ';\n\n  if (subMessage) {\n    message += subMessage + ' ';\n  }\n\n  var suggestions = suggestionsArg.map(function (x) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  });\n\n  switch (suggestions.length) {\n    case 0:\n      return '';\n\n    case 1:\n      return message + suggestions[0] + '?';\n\n    case 2:\n      return message + suggestions[0] + ' or ' + suggestions[1] + '?';\n  }\n\n  var selected = suggestions.slice(0, MAX_SUGGESTIONS);\n  var lastItem = selected.pop();\n  return message + selected.join(', ') + ', or ' + lastItem + '?';\n}\n", "/**\n * Returns the first argument it receives.\n */\nexport default function identityFunc(x) {\n  return x;\n}\n", "/**\n * Returns a number indicating whether a reference string comes before, or after,\n * or is the same as the given string in natural sort order.\n *\n * See: https://en.wikipedia.org/wiki/Natural_sort_order\n *\n */\nexport default function naturalCompare(aStr, bStr) {\n  var aIdx = 0;\n  var bIdx = 0;\n\n  while (aIdx < aStr.length && bIdx < bStr.length) {\n    var aChar = aStr.charCodeAt(aIdx);\n    var bChar = bStr.charCodeAt(bIdx);\n\n    if (isDigit(aChar) && isDigit(bChar)) {\n      var aNum = 0;\n\n      do {\n        ++aIdx;\n        aNum = aNum * 10 + aChar - DIGIT_0;\n        aChar = aStr.charCodeAt(aIdx);\n      } while (isDigit(aChar) && aNum > 0);\n\n      var bNum = 0;\n\n      do {\n        ++bIdx;\n        bNum = bNum * 10 + bChar - DIGIT_0;\n        bChar = bStr.charCodeAt(bIdx);\n      } while (isDigit(bChar) && bNum > 0);\n\n      if (aNum < bNum) {\n        return -1;\n      }\n\n      if (aNum > bNum) {\n        return 1;\n      }\n    } else {\n      if (aChar < bChar) {\n        return -1;\n      }\n\n      if (aChar > bChar) {\n        return 1;\n      }\n\n      ++aIdx;\n      ++bIdx;\n    }\n  }\n\n  return aStr.length - bStr.length;\n}\nvar DIGIT_0 = 48;\nvar DIGIT_9 = 57;\n\nfunction isDigit(code) {\n  return !isNaN(code) && DIGIT_0 <= code && code <= DIGIT_9;\n}\n", "import naturalCompare from \"./naturalCompare.mjs\";\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\n\nexport default function suggestionList(input, options) {\n  var optionsByDistance = Object.create(null);\n  var lexicalDistance = new LexicalDistance(input);\n  var threshold = Math.floor(input.length * 0.4) + 1;\n\n  for (var _i2 = 0; _i2 < options.length; _i2++) {\n    var option = options[_i2];\n    var distance = lexicalDistance.measure(option, threshold);\n\n    if (distance !== undefined) {\n      optionsByDistance[option] = distance;\n    }\n  }\n\n  return Object.keys(optionsByDistance).sort(function (a, b) {\n    var distanceDiff = optionsByDistance[a] - optionsByDistance[b];\n    return distanceDiff !== 0 ? distanceDiff : naturalCompare(a, b);\n  });\n}\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * Includes a custom alteration from Damerau-Levenshtein to treat case changes\n * as a single edit which helps identify mis-cased values with an edit distance\n * of 1.\n *\n * This distance can be useful for detecting typos in input or sorting\n */\n\nvar LexicalDistance = /*#__PURE__*/function () {\n  function LexicalDistance(input) {\n    this._input = input;\n    this._inputLowerCase = input.toLowerCase();\n    this._inputArray = stringToArray(this._inputLowerCase);\n    this._rows = [new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0), new Array(input.length + 1).fill(0)];\n  }\n\n  var _proto = LexicalDistance.prototype;\n\n  _proto.measure = function measure(option, threshold) {\n    if (this._input === option) {\n      return 0;\n    }\n\n    var optionLowerCase = option.toLowerCase(); // Any case change counts as a single edit\n\n    if (this._inputLowerCase === optionLowerCase) {\n      return 1;\n    }\n\n    var a = stringToArray(optionLowerCase);\n    var b = this._inputArray;\n\n    if (a.length < b.length) {\n      var tmp = a;\n      a = b;\n      b = tmp;\n    }\n\n    var aLength = a.length;\n    var bLength = b.length;\n\n    if (aLength - bLength > threshold) {\n      return undefined;\n    }\n\n    var rows = this._rows;\n\n    for (var j = 0; j <= bLength; j++) {\n      rows[0][j] = j;\n    }\n\n    for (var i = 1; i <= aLength; i++) {\n      var upRow = rows[(i - 1) % 3];\n      var currentRow = rows[i % 3];\n      var smallestCell = currentRow[0] = i;\n\n      for (var _j = 1; _j <= bLength; _j++) {\n        var cost = a[i - 1] === b[_j - 1] ? 0 : 1;\n        var currentCell = Math.min(upRow[_j] + 1, // delete\n        currentRow[_j - 1] + 1, // insert\n        upRow[_j - 1] + cost // substitute\n        );\n\n        if (i > 1 && _j > 1 && a[i - 1] === b[_j - 2] && a[i - 2] === b[_j - 1]) {\n          // transposition\n          var doubleDiagonalCell = rows[(i - 2) % 3][_j - 2];\n          currentCell = Math.min(currentCell, doubleDiagonalCell + 1);\n        }\n\n        if (currentCell < smallestCell) {\n          smallestCell = currentCell;\n        }\n\n        currentRow[_j] = currentCell;\n      } // Early exit, since distance can't go smaller than smallest element of the previous row.\n\n\n      if (smallestCell > threshold) {\n        return undefined;\n      }\n    }\n\n    var distance = rows[aLength % 3][bLength];\n    return distance <= threshold ? distance : undefined;\n  };\n\n  return LexicalDistance;\n}();\n\nfunction stringToArray(str) {\n  var strLength = str.length;\n  var array = new Array(strLength);\n\n  for (var i = 0; i < strLength; ++i) {\n    array[i] = str.charCodeAt(i);\n  }\n\n  return array;\n}\n", "import { visit } from \"./visitor.mjs\";\nimport { printBlockString } from \"./blockString.mjs\";\n/**\n * Converts an AST into a string, using one set of reasonable\n * formatting rules.\n */\n\nexport function print(ast) {\n  return visit(ast, {\n    leave: printDocASTReducer\n  });\n}\nvar MAX_LINE_LENGTH = 80; // TODO: provide better type coverage in future\n\nvar printDocASTReducer = {\n  Name: function Name(node) {\n    return node.value;\n  },\n  Variable: function Variable(node) {\n    return '$' + node.name;\n  },\n  // Document\n  Document: function Document(node) {\n    return join(node.definitions, '\\n\\n') + '\\n';\n  },\n  OperationDefinition: function OperationDefinition(node) {\n    var op = node.operation;\n    var name = node.name;\n    var varDefs = wrap('(', join(node.variableDefinitions, ', '), ')');\n    var directives = join(node.directives, ' ');\n    var selectionSet = node.selectionSet; // Anonymous queries with no directives or variable definitions can use\n    // the query short form.\n\n    return !name && !directives && !varDefs && op === 'query' ? selectionSet : join([op, join([name, varDefs]), directives, selectionSet], ' ');\n  },\n  VariableDefinition: function VariableDefinition(_ref) {\n    var variable = _ref.variable,\n        type = _ref.type,\n        defaultValue = _ref.defaultValue,\n        directives = _ref.directives;\n    return variable + ': ' + type + wrap(' = ', defaultValue) + wrap(' ', join(directives, ' '));\n  },\n  SelectionSet: function SelectionSet(_ref2) {\n    var selections = _ref2.selections;\n    return block(selections);\n  },\n  Field: function Field(_ref3) {\n    var alias = _ref3.alias,\n        name = _ref3.name,\n        args = _ref3.arguments,\n        directives = _ref3.directives,\n        selectionSet = _ref3.selectionSet;\n    var prefix = wrap('', alias, ': ') + name;\n    var argsLine = prefix + wrap('(', join(args, ', '), ')');\n\n    if (argsLine.length > MAX_LINE_LENGTH) {\n      argsLine = prefix + wrap('(\\n', indent(join(args, '\\n')), '\\n)');\n    }\n\n    return join([argsLine, join(directives, ' '), selectionSet], ' ');\n  },\n  Argument: function Argument(_ref4) {\n    var name = _ref4.name,\n        value = _ref4.value;\n    return name + ': ' + value;\n  },\n  // Fragments\n  FragmentSpread: function FragmentSpread(_ref5) {\n    var name = _ref5.name,\n        directives = _ref5.directives;\n    return '...' + name + wrap(' ', join(directives, ' '));\n  },\n  InlineFragment: function InlineFragment(_ref6) {\n    var typeCondition = _ref6.typeCondition,\n        directives = _ref6.directives,\n        selectionSet = _ref6.selectionSet;\n    return join(['...', wrap('on ', typeCondition), join(directives, ' '), selectionSet], ' ');\n  },\n  FragmentDefinition: function FragmentDefinition(_ref7) {\n    var name = _ref7.name,\n        typeCondition = _ref7.typeCondition,\n        variableDefinitions = _ref7.variableDefinitions,\n        directives = _ref7.directives,\n        selectionSet = _ref7.selectionSet;\n    return (// Note: fragment variable definitions are experimental and may be changed\n      // or removed in the future.\n      \"fragment \".concat(name).concat(wrap('(', join(variableDefinitions, ', '), ')'), \" \") + \"on \".concat(typeCondition, \" \").concat(wrap('', join(directives, ' '), ' ')) + selectionSet\n    );\n  },\n  // Value\n  IntValue: function IntValue(_ref8) {\n    var value = _ref8.value;\n    return value;\n  },\n  FloatValue: function FloatValue(_ref9) {\n    var value = _ref9.value;\n    return value;\n  },\n  StringValue: function StringValue(_ref10, key) {\n    var value = _ref10.value,\n        isBlockString = _ref10.block;\n    return isBlockString ? printBlockString(value, key === 'description' ? '' : '  ') : JSON.stringify(value);\n  },\n  BooleanValue: function BooleanValue(_ref11) {\n    var value = _ref11.value;\n    return value ? 'true' : 'false';\n  },\n  NullValue: function NullValue() {\n    return 'null';\n  },\n  EnumValue: function EnumValue(_ref12) {\n    var value = _ref12.value;\n    return value;\n  },\n  ListValue: function ListValue(_ref13) {\n    var values = _ref13.values;\n    return '[' + join(values, ', ') + ']';\n  },\n  ObjectValue: function ObjectValue(_ref14) {\n    var fields = _ref14.fields;\n    return '{' + join(fields, ', ') + '}';\n  },\n  ObjectField: function ObjectField(_ref15) {\n    var name = _ref15.name,\n        value = _ref15.value;\n    return name + ': ' + value;\n  },\n  // Directive\n  Directive: function Directive(_ref16) {\n    var name = _ref16.name,\n        args = _ref16.arguments;\n    return '@' + name + wrap('(', join(args, ', '), ')');\n  },\n  // Type\n  NamedType: function NamedType(_ref17) {\n    var name = _ref17.name;\n    return name;\n  },\n  ListType: function ListType(_ref18) {\n    var type = _ref18.type;\n    return '[' + type + ']';\n  },\n  NonNullType: function NonNullType(_ref19) {\n    var type = _ref19.type;\n    return type + '!';\n  },\n  // Type System Definitions\n  SchemaDefinition: addDescription(function (_ref20) {\n    var directives = _ref20.directives,\n        operationTypes = _ref20.operationTypes;\n    return join(['schema', join(directives, ' '), block(operationTypes)], ' ');\n  }),\n  OperationTypeDefinition: function OperationTypeDefinition(_ref21) {\n    var operation = _ref21.operation,\n        type = _ref21.type;\n    return operation + ': ' + type;\n  },\n  ScalarTypeDefinition: addDescription(function (_ref22) {\n    var name = _ref22.name,\n        directives = _ref22.directives;\n    return join(['scalar', name, join(directives, ' ')], ' ');\n  }),\n  ObjectTypeDefinition: addDescription(function (_ref23) {\n    var name = _ref23.name,\n        interfaces = _ref23.interfaces,\n        directives = _ref23.directives,\n        fields = _ref23.fields;\n    return join(['type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  FieldDefinition: addDescription(function (_ref24) {\n    var name = _ref24.name,\n        args = _ref24.arguments,\n        type = _ref24.type,\n        directives = _ref24.directives;\n    return name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + ': ' + type + wrap(' ', join(directives, ' '));\n  }),\n  InputValueDefinition: addDescription(function (_ref25) {\n    var name = _ref25.name,\n        type = _ref25.type,\n        defaultValue = _ref25.defaultValue,\n        directives = _ref25.directives;\n    return join([name + ': ' + type, wrap('= ', defaultValue), join(directives, ' ')], ' ');\n  }),\n  InterfaceTypeDefinition: addDescription(function (_ref26) {\n    var name = _ref26.name,\n        interfaces = _ref26.interfaces,\n        directives = _ref26.directives,\n        fields = _ref26.fields;\n    return join(['interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  }),\n  UnionTypeDefinition: addDescription(function (_ref27) {\n    var name = _ref27.name,\n        directives = _ref27.directives,\n        types = _ref27.types;\n    return join(['union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  }),\n  EnumTypeDefinition: addDescription(function (_ref28) {\n    var name = _ref28.name,\n        directives = _ref28.directives,\n        values = _ref28.values;\n    return join(['enum', name, join(directives, ' '), block(values)], ' ');\n  }),\n  EnumValueDefinition: addDescription(function (_ref29) {\n    var name = _ref29.name,\n        directives = _ref29.directives;\n    return join([name, join(directives, ' ')], ' ');\n  }),\n  InputObjectTypeDefinition: addDescription(function (_ref30) {\n    var name = _ref30.name,\n        directives = _ref30.directives,\n        fields = _ref30.fields;\n    return join(['input', name, join(directives, ' '), block(fields)], ' ');\n  }),\n  DirectiveDefinition: addDescription(function (_ref31) {\n    var name = _ref31.name,\n        args = _ref31.arguments,\n        repeatable = _ref31.repeatable,\n        locations = _ref31.locations;\n    return 'directive @' + name + (hasMultilineItems(args) ? wrap('(\\n', indent(join(args, '\\n')), '\\n)') : wrap('(', join(args, ', '), ')')) + (repeatable ? ' repeatable' : '') + ' on ' + join(locations, ' | ');\n  }),\n  SchemaExtension: function SchemaExtension(_ref32) {\n    var directives = _ref32.directives,\n        operationTypes = _ref32.operationTypes;\n    return join(['extend schema', join(directives, ' '), block(operationTypes)], ' ');\n  },\n  ScalarTypeExtension: function ScalarTypeExtension(_ref33) {\n    var name = _ref33.name,\n        directives = _ref33.directives;\n    return join(['extend scalar', name, join(directives, ' ')], ' ');\n  },\n  ObjectTypeExtension: function ObjectTypeExtension(_ref34) {\n    var name = _ref34.name,\n        interfaces = _ref34.interfaces,\n        directives = _ref34.directives,\n        fields = _ref34.fields;\n    return join(['extend type', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  InterfaceTypeExtension: function InterfaceTypeExtension(_ref35) {\n    var name = _ref35.name,\n        interfaces = _ref35.interfaces,\n        directives = _ref35.directives,\n        fields = _ref35.fields;\n    return join(['extend interface', name, wrap('implements ', join(interfaces, ' & ')), join(directives, ' '), block(fields)], ' ');\n  },\n  UnionTypeExtension: function UnionTypeExtension(_ref36) {\n    var name = _ref36.name,\n        directives = _ref36.directives,\n        types = _ref36.types;\n    return join(['extend union', name, join(directives, ' '), types && types.length !== 0 ? '= ' + join(types, ' | ') : ''], ' ');\n  },\n  EnumTypeExtension: function EnumTypeExtension(_ref37) {\n    var name = _ref37.name,\n        directives = _ref37.directives,\n        values = _ref37.values;\n    return join(['extend enum', name, join(directives, ' '), block(values)], ' ');\n  },\n  InputObjectTypeExtension: function InputObjectTypeExtension(_ref38) {\n    var name = _ref38.name,\n        directives = _ref38.directives,\n        fields = _ref38.fields;\n    return join(['extend input', name, join(directives, ' '), block(fields)], ' ');\n  }\n};\n\nfunction addDescription(cb) {\n  return function (node) {\n    return join([node.description, cb(node)], '\\n');\n  };\n}\n/**\n * Given maybeArray, print an empty string if it is null or empty, otherwise\n * print all items together separated by separator if provided\n */\n\n\nfunction join(maybeArray) {\n  var _maybeArray$filter$jo;\n\n  var separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n  return (_maybeArray$filter$jo = maybeArray === null || maybeArray === void 0 ? void 0 : maybeArray.filter(function (x) {\n    return x;\n  }).join(separator)) !== null && _maybeArray$filter$jo !== void 0 ? _maybeArray$filter$jo : '';\n}\n/**\n * Given array, print each item on its own line, wrapped in an\n * indented \"{ }\" block.\n */\n\n\nfunction block(array) {\n  return wrap('{\\n', indent(join(array, '\\n')), '\\n}');\n}\n/**\n * If maybeString is not null or empty, then wrap with start and end, otherwise print an empty string.\n */\n\n\nfunction wrap(start, maybeString) {\n  var end = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return maybeString != null && maybeString !== '' ? start + maybeString + end : '';\n}\n\nfunction indent(str) {\n  return wrap('  ', str.replace(/\\n/g, '\\n  '));\n}\n\nfunction isMultiline(str) {\n  return str.indexOf('\\n') !== -1;\n}\n\nfunction hasMultilineItems(maybeArray) {\n  return maybeArray != null && maybeArray.some(isMultiline);\n}\n", "import inspect from \"../jsutils/inspect.mjs\";\nimport invariant from \"../jsutils/invariant.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\n\n/**\n * Produces a JavaScript value given a GraphQL Value AST.\n *\n * Unlike `valueFromAST()`, no type is provided. The resulting JavaScript value\n * will reflect the provided GraphQL value AST.\n *\n * | GraphQL Value        | JavaScript Value |\n * | -------------------- | ---------------- |\n * | Input Object         | Object           |\n * | List                 | Array            |\n * | Boolean              | Boolean          |\n * | String / Enum        | String           |\n * | Int / Float          | Number           |\n * | Null                 | null             |\n *\n */\nexport function valueFromASTUntyped(valueNode, variables) {\n  switch (valueNode.kind) {\n    case Kind.NULL:\n      return null;\n\n    case Kind.INT:\n      return parseInt(valueNode.value, 10);\n\n    case Kind.FLOAT:\n      return parseFloat(valueNode.value);\n\n    case Kind.STRING:\n    case Kind.ENUM:\n    case Kind.BOOLEAN:\n      return valueNode.value;\n\n    case Kind.LIST:\n      return valueNode.values.map(function (node) {\n        return valueFromASTUntyped(node, variables);\n      });\n\n    case Kind.OBJECT:\n      return keyValMap(valueNode.fields, function (field) {\n        return field.name.value;\n      }, function (field) {\n        return valueFromASTUntyped(field.value, variables);\n      });\n\n    case Kind.VARIABLE:\n      return variables === null || variables === void 0 ? void 0 : variables[valueNode.name.value];\n  } // istanbul ignore next (Not reachable. All possible value nodes have been considered)\n\n\n  false || invariant(0, 'Unexpected value node: ' + inspect(valueNode));\n}\n", "function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nimport objectEntries from \"../polyfills/objectEntries.mjs\";\nimport { SYMBOL_TO_STRING_TAG } from \"../polyfills/symbols.mjs\";\nimport inspect from \"../jsutils/inspect.mjs\";\nimport keyMap from \"../jsutils/keyMap.mjs\";\nimport mapValue from \"../jsutils/mapValue.mjs\";\nimport toObjMap from \"../jsutils/toObjMap.mjs\";\nimport devAssert from \"../jsutils/devAssert.mjs\";\nimport keyValMap from \"../jsutils/keyValMap.mjs\";\nimport instanceOf from \"../jsutils/instanceOf.mjs\";\nimport didYouMean from \"../jsutils/didYouMean.mjs\";\nimport isObjectLike from \"../jsutils/isObjectLike.mjs\";\nimport identityFunc from \"../jsutils/identityFunc.mjs\";\nimport defineInspect from \"../jsutils/defineInspect.mjs\";\nimport suggestionList from \"../jsutils/suggestionList.mjs\";\nimport { GraphQLError } from \"../error/GraphQLError.mjs\";\nimport { Kind } from \"../language/kinds.mjs\";\nimport { print } from \"../language/printer.mjs\";\nimport { valueFromASTUntyped } from \"../utilities/valueFromASTUntyped.mjs\";\nexport function isType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type) || isListType(type) || isNonNullType(type);\n}\nexport function assertType(type) {\n  if (!isType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL type.\"));\n  }\n\n  return type;\n}\n/**\n * There are predicates for each kind of GraphQL type.\n */\n\n// eslint-disable-next-line no-redeclare\nexport function isScalarType(type) {\n  return instanceOf(type, GraphQLScalarType);\n}\nexport function assertScalarType(type) {\n  if (!isScalarType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Scalar type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isObjectType(type) {\n  return instanceOf(type, GraphQLObjectType);\n}\nexport function assertObjectType(type) {\n  if (!isObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInterfaceType(type) {\n  return instanceOf(type, GraphQLInterfaceType);\n}\nexport function assertInterfaceType(type) {\n  if (!isInterfaceType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Interface type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isUnionType(type) {\n  return instanceOf(type, GraphQLUnionType);\n}\nexport function assertUnionType(type) {\n  if (!isUnionType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Union type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isEnumType(type) {\n  return instanceOf(type, GraphQLEnumType);\n}\nexport function assertEnumType(type) {\n  if (!isEnumType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Enum type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isInputObjectType(type) {\n  return instanceOf(type, GraphQLInputObjectType);\n}\nexport function assertInputObjectType(type) {\n  if (!isInputObjectType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Input Object type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isListType(type) {\n  return instanceOf(type, GraphQLList);\n}\nexport function assertListType(type) {\n  if (!isListType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL List type.\"));\n  }\n\n  return type;\n}\n// eslint-disable-next-line no-redeclare\nexport function isNonNullType(type) {\n  return instanceOf(type, GraphQLNonNull);\n}\nexport function assertNonNullType(type) {\n  if (!isNonNullType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL Non-Null type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as input types for arguments and directives.\n */\n\nexport function isInputType(type) {\n  return isScalarType(type) || isEnumType(type) || isInputObjectType(type) || isWrappingType(type) && isInputType(type.ofType);\n}\nexport function assertInputType(type) {\n  if (!isInputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL input type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may be used as output types as the result of fields.\n */\n\nexport function isOutputType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isWrappingType(type) && isOutputType(type.ofType);\n}\nexport function assertOutputType(type) {\n  if (!isOutputType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL output type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe types which may be leaf values.\n */\n\nexport function isLeafType(type) {\n  return isScalarType(type) || isEnumType(type);\n}\nexport function assertLeafType(type) {\n  if (!isLeafType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL leaf type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isCompositeType(type) {\n  return isObjectType(type) || isInterfaceType(type) || isUnionType(type);\n}\nexport function assertCompositeType(type) {\n  if (!isCompositeType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL composite type.\"));\n  }\n\n  return type;\n}\n/**\n * These types may describe the parent context of a selection set.\n */\n\nexport function isAbstractType(type) {\n  return isInterfaceType(type) || isUnionType(type);\n}\nexport function assertAbstractType(type) {\n  if (!isAbstractType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL abstract type.\"));\n  }\n\n  return type;\n}\n/**\n * List Type Wrapper\n *\n * A list is a wrapping type which points to another type.\n * Lists are often created within the context of defining the fields of\n * an object type.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         parents: { type: new GraphQLList(PersonType) },\n *         children: { type: new GraphQLList(PersonType) },\n *       })\n *     })\n *\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLList<+T: GraphQLType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLList<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLList(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLList) {\n    this.ofType = assertType(ofType);\n  } else {\n    return new GraphQLList(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLList.prototype.toString = function toString() {\n  return '[' + String(this.ofType) + ']';\n};\n\nGraphQLList.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLList.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLList';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLList);\n/**\n * Non-Null Type Wrapper\n *\n * A non-null is a wrapping type which points to another type.\n * Non-null types enforce that their values are never null and can ensure\n * an error is raised if this ever occurs during a request. It is useful for\n * fields which you can make a strong guarantee on non-nullability, for example\n * usually the id field of a database row will never be null.\n *\n * Example:\n *\n *     const RowType = new GraphQLObjectType({\n *       name: 'Row',\n *       fields: () => ({\n *         id: { type: new GraphQLNonNull(GraphQLString) },\n *       })\n *     })\n *\n * Note: the enforcement of non-nullability occurs within the executor.\n */\n// FIXME: workaround to fix issue with Babel parser\n\n/* ::\ndeclare class GraphQLNonNull<+T: GraphQLNullableType> {\n  +ofType: T;\n  static <T>(ofType: T): GraphQLNonNull<T>;\n  // Note: constructors cannot be used for covariant types. Drop the \"new\".\n  constructor(ofType: GraphQLType): void;\n}\n*/\n\nexport function GraphQLNonNull(ofType) {\n  // istanbul ignore else (to be removed in v16.0.0)\n  if (this instanceof GraphQLNonNull) {\n    this.ofType = assertNullableType(ofType);\n  } else {\n    return new GraphQLNonNull(ofType);\n  }\n} // Need to cast through any to alter the prototype.\n\nGraphQLNonNull.prototype.toString = function toString() {\n  return String(this.ofType) + '!';\n};\n\nGraphQLNonNull.prototype.toJSON = function toJSON() {\n  return this.toString();\n};\n\nObject.defineProperty(GraphQLNonNull.prototype, SYMBOL_TO_STRING_TAG, {\n  get: function get() {\n    return 'GraphQLNonNull';\n  }\n}); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLNonNull);\n/**\n * These types wrap and modify other types\n */\n\nexport function isWrappingType(type) {\n  return isListType(type) || isNonNullType(type);\n}\nexport function assertWrappingType(type) {\n  if (!isWrappingType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL wrapping type.\"));\n  }\n\n  return type;\n}\n/**\n * These types can all accept null as a value.\n */\n\nexport function isNullableType(type) {\n  return isType(type) && !isNonNullType(type);\n}\nexport function assertNullableType(type) {\n  if (!isNullableType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL nullable type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNullableType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    return isNonNullType(type) ? type.ofType : type;\n  }\n}\n/**\n * These named types do not include modifiers like List or NonNull.\n */\n\nexport function isNamedType(type) {\n  return isScalarType(type) || isObjectType(type) || isInterfaceType(type) || isUnionType(type) || isEnumType(type) || isInputObjectType(type);\n}\nexport function assertNamedType(type) {\n  if (!isNamedType(type)) {\n    throw new Error(\"Expected \".concat(inspect(type), \" to be a GraphQL named type.\"));\n  }\n\n  return type;\n}\n/* eslint-disable no-redeclare */\n\nexport function getNamedType(type) {\n  /* eslint-enable no-redeclare */\n  if (type) {\n    var unwrappedType = type;\n\n    while (isWrappingType(unwrappedType)) {\n      unwrappedType = unwrappedType.ofType;\n    }\n\n    return unwrappedType;\n  }\n}\n/**\n * Used while defining GraphQL types to allow for circular references in\n * otherwise immutable type definitions.\n */\n\nfunction resolveThunk(thunk) {\n  // $FlowFixMe[incompatible-use]\n  return typeof thunk === 'function' ? thunk() : thunk;\n}\n\nfunction undefineIfEmpty(arr) {\n  return arr && arr.length > 0 ? arr : undefined;\n}\n/**\n * Scalar Type Definition\n *\n * The leaf values of any request and input values to arguments are\n * Scalars (or Enums) and are defined with a name and a series of functions\n * used to parse input from ast or variables and to ensure validity.\n *\n * If a type's serialize function does not return a value (i.e. it returns\n * `undefined`) then an error will be raised and a `null` value will be returned\n * in the response. If the serialize function returns `null`, then no error will\n * be included in the response.\n *\n * Example:\n *\n *     const OddType = new GraphQLScalarType({\n *       name: 'Odd',\n *       serialize(value) {\n *         if (value % 2 === 1) {\n *           return value;\n *         }\n *       }\n *     });\n *\n */\n\n\nexport var GraphQLScalarType = /*#__PURE__*/function () {\n  function GraphQLScalarType(config) {\n    var _config$parseValue, _config$serialize, _config$parseLiteral;\n\n    var parseValue = (_config$parseValue = config.parseValue) !== null && _config$parseValue !== void 0 ? _config$parseValue : identityFunc;\n    this.name = config.name;\n    this.description = config.description;\n    this.specifiedByUrl = config.specifiedByUrl;\n    this.serialize = (_config$serialize = config.serialize) !== null && _config$serialize !== void 0 ? _config$serialize : identityFunc;\n    this.parseValue = parseValue;\n    this.parseLiteral = (_config$parseLiteral = config.parseLiteral) !== null && _config$parseLiteral !== void 0 ? _config$parseLiteral : function (node, variables) {\n      return parseValue(valueFromASTUntyped(node, variables));\n    };\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.specifiedByUrl == null || typeof config.specifiedByUrl === 'string' || devAssert(0, \"\".concat(this.name, \" must provide \\\"specifiedByUrl\\\" as a string, \") + \"but got: \".concat(inspect(config.specifiedByUrl), \".\"));\n    config.serialize == null || typeof config.serialize === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"serialize\\\" function. If this custom Scalar is also used as an input type, ensure \\\"parseValue\\\" and \\\"parseLiteral\\\" functions are also provided.\"));\n\n    if (config.parseLiteral) {\n      typeof config.parseValue === 'function' && typeof config.parseLiteral === 'function' || devAssert(0, \"\".concat(this.name, \" must provide both \\\"parseValue\\\" and \\\"parseLiteral\\\" functions.\"));\n    }\n  }\n\n  var _proto = GraphQLScalarType.prototype;\n\n  _proto.toConfig = function toConfig() {\n    var _this$extensionASTNod;\n\n    return {\n      name: this.name,\n      description: this.description,\n      specifiedByUrl: this.specifiedByUrl,\n      serialize: this.serialize,\n      parseValue: this.parseValue,\n      parseLiteral: this.parseLiteral,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod = this.extensionASTNodes) !== null && _this$extensionASTNod !== void 0 ? _this$extensionASTNod : []\n    };\n  };\n\n  _proto.toString = function toString() {\n    return this.name;\n  };\n\n  _proto.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLScalarType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLScalarType';\n    }\n  }]);\n\n  return GraphQLScalarType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLScalarType);\n\n/**\n * Object Type Definition\n *\n * Almost all of the GraphQL types you define will be object types. Object types\n * have a name, but most importantly describe their fields.\n *\n * Example:\n *\n *     const AddressType = new GraphQLObjectType({\n *       name: 'Address',\n *       fields: {\n *         street: { type: GraphQLString },\n *         number: { type: GraphQLInt },\n *         formatted: {\n *           type: GraphQLString,\n *           resolve(obj) {\n *             return obj.number + ' ' + obj.street\n *           }\n *         }\n *       }\n *     });\n *\n * When two types need to refer to each other, or a type needs to refer to\n * itself in a field, you can use a function expression (aka a closure or a\n * thunk) to supply the fields lazily.\n *\n * Example:\n *\n *     const PersonType = new GraphQLObjectType({\n *       name: 'Person',\n *       fields: () => ({\n *         name: { type: GraphQLString },\n *         bestFriend: { type: PersonType },\n *       })\n *     });\n *\n */\nexport var GraphQLObjectType = /*#__PURE__*/function () {\n  function GraphQLObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.isTypeOf = config.isTypeOf;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.isTypeOf == null || typeof config.isTypeOf === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"isTypeOf\\\" as a function, \") + \"but got: \".concat(inspect(config.isTypeOf), \".\"));\n  }\n\n  var _proto2 = GraphQLObjectType.prototype;\n\n  _proto2.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto2.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto2.toConfig = function toConfig() {\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      isTypeOf: this.isTypeOf,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: this.extensionASTNodes || []\n    };\n  };\n\n  _proto2.toString = function toString() {\n    return this.name;\n  };\n\n  _proto2.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLObjectType';\n    }\n  }]);\n\n  return GraphQLObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLObjectType);\n\nfunction defineInterfaces(config) {\n  var _resolveThunk;\n\n  var interfaces = (_resolveThunk = resolveThunk(config.interfaces)) !== null && _resolveThunk !== void 0 ? _resolveThunk : [];\n  Array.isArray(interfaces) || devAssert(0, \"\".concat(config.name, \" interfaces must be an Array or a function which returns an Array.\"));\n  return interfaces;\n}\n\nfunction defineFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    var _fieldConfig$args;\n\n    isPlainObj(fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field config must be an object.\"));\n    !('isDeprecated' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    fieldConfig.resolve == null || typeof fieldConfig.resolve === 'function' || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field resolver must be a function if \") + \"provided, but got: \".concat(inspect(fieldConfig.resolve), \".\"));\n    var argsConfig = (_fieldConfig$args = fieldConfig.args) !== null && _fieldConfig$args !== void 0 ? _fieldConfig$args : {};\n    isPlainObj(argsConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" args must be an object with argument names as keys.\"));\n    var args = objectEntries(argsConfig).map(function (_ref) {\n      var argName = _ref[0],\n          argConfig = _ref[1];\n      return {\n        name: argName,\n        description: argConfig.description,\n        type: argConfig.type,\n        defaultValue: argConfig.defaultValue,\n        deprecationReason: argConfig.deprecationReason,\n        extensions: argConfig.extensions && toObjMap(argConfig.extensions),\n        astNode: argConfig.astNode\n      };\n    });\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      args: args,\n      resolve: fieldConfig.resolve,\n      subscribe: fieldConfig.subscribe,\n      isDeprecated: fieldConfig.deprecationReason != null,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nfunction isPlainObj(obj) {\n  return isObjectLike(obj) && !Array.isArray(obj);\n}\n\nfunction fieldsToFieldsConfig(fields) {\n  return mapValue(fields, function (field) {\n    return {\n      description: field.description,\n      type: field.type,\n      args: argsToArgsConfig(field.args),\n      resolve: field.resolve,\n      subscribe: field.subscribe,\n      deprecationReason: field.deprecationReason,\n      extensions: field.extensions,\n      astNode: field.astNode\n    };\n  });\n}\n/**\n * @internal\n */\n\n\nexport function argsToArgsConfig(args) {\n  return keyValMap(args, function (arg) {\n    return arg.name;\n  }, function (arg) {\n    return {\n      description: arg.description,\n      type: arg.type,\n      defaultValue: arg.defaultValue,\n      deprecationReason: arg.deprecationReason,\n      extensions: arg.extensions,\n      astNode: arg.astNode\n    };\n  });\n}\nexport function isRequiredArgument(arg) {\n  return isNonNullType(arg.type) && arg.defaultValue === undefined;\n}\n\n/**\n * Interface Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Interface type\n * is used to describe what types are possible, what fields are in common across\n * all types, as well as a function to determine which type is actually used\n * when the field is resolved.\n *\n * Example:\n *\n *     const EntityType = new GraphQLInterfaceType({\n *       name: 'Entity',\n *       fields: {\n *         name: { type: GraphQLString }\n *       }\n *     });\n *\n */\nexport var GraphQLInterfaceType = /*#__PURE__*/function () {\n  function GraphQLInterfaceType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineFieldMap.bind(undefined, config);\n    this._interfaces = defineInterfaces.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto3 = GraphQLInterfaceType.prototype;\n\n  _proto3.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto3.getInterfaces = function getInterfaces() {\n    if (typeof this._interfaces === 'function') {\n      this._interfaces = this._interfaces();\n    }\n\n    return this._interfaces;\n  };\n\n  _proto3.toConfig = function toConfig() {\n    var _this$extensionASTNod2;\n\n    return {\n      name: this.name,\n      description: this.description,\n      interfaces: this.getInterfaces(),\n      fields: fieldsToFieldsConfig(this.getFields()),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod2 = this.extensionASTNodes) !== null && _this$extensionASTNod2 !== void 0 ? _this$extensionASTNod2 : []\n    };\n  };\n\n  _proto3.toString = function toString() {\n    return this.name;\n  };\n\n  _proto3.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInterfaceType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInterfaceType';\n    }\n  }]);\n\n  return GraphQLInterfaceType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInterfaceType);\n\n/**\n * Union Type Definition\n *\n * When a field can return one of a heterogeneous set of types, a Union type\n * is used to describe what types are possible as well as providing a function\n * to determine which type is actually used when the field is resolved.\n *\n * Example:\n *\n *     const PetType = new GraphQLUnionType({\n *       name: 'Pet',\n *       types: [ DogType, CatType ],\n *       resolveType(value) {\n *         if (value instanceof Dog) {\n *           return DogType;\n *         }\n *         if (value instanceof Cat) {\n *           return CatType;\n *         }\n *       }\n *     });\n *\n */\nexport var GraphQLUnionType = /*#__PURE__*/function () {\n  function GraphQLUnionType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.resolveType = config.resolveType;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._types = defineTypes.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n    config.resolveType == null || typeof config.resolveType === 'function' || devAssert(0, \"\".concat(this.name, \" must provide \\\"resolveType\\\" as a function, \") + \"but got: \".concat(inspect(config.resolveType), \".\"));\n  }\n\n  var _proto4 = GraphQLUnionType.prototype;\n\n  _proto4.getTypes = function getTypes() {\n    if (typeof this._types === 'function') {\n      this._types = this._types();\n    }\n\n    return this._types;\n  };\n\n  _proto4.toConfig = function toConfig() {\n    var _this$extensionASTNod3;\n\n    return {\n      name: this.name,\n      description: this.description,\n      types: this.getTypes(),\n      resolveType: this.resolveType,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod3 = this.extensionASTNodes) !== null && _this$extensionASTNod3 !== void 0 ? _this$extensionASTNod3 : []\n    };\n  };\n\n  _proto4.toString = function toString() {\n    return this.name;\n  };\n\n  _proto4.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLUnionType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLUnionType';\n    }\n  }]);\n\n  return GraphQLUnionType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLUnionType);\n\nfunction defineTypes(config) {\n  var types = resolveThunk(config.types);\n  Array.isArray(types) || devAssert(0, \"Must provide Array of types or a function which returns such an array for Union \".concat(config.name, \".\"));\n  return types;\n}\n\n/**\n * Enum Type Definition\n *\n * Some leaf values of requests and input values are Enums. GraphQL serializes\n * Enum values as strings, however internally Enums can be represented by any\n * kind of type, often integers.\n *\n * Example:\n *\n *     const RGBType = new GraphQLEnumType({\n *       name: 'RGB',\n *       values: {\n *         RED: { value: 0 },\n *         GREEN: { value: 1 },\n *         BLUE: { value: 2 }\n *       }\n *     });\n *\n * Note: If a value is not provided in a definition, the name of the enum value\n * will be used as its internal value.\n */\nexport var GraphQLEnumType\n/* <T> */\n= /*#__PURE__*/function () {\n  function GraphQLEnumType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._values = defineEnumValues(this.name, config.values);\n    this._valueLookup = new Map(this._values.map(function (enumValue) {\n      return [enumValue.value, enumValue];\n    }));\n    this._nameLookup = keyMap(this._values, function (value) {\n      return value.name;\n    });\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto5 = GraphQLEnumType.prototype;\n\n  _proto5.getValues = function getValues() {\n    return this._values;\n  };\n\n  _proto5.getValue = function getValue(name) {\n    return this._nameLookup[name];\n  };\n\n  _proto5.serialize = function serialize(outputValue) {\n    var enumValue = this._valueLookup.get(outputValue);\n\n    if (enumValue === undefined) {\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent value: \").concat(inspect(outputValue)));\n    }\n\n    return enumValue.name;\n  };\n\n  _proto5.parseValue = function parseValue(inputValue)\n  /* T */\n  {\n    if (typeof inputValue !== 'string') {\n      var valueStr = inspect(inputValue);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-string value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr));\n    }\n\n    var enumValue = this.getValue(inputValue);\n\n    if (enumValue == null) {\n      throw new GraphQLError(\"Value \\\"\".concat(inputValue, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, inputValue));\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.parseLiteral = function parseLiteral(valueNode, _variables)\n  /* T */\n  {\n    // Note: variables will be resolved to a value before calling this function.\n    if (valueNode.kind !== Kind.ENUM) {\n      var valueStr = print(valueNode);\n      throw new GraphQLError(\"Enum \\\"\".concat(this.name, \"\\\" cannot represent non-enum value: \").concat(valueStr, \".\") + didYouMeanEnumValue(this, valueStr), valueNode);\n    }\n\n    var enumValue = this.getValue(valueNode.value);\n\n    if (enumValue == null) {\n      var _valueStr = print(valueNode);\n\n      throw new GraphQLError(\"Value \\\"\".concat(_valueStr, \"\\\" does not exist in \\\"\").concat(this.name, \"\\\" enum.\") + didYouMeanEnumValue(this, _valueStr), valueNode);\n    }\n\n    return enumValue.value;\n  };\n\n  _proto5.toConfig = function toConfig() {\n    var _this$extensionASTNod4;\n\n    var values = keyValMap(this.getValues(), function (value) {\n      return value.name;\n    }, function (value) {\n      return {\n        description: value.description,\n        value: value.value,\n        deprecationReason: value.deprecationReason,\n        extensions: value.extensions,\n        astNode: value.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      values: values,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod4 = this.extensionASTNodes) !== null && _this$extensionASTNod4 !== void 0 ? _this$extensionASTNod4 : []\n    };\n  };\n\n  _proto5.toString = function toString() {\n    return this.name;\n  };\n\n  _proto5.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLEnumType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLEnumType';\n    }\n  }]);\n\n  return GraphQLEnumType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLEnumType);\n\nfunction didYouMeanEnumValue(enumType, unknownValueStr) {\n  var allNames = enumType.getValues().map(function (value) {\n    return value.name;\n  });\n  var suggestedValues = suggestionList(unknownValueStr, allNames);\n  return didYouMean('the enum value', suggestedValues);\n}\n\nfunction defineEnumValues(typeName, valueMap) {\n  isPlainObj(valueMap) || devAssert(0, \"\".concat(typeName, \" values must be an object with value names as keys.\"));\n  return objectEntries(valueMap).map(function (_ref2) {\n    var valueName = _ref2[0],\n        valueConfig = _ref2[1];\n    isPlainObj(valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" must refer to an object with a \\\"value\\\" key \") + \"representing an internal value but got: \".concat(inspect(valueConfig), \".\"));\n    !('isDeprecated' in valueConfig) || devAssert(0, \"\".concat(typeName, \".\").concat(valueName, \" should provide \\\"deprecationReason\\\" instead of \\\"isDeprecated\\\".\"));\n    return {\n      name: valueName,\n      description: valueConfig.description,\n      value: valueConfig.value !== undefined ? valueConfig.value : valueName,\n      isDeprecated: valueConfig.deprecationReason != null,\n      deprecationReason: valueConfig.deprecationReason,\n      extensions: valueConfig.extensions && toObjMap(valueConfig.extensions),\n      astNode: valueConfig.astNode\n    };\n  });\n}\n\n/**\n * Input Object Type Definition\n *\n * An input object defines a structured collection of fields which may be\n * supplied to a field argument.\n *\n * Using `NonNull` will ensure that a value must be provided by the query\n *\n * Example:\n *\n *     const GeoPoint = new GraphQLInputObjectType({\n *       name: 'GeoPoint',\n *       fields: {\n *         lat: { type: new GraphQLNonNull(GraphQLFloat) },\n *         lon: { type: new GraphQLNonNull(GraphQLFloat) },\n *         alt: { type: GraphQLFloat, defaultValue: 0 },\n *       }\n *     });\n *\n */\nexport var GraphQLInputObjectType = /*#__PURE__*/function () {\n  function GraphQLInputObjectType(config) {\n    this.name = config.name;\n    this.description = config.description;\n    this.extensions = config.extensions && toObjMap(config.extensions);\n    this.astNode = config.astNode;\n    this.extensionASTNodes = undefineIfEmpty(config.extensionASTNodes);\n    this._fields = defineInputFieldMap.bind(undefined, config);\n    typeof config.name === 'string' || devAssert(0, 'Must provide name.');\n  }\n\n  var _proto6 = GraphQLInputObjectType.prototype;\n\n  _proto6.getFields = function getFields() {\n    if (typeof this._fields === 'function') {\n      this._fields = this._fields();\n    }\n\n    return this._fields;\n  };\n\n  _proto6.toConfig = function toConfig() {\n    var _this$extensionASTNod5;\n\n    var fields = mapValue(this.getFields(), function (field) {\n      return {\n        description: field.description,\n        type: field.type,\n        defaultValue: field.defaultValue,\n        extensions: field.extensions,\n        astNode: field.astNode\n      };\n    });\n    return {\n      name: this.name,\n      description: this.description,\n      fields: fields,\n      extensions: this.extensions,\n      astNode: this.astNode,\n      extensionASTNodes: (_this$extensionASTNod5 = this.extensionASTNodes) !== null && _this$extensionASTNod5 !== void 0 ? _this$extensionASTNod5 : []\n    };\n  };\n\n  _proto6.toString = function toString() {\n    return this.name;\n  };\n\n  _proto6.toJSON = function toJSON() {\n    return this.toString();\n  } // $FlowFixMe[unsupported-syntax] Flow doesn't support computed properties yet\n  ;\n\n  _createClass(GraphQLInputObjectType, [{\n    key: SYMBOL_TO_STRING_TAG,\n    get: function get() {\n      return 'GraphQLInputObjectType';\n    }\n  }]);\n\n  return GraphQLInputObjectType;\n}(); // Print a simplified form when appearing in `inspect` and `util.inspect`.\n\ndefineInspect(GraphQLInputObjectType);\n\nfunction defineInputFieldMap(config) {\n  var fieldMap = resolveThunk(config.fields);\n  isPlainObj(fieldMap) || devAssert(0, \"\".concat(config.name, \" fields must be an object with field names as keys or a function which returns such an object.\"));\n  return mapValue(fieldMap, function (fieldConfig, fieldName) {\n    !('resolve' in fieldConfig) || devAssert(0, \"\".concat(config.name, \".\").concat(fieldName, \" field has a resolve property, but Input Types cannot define resolvers.\"));\n    return {\n      name: fieldName,\n      description: fieldConfig.description,\n      type: fieldConfig.type,\n      defaultValue: fieldConfig.defaultValue,\n      deprecationReason: fieldConfig.deprecationReason,\n      extensions: fieldConfig.extensions && toObjMap(fieldConfig.extensions),\n      astNode: fieldConfig.astNode\n    };\n  });\n}\n\nexport function isRequiredInputField(field) {\n  return isNonNullType(field.type) && field.defaultValue === undefined;\n}\n", "const memoized = new WeakMap();\n/**\n * Memoize a value for an object. This is useful for immer immutable objects\n * that want to generate a memoized value that does not get copied for newly\n * produced objects\n *\n * ```\n * class Something\n *   [immerable] = true;\n *\n *   constructor() {\n *     this.merges = [];\n *   }\n *\n *   expensiveCalculation() {\n *     return memoize(this, 'expensiveCalculation', () => doCalculation());\n *   }\n *\n *   merge(other) {\n *     return produce(this, draft => { draft.merges.push(other) });\n *   }\n * }\n *\n * const something1 = new Something();\n * const calc1 = something1.expensiveCalculation();\n * const something2 = something1.merge(new Something());\n * calc1 === something.expensiveCalculation(); // true\n * calc1 === something2.expensiveCalculation(); // false\n * ```\n *\n * @template T\n * @param {object} object\n * @param {string} key\n * @param {(() => T)} value\n * @returns {T}\n */\nexport function memoize(object, key, value) {\n  if (!memoized.has(object)) {\n    memoized.set(object, new Map());\n  }\n  const map = memoized.get(object);\n  if (!map.has(key)) {\n    map.set(key, value());\n  }\n  return map.get(key);\n}\n", "import { print } from \"graphql\";\nimport { enableMapSet, immerable, produce } from \"immer\";\nimport { camelize, classify, pluralize } from \"inflected\";\nimport ApplicationModel from \"./ApplicationModel\";\nimport Fragment from \"./Fragment\";\nimport { memoize } from \"../utils/memoize\";\nimport { modelObject } from \"./modelBuilder\";\n\nenableMapSet();\n\n/**\n * @typedef {Record<string, string | {type:string}>} FilterTypes\n */\n/**\n * @typedef {Record<string, Record<string, any>>} SelectionObject\n */\n/**\n * @typedef {string | SelectionObject} Selection\n */\n\n/**\n * A query builder for GraphQL queries. This is used to incrementally\n * create, save, and modify GraphQL queries without lots of string\n * processing.\n *\n * All query modifications return a new Query object, so previous versions\n * can be saved and reused.\n *\n * @template {typeof ApplicationModel} M\n * @template {InstanceType<M>} I\n */\nexport default class Query {\n  [immerable] = true;\n\n  /**\n   * Creates a new Query for `model`\n   *\n   * @param {M=} model The model used as the result of the query\n   */\n  constructor(model) {\n    this.model = model;\n    /**\n     * This is used to track the graphql types for filters. Subqueries will set\n     * it to the field args from the model\n     *\n     * @type {Record<string, string|undefined>}\n     */\n    this.paramTypes = { filters: this.model?.filterType };\n\n    this.attrs = new Set();\n    this.arguments = {};\n    this.filters = {};\n    this.sort = {};\n    /** @type {Record<string, Query<any, any>>} */\n    this.subqueries = {};\n    this._stats = new Set();\n    this.single = false;\n    /** @type {Record<string, Query<any, any>>} */\n    this.unions = null;\n  }\n\n  /**\n   * Adds `attrs` to the attributes selected by the query.\n   *\n   * Example: query.select(['id', 'name']);\n   *\n   * @param {...Selection[]} arguments\n   * @returns {Query<M,I>} A Query object selecting `attrs`\n   */\n  select(attrs) {\n    if (!attrs.forEach) {\n      attrs = Array.from(arguments);\n    }\n\n    return produce(this, (draft) => {\n      attrs.forEach((attr) => {\n        draft.attrs.add(attr);\n      });\n    });\n  }\n\n  /**\n   * Unions this query with another query, using GraphQL union\n   * types. Should only be used in subqueries.\n   *\n   * Example: new Query(Epic).select(['id', 'name'])\n   *            .union(new Query(Feature).select(['id', 'name']));\n   *\n   * @param {Query=} query The other query to union with this one\n   * @returns {Query<M,I>} A Query object selecting `attrs`\n   */\n  union(query) {\n    return produce(this, (draft) => {\n      if (!draft.unions) {\n        draft.unions = {};\n        draft.unions[draft.model.typename] = produce(draft, (subQueryDraft) => {\n          subQueryDraft.unions = {};\n        });\n      }\n\n      if (query) {\n        draft.unions[query.model.typename] = query;\n      }\n    });\n  }\n\n  /**\n   * When paginating, adds `stats` to the page attributes selected by\n   * the query.\n   *\n   * Example: query.stats(['isLastPage']);\n   *\n   * @param {string[]} attrs The attributes to select\n   * @returns {Query<M,I>} A Query object selecting `attrs` on the page level\n   */\n  stats(attrs) {\n    return produce(this, (draft) => {\n      attrs.forEach((attr) => draft._stats.add(attr));\n    });\n  }\n\n  /**\n   * When paginating, selects page `pageNumber`\n   *\n   * Example: query.page(2)\n   *\n   * @param {Number} pageNumber The page number to select\n   * @returns {Query<M,I>} A Query object selecting that page\n   */\n  page(pageNumber) {\n    return this.argument({ page: pageNumber });\n  }\n\n  /**\n   * When paginating, sets the number of results per page\n   *\n   * Example: query.per(50)\n   *\n   * @param {Number} perPage The number of results per page\n   * @returns {Query<M,I>} An updated Query object\n   */\n  per(perPage) {\n    return this.argument({ per: perPage });\n  }\n\n  /**\n   * Adds bare, top-level arguments to the query\n   *\n   * Example: query.argument({timeout: 1000})\n   *\n   * @param {object} args The top-level arguments to add\n   * @returns {Query<M,I>} An updated Query object\n   */\n  argument(args) {\n    return produce(this, (draft) => {\n      draft.arguments = { ...draft.arguments, ...args };\n    });\n  }\n\n  /**\n   * Adds filters to the query\n   *\n   * Example: query.where({projectId: 15})\n   *\n   * @param {object} filters The filters to add to the query\n   * @returns {Query<M,I>} An updated Query object with those filters added\n   */\n  where(filters) {\n    return this.rewhere({ ...this.filters, ...filters });\n  }\n\n  /**\n   * Resets the filters on the query\n   *\n   * Example: query.rewhere({projectId: 15})\n   *\n   * @param {object} filters The filters to set on the query\n   * @returns {Query<M,I>} An updated Query object with those filters added and all others removed\n   */\n  rewhere(filters) {\n    return produce(this, (draft) => {\n      draft.filters = filters;\n    });\n  }\n\n  /**\n   * Adds a criteria for ordering. Will be added to the end of the order list.\n   *\n   * Example: query.order({createdAt: 'ASC'});\n   *\n   * @param {object} criteria A one-key object where the key is an order attribute name and the value is a direction\n   * @returns {Query<M,I>} An updated Query object with that order criteria added to it\n   */\n  order(criteria) {\n    return this.reorder({ ...this.sort, ...criteria });\n  }\n\n  /**\n   * Resets all criteria for ordering.\n   *\n   * Example: query.reorder({createdAt: 'ASC'});\n   *\n   * @param {object} criteria A one-key object where the key is an order attribute name and the value is a direction\n   * @returns {Query<M,I>} An updated Query object with that order criteria set to it\n   */\n  reorder(criteria) {\n    return produce(this, (draft) => {\n      draft.sort = criteria ?? {};\n    });\n  }\n\n  /**\n   * When called, the query will select a single object instead of multiple.\n   *\n   * Example: query.first();\n   *\n   * @returns {Query<M,I>} An updated Query object selecting a single record\n   */\n  first() {\n    return produce(this, (draft) => {\n      draft.single = true;\n    });\n  }\n\n  /**\n   * Adds a subquery to select deeply nested records.\n   *\n   * Example: Workflow.select(['id']).merge({\n   *   workflowStatuses: WorkflowStatus.select([\n   *     'id',\n   *     'name',\n   *     'color',\n   *     'position',\n   *   ]),\n   * });\n   *\n   * @param {object} subqueries The subqueries to merge into this query, where the key is an attribute name and the value is a Query object.\n   * @returns {Query<M,I>} An updated Query object including the nested subqueries\n   */\n  merge(subqueries) {\n    Object.entries(subqueries).forEach(([name, value]) => {\n      subqueries = produce(subqueries, (draft) => {\n        // Convert bare lists of columns into generic subqueries that\n        // cannot run on their own.\n        //\n        // TODO: at the moment subqueries cannot be paginated. Only the top\n        // level lists can be paginated and return nodes. This can be addressed\n        // by adding metadata to the hasMany(). Right now just setting single=true\n        if (Array.isArray(value)) {\n          draft[name] = new Query().select(value).first();\n        } else {\n          draft[name] = produce(draft[name], (draft) => {\n            draft.paramTypes = this.model.fields[name]?.args;\n            draft.single = true;\n          });\n        }\n      });\n    });\n\n    return produce(this, (draft) => {\n      draft.subqueries = { ...draft.subqueries, ...subqueries };\n    });\n  }\n\n  /**\n   * Executes this query, finding a single record by ID.\n   *\n   * @param {string} id The object id to request\n   * @returns {Promise<I|undefined>} The requested model, or undefined if it couldn't be found.\n   */\n  async find(id) {\n    const query = this.argument({ id }).first();\n\n    const data = await ApplicationModel.client.query(query.query, {\n      variables: query.queryVariables,\n    });\n\n    if (data) {\n      return modelObject(data, { query })[query.queryName];\n    }\n  }\n\n  /**\n   * Executes this query.\n   *\n   * @returns {Promise<import('./ModelCollection').default|undefined>} The requested models, or undefined if it couldn't be found.\n   */\n  async all() {\n    const data = await ApplicationModel.client.query(this.queryString, {\n      variables: this.queryVariables,\n    });\n\n    if (data) {\n      return modelObject(data, { query: this })[this.queryName];\n    }\n  }\n\n  /**\n   * Fetch *all* records from multiple pages. `pageCallback` will be\n   * called for each page as it arrives. If no callback is specified,\n   * will return all of the records found. If a callback is specified,\n   * it is assumed that the caller will handle the records, and the\n   * return value will be empty.\n   *\n   * @param {function} [pageCallback] a callback called with a list of records for every page as it arrives\n   * @returns {Promise<I[]>} An array of the requested records, if no callback is given\n   */\n  async findInBatches(pageCallback) {\n    let currentPage = 1;\n    let isLastPage = false;\n    const totalRecords = [];\n    pageCallback =\n      pageCallback ??\n      ((page) => totalRecords.push(...page.materializeRecords()));\n\n    do {\n      let page = await this.page(currentPage).stats([\"isLastPage\"]).all();\n\n      await pageCallback(page);\n      isLastPage = page.isLastPage || page.nodes.length === 0;\n      currentPage++;\n    } while (!isLastPage);\n\n    return totalRecords;\n  }\n\n  /**\n   * Returns the name for the query based on the model used to construct it.\n   *\n   * @returns {string} The query name\n   */\n  get queryName() {\n    let queryName = camelize(this.model.typename, false);\n    if (!this.single) {\n      queryName = pluralize(queryName);\n    }\n    return queryName;\n  }\n\n  /**\n   * Returns the name of the constructed graphql query\n   */\n  get queryFunctionName() {\n    return classify(this.queryName);\n  }\n\n  /**\n   * Returns the variables to send with the graphql query\n   */\n  get queryVariables() {\n    return this.queryFragment.toVariables();\n  }\n\n  /**\n   * Returns the parameter list to add to the graphql query based on the set\n   * filters\n   */\n  get queryParametersString() {\n    const params = this.queryFragment.toParameters();\n\n    if (params.length === 0) return \"\";\n\n    return (\n      \"(\" + params.map(([name, type]) => `$${name}: ${type}`).join(\", \") + \")\"\n    );\n  }\n\n  /**\n   * Returns the DocumentNode version fo the GraphQL query\n   */\n  get query() {\n    if (!this.model.typename) {\n      throw new Error(\n        `Model ${this.model} has no typename and thus cannot be used in query builder. Did you forget to add an annotation like \\`static typename = 'releases';\\` to the model class?`\n      );\n    }\n\n    const fragment = this.queryFragment;\n    return fragment.toDocument(this.queryFunctionName);\n  }\n\n  /**\n   * Returns the plain string version of the GraphQL query corresponding to this object.\n   *\n   * @returns {string} A GraphQL query\n   */\n  get queryString() {\n    return print(this.query);\n  }\n\n  /**\n   * @returns {string?} the key that will likely be used to cache the result of\n   * this query, or undefined if it cannot be determined from the information\n   * in this query.\n   */\n  get cacheId() {\n    if (this.single && this.arguments[\"id\"] && this.attrs.has(\"id\")) {\n      return ApplicationModel.client.cacheId({\n        __typename: this.model.name,\n        ...this.filters,\n        ...this.arguments,\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   * @param {Fragment} fragment\n   */\n  buildFragmentArguments(fragment) {\n    // Add the filter parameter\n    if (this.filters && Object.keys(this.filters).length > 0) {\n      fragment = fragment.argument(\n        \"filters\",\n        this.filters,\n        this.paramTypes.filters\n      );\n    }\n\n    // Add the sort parameter\n    if (Object.keys(this.sort).length > 0) {\n      fragment = fragment.argument(\n        \"order\",\n        Object.entries(this.sort).reduce(\n          (acc, [name, direction]) => [...acc, { name, direction }],\n          []\n        ),\n        `[${this.model.typename}OrderClause!]`\n      );\n    }\n\n    // Add any additionally defined parameters (id, page, etc)\n    fragment = Object.entries(this.arguments || {}).reduce(\n      (fragment, [name, value]) =>\n        fragment.argument(name, value, this.paramTypes[name]),\n      fragment\n    );\n\n    return fragment;\n  }\n\n  /**\n   * Either add the union fragments (if this is a union query) or the subqueries\n   * and attributes, to a fragment\n   *\n   * @hidden\n   * @param {Fragment} fragment\n   */\n  buildFragmentSubqueries(fragment) {\n    // Get the fragments from the union queries. If there are any then they'll\n    // take the place of this fragment\n    const unionFragments = Object.values(this.unions || {}).map((query) =>\n      query.buildQueryFragment(null, true)\n    );\n\n    if (unionFragments.length > 0) {\n      return fragment.fragment(...unionFragments);\n    } else {\n      // Get all the subquery fragments and set their names to the subquery\n      // attr\n      const subqueryFragments = Object.entries(this.subqueries).map(\n        ([name, subquery]) => subquery.buildQueryFragment(name)\n      );\n\n      const attrFragments = Array.from(this.attrs)\n        .filter((attr) => typeof attr !== \"string\")\n        .flatMap((/** @type {SelectionObject} */ attr) =>\n          Object.entries(attr).map(([name, args]) =>\n            Object.entries(args).reduce(\n              (acc, [arg, value]) => acc.argument(arg, value),\n              new Fragment(name)\n            )\n          )\n        );\n\n      return fragment\n        .fragment(...subqueryFragments)\n        .fragment(...attrFragments)\n        .attr(\n          ...Array.from(this.attrs).filter((attr) => typeof attr === \"string\")\n        );\n    }\n  }\n\n  /**\n   * Build the graphql fragment tree for this query\n   *\n   * @hidden\n   * @param {string} name\n   * @param {boolean} union Indicates this query should be built as a union\n   * @return {Fragment}\n   */\n  buildQueryFragment(name = this.queryName, union = false) {\n    let fragment = new Fragment(name, this.model?.typename);\n\n    if (union) {\n      fragment = fragment.union();\n    } else {\n      fragment = this.buildFragmentArguments(fragment);\n    }\n\n    if (!union && !this.single) {\n      // For list queries with paginated output we create a completely new\n      // fragment that becomes the top level fragments only child, set the\n      // query to 'nodes' and add all the attrs and subqueries to that\n      return fragment\n        .fragment(this.buildFragmentSubqueries(new Fragment(\"nodes\")))\n        .attr(...Array.from(this._stats));\n    }\n\n    return this.buildFragmentSubqueries(fragment);\n  }\n\n  /**\n   * Get the resolved immutable graphql fragment tree for this query\n   */\n  get queryFragment() {\n    return memoize(this, \"queryFragment\", () =>\n      this.buildQueryFragment().resolve()\n    );\n  }\n}\n", "/**\n * A simple proxy to represent a pointer to the model that instantiated this\n * one.\n *\n * ```js\n * const feature = await Feature.select('id').merge({description: Note.select('htmlBody')}).find('TTT-123');\n * const note = feature.description;\n * note.parent // this is a RelationAttribute\n * note.parent.typename // Feature\n * note.parent.attribute // 'description'\n * ```\n */\nexport class RelationAttribute {\n  /**\n   * @param {import('./ApplicationModel').default} model\n   * @param {string=} attribute\n   */\n  constructor(model, attribute) {\n    // @ts-ignore\n    return new Proxy(model, {\n      get(target, prop, receiver) {\n        if (prop === 'attribute') return attribute;\n        return Reflect.get(target, prop, receiver);\n      },\n      has(target, prop) {\n        if (prop === 'attribute') return true;\n        return Reflect.has(target, prop);\n      },\n    });\n  }\n}\n", "import { raw } from \"@nx-js/observer-util\";\nimport { classify } from \"inflected\";\nimport addProxyInstanceOf from \"../utils/addProxyInstanceOf\";\nimport { pick } from \"lodash\";\nimport EnumValue from \"./EnumValue\";\nimport Errors from \"./Errors\";\nimport Fragment from \"./Fragment\";\nimport { modelAttribute } from \"./modelBuilder\";\nimport Query from \"./Query\";\nimport { RelationAttribute } from \"./RelationAttribute\";\n\n// Global client instance.\nlet client = null;\n\nlet objectIdCounter = 0;\n\n/**\n * Wraps a GraphQL object, decorating it with other fields and helpful\n * accessors. The idea is that it should feel close to Rails, and\n * should use similar names and patterns where they make sense.\n *\n * To improve performance, attributes are kept in their primitive form\n * until they are accessed for the first time. For example, a deeply\n * nested object will not be wrapped in a model until it's\n * accessed. Bringing an attribute into its realized form is called\n * `instantiating`.\n */\nexport default class ApplicationModel {\n  /** @type {string} */\n  static typename = null;\n\n  /**\n   * Starts a new query. This is usually what you want to use to\n   * create Rails-like scopes.\n   *\n   * @param {Parameters<Query['select']>} attrs The attributes to select in the\n   * query.\n   * @returns {Query}\n   */\n  static select(...attrs) {\n    return new Query(this).select(...attrs);\n  }\n  static where(...attrs) {\n    return new Query(this).where(...attrs);\n  }\n\n  /**\n   * Returns the current client for making GraphQL requests.\n   * @returns {import('./ApolloModelClient').default}\n   */\n  static get client() {\n    return client;\n  }\n\n  static set client(newClient) {\n    client = newClient;\n  }\n\n  /**\n   * Fetch *all* records, even if there are multiple\n   * pages. `pageCallback` will be called for each page as it\n   * arrives. If no callback is specified, will return all of the\n   * records found.\n   *\n   * @param {Query} scope\n   */\n  static async fetchAll(scope, pageCallback) {\n    return scope.findInBatches(pageCallback);\n  }\n\n  /**\n   * Creates a copy of a model that can be used as a \"blank\" object. A\n   * \"blank\" object, when assigned to an assocation, will null out the\n   * association.\n   */\n  static blank(attrs, options = {}) {\n    const object = new this({ id: null, ...attrs }, options);\n    return object;\n  }\n\n  static isModel(value) {\n    if (value === null || value === undefined) {\n      return false;\n    } else if (Array.isArray(value)) {\n      return value.some((o) => this.isModel(o));\n    } else if (value.__typename) {\n      return true;\n    } else if (value instanceof ApplicationModel) {\n      return true;\n    }\n    return false;\n  }\n\n  static hasField(fieldName) {\n    return fieldName in this.fields;\n  }\n\n  static reactivePatternToCacheId(pattern) {\n    const [name, id] = pattern.split(\"-\");\n    return [name.replace(\"::\", \"\"), id].join(\":\");\n  }\n\n  /**\n   * Returns the id for the instance of this model referred to by\n   * `pattern`. For example, calling this on `Feature-123` will\n   * return `123`.\n   */\n  static idFromReactivePattern(pattern) {\n    const match = pattern\n      .replace(\"::\", \"\")\n      .match(new RegExp(`^${this.typename}-(\\\\d+)`));\n    return match?.[1];\n  }\n\n  /**\n   * Hash of all defined models.\n   * @type {Record<string, typeof ApplicationModel>}\n   */\n  static models = {};\n\n  /**\n   * The graphql type used for create and update attributes\n   * @type {string}\n   */\n  static inputType = undefined;\n\n  /**\n   * Hash of fields defined on this model.\n   * @type {{[index: string]: any}}\n   */\n  static fields = undefined;\n\n  /**\n   * The graphql type for list* queries filters parameter\n   * @type {string}\n   */\n  static filterType = undefined;\n\n  /**\n   * Hash of filters defined on this model.\n   */\n  static filters = {};\n\n  /**\n   * @template T\n   * @param {Fragment} fragment\n   * @returns {Promise<T>}\n   */\n  static async query(fragment) {\n    const resolvedFragment = fragment.resolve();\n\n    return ApplicationModel.client.query(\n      resolvedFragment.toDocument(fragment.name, \"query\"),\n      {\n        variables: resolvedFragment.toVariables(),\n      }\n    );\n  }\n\n  /**\n   * Used to build a standard error fragment\n   *\n   * @returns {Fragment}\n   */\n  static buildErrorFragment() {\n    return new Fragment(\"errors\").fragment(\n      new Fragment(\"attributes\").attr(\n        \"name\",\n        \"messages\",\n        \"fullMessages\",\n        \"codes\"\n      )\n    );\n  }\n\n  /**\n   * Turn the given fragment into a mutation query, add standard error\n   * attributes and send to the API\n   *\n   * @param {Fragment} fragment\n   * @returns {Promise<any>} The return data from the mutation\n   */\n  static async mutate(fragment) {\n    const mutationFragment = fragment\n      .fragment(ApplicationModel.buildErrorFragment())\n      .resolve();\n\n    return ApplicationModel.client.mutate(\n      mutationFragment.toDocument(classify(mutationFragment.name), \"mutation\"),\n      { variables: mutationFragment.toVariables() }\n    );\n  }\n\n  /**\n   * Creates a new instance of this model with the specified\n   * attributes.\n   *\n   * @param {object} attributes Attributes used to construct the object\n   * @param {object} options\n   * @param {Query=} options.query A query object used to reselect attributes after saving\n   * @param {RelationAttribute=} options.parent The parent of the model\n   *\n   * `options`:\n   *   - `query`: A Query object used to reselect attributes after saving\n   *   - `parent`: The parent of the model\n   */\n  constructor(attributes = {}, options = {}) {\n    this.internalObjectId = objectIdCounter++;\n    this.attributes = {};\n    this.local = {};\n    this.options = options;\n    this.instantiatedAttributes = {};\n    this.dirtyAttributes = new Set();\n    this.cacheId = client.cacheId(attributes);\n\n    this.query = new Query(this.constructor).first();\n    if (this.constructor.hasField(\"id\")) {\n      this.query = this.query.select(\"id\");\n    }\n    if (options.query) {\n      let originalQuery = options.query;\n      if (originalQuery.unions) {\n        originalQuery = originalQuery.unions[this.constructor.typename];\n        if (!originalQuery) {\n          throw new Error(\n            `${\n              this.constructor.typename\n            } returned but union only contained ${Object.keys(\n              options.query.unions\n            ).join(\",\")}`\n          );\n        }\n      }\n\n      this.query = this.query\n        .select(originalQuery.attrs)\n        .merge(originalQuery.subqueries);\n    }\n    if (options.parent) {\n      this._parent = options.parent;\n    }\n\n    this.defineAccessors();\n    this.resetAttributes(attributes);\n\n    // Don't allow new properties to be added to this model. Prevents\n    // accidentally treating attributes like properties. Only applies when\n    // we are not testing so that we can still mock implementations.\n    if (typeof jest === \"undefined\") {\n      Object.seal(this);\n    }\n  }\n\n  /**\n   * ```\n   * const feature = await Feature.select('id').merge({'requirements': ['id']}).find('FEAT-1');\n   * feature.parent // undefined, this was the root model\n   * feature.requirements[0].parent === feature\n   * // Get the attribute that loaded the requirement\n   * feature.requirements[0].parent.attribute === 'requirements'\n   * ```\n   *\n   * @return {RelationAttribute} The model that loaded this model. This will be\n   * undefined for the root model of the query.\n   */\n  get parent() {\n    return this._parent;\n  }\n\n  /**\n   * @returns {boolean} `true` if the object is an existing record, `false` otherwise.\n   */\n  get persisted() {\n    return !!this.id;\n  }\n\n  /**\n   * @returns {number} A guaranteed unique identifier for the record. Returns internalObjectId if id is falsy (unsaved).\n   */\n  get uniqueId() {\n    return this.id || this.internalObjectId;\n  }\n\n  get typename() {\n    return this.constructor.typename;\n  }\n\n  /**\n   * Returns a shallow duplicate of this record.\n   */\n  dup() {\n    return new this.constructor({ ...this.attributes }, { ...this.options });\n  }\n\n  /**\n   * Dynamically define a getter and setter for each attribute of this model.\n   *\n   * NOTE: This will only create accessors for attributes that are\n   * used to create an instance or selected in a query.\n   */\n  defineAccessors() {\n    if (!this.constructor.fields) {\n      throw new Error(\n        `Fields must be defined for model ${this.constructor.typename}`\n      );\n    }\n    Object.keys(this.constructor.fields).forEach((attribute) => {\n      if (this.hasOwnProperty(attribute)) return;\n\n      Object.defineProperty(this, attribute, {\n        get: function () {\n          return this.getAttribute(attribute);\n        },\n        set: function (newValue) {\n          this.setAttribute(attribute, newValue);\n        },\n        configurable: true,\n      });\n    });\n  }\n\n  /**\n   * @returns {boolean} `false` if the attribute `name` refers to a primitive value, `true` otherwise.\n   */\n  isRelationship(name) {\n    const field = this.constructor.fields[name];\n    return field.type === \"belongsTo\" || field.type === \"hasMany\";\n  }\n\n  /**\n   * @param {string} name\n   */\n  getAttribute(name) {\n    // We lazily instantiate model instances as they are needed.\n    // If we already have a model or array of models for this attr,\n    // return it.\n    if (name in this.instantiatedAttributes) {\n      return this.instantiatedAttributes[name];\n    } else {\n      const rawAttr = this.attributes[name];\n      if (typeof rawAttr === \"undefined\") {\n        // Don't trigger an update since nothing changed, we are simply caching the value.\n        raw(this).instantiatedAttributes[name] = undefined;\n        return undefined;\n      }\n      const options = {\n        query: this.query.subqueries[name],\n        parent: new RelationAttribute(this, name),\n      };\n      const value = modelAttribute(rawAttr, options);\n\n      // Use raw here to prevent triggering an update. We are just\n      // caching a resolved value.\n      raw(this).instantiatedAttributes[name] = value;\n      if (this.attributes[name] === undefined) {\n        this.attributes[name] = value;\n      }\n\n      return value;\n    }\n  }\n\n  /**\n   * @returns {*} The value of the attribute `name`, without unnecessarily instantiating it.\n   */\n  getAttributeWithoutInstantiating(name) {\n    // return this.instantiatedAttributes[name] ?? this.attributes[name];\n    if (name in this.instantiatedAttributes) {\n      return this.instantiatedAttributes[name];\n    }\n    return this.attributes[name];\n  }\n\n  /**\n   * Compares two values for purposes of dirty tracking.\n   *\n   * @param {*} oldValue The existing value\n   * @param {*} newValue The value to be changed to\n   * @returns {boolean} `true` if the objects are equal, `false` otherwise.\n   */\n  isEqual(oldValue, newValue) {\n    // TODO: Better dirty tracking (based on real equality)\n    return oldValue === newValue;\n  }\n\n  /**\n   * Sets the attribute `name` to `value`. This function can be used\n   * even if this object didn't declare a setter for the attribute\n   * `name`.\n   *\n   * @param {string} name The attribute name\n   * @param {*} value The new attribute value\n   * @param {boolean} flagDirty When true, will also perform dirty checks for uninstantiated attributes\n   */\n  setAttribute(name, value, flagDirty = true) {\n    if (name in this.instantiatedAttributes) {\n      if (!this.isEqual(this.instantiatedAttributes[name], value)) {\n        this.flagDirty(name);\n      }\n    } else if (flagDirty) {\n      if (!this.isEqual(this.attributes[name], value)) {\n        this.flagDirty(name);\n      }\n    }\n\n    this.instantiatedAttributes[name] = value;\n\n    if (this.attributes[name] === undefined) {\n      this.attributes[name] = value;\n    }\n  }\n\n  /**\n   * Flag an attribute as dirty / changed\n   *\n   * @param {string} name The attribute name\n   */\n  flagDirty(name) {\n    this.dirtyAttributes.add(name);\n  }\n\n  /**\n   * @returns {boolean} `true` if the object's attributes have been modified, `false` otherwise.\n   */\n  isDirty() {\n    return this.dirtyAttributes.size > 0;\n  }\n\n  /**\n   * @param {string} name The attribute name to check\n   * @returns {boolean} `true` if the given attribute has been modeified\n   */\n  isAttributeDirty(name) {\n    return this.dirtyAttributes.has(name);\n  }\n\n  resetAttributes(newAttrs, errors = {}) {\n    this.errors = new Errors(errors);\n    if (newAttrs) {\n      // Update attributes that are not `isEqual` to the old attributes.\n      Object.entries(newAttrs).forEach(([name, value]) => {\n        if (!this.isEqual(this.getAttributeWithoutInstantiating(name), value)) {\n          this.attributes[name] = value;\n          delete this.instantiatedAttributes[name];\n        }\n      });\n\n      this.dirtyAttributes.clear();\n    }\n\n    // For new records, flag all specified attributes as dirty so\n    // they're all sent during save\n    if (!this.persisted && newAttrs) {\n      Object.entries(newAttrs).forEach(([name, value]) => {\n        if (value !== undefined) {\n          this.flagDirty(name);\n        }\n      });\n    }\n  }\n\n  /**\n   * Sends a GraphQL mutation request, updating the current object from the response.\n   *\n   * @param {Fragment} fragment\n   * @param {object} options All data passed along to generate the mutation query.\n   * @param {Query=} options.query The Query object used to update data from the mutation response\n   * @param {boolean=} options.reset Whether to reset the attributes or not, defaults to true.\n   *\n   * @returns {Promise<boolean>} `true` if the mutation ran without errors, `false` otherwise.\n   */\n  async mutate(fragment, options = {}) {\n    const query = options.query || this.query;\n    const data = await ApplicationModel.mutate(\n      fragment.fragment(query.buildQueryFragment())\n    );\n\n    this.query = query;\n    const queryName = this.query.queryName;\n\n    const mutationData = data[fragment.name];\n    const newAttributes = mutationData[queryName];\n    const errors = mutationData.errors;\n    const { reset = true } = options;\n\n    if (reset) {\n      this.resetAttributes(newAttributes, errors);\n    }\n\n    return this.errors.isEmpty;\n  }\n\n  /**\n   * Converts an attribute value ready for graphql mutation\n   * mutation\n   *\n   * @param {string} key\n   * @returns {any}\n   */\n  prepareAttributeForQuery(key) {\n    const value = this.getAttributeWithoutInstantiating(key);\n    const methodName = `${key}ForQuery`;\n\n    if (typeof this[methodName] === \"function\") {\n      return this[methodName](value);\n    } else if (this.isRelationship(key)) {\n      if (!value) {\n        return value;\n      }\n\n      const field = this.constructor.fields[key];\n\n      if (field && field.writeShape) {\n        return field.writeShape.reduce((acc, shapeKey) => {\n          // Skip undefined, but allow null so that a record can be removed from\n          // an association\n          if (value[shapeKey] === undefined) return acc;\n          return { ...acc, [shapeKey]: value[shapeKey] };\n        }, {});\n      }\n\n      if (\"id\" in value) {\n        // We will use the 'id' field if it is `null` so that a record can be\n        // removed from an association.\n        return { id: value.id };\n      } else {\n        return value;\n      }\n    } else if (value instanceof EnumValue) {\n      return value.value;\n    } else {\n      return value;\n    }\n  }\n\n  /**\n   * Converts the attributes in `attributeKeys` to attributes that can\n   * be interpolated into a GraphQL arguments list. For example, will\n   * deep-convert arrays and objects, will wrap strings in \"\".\n   *\n   * @param {string[]} attributeKeys A list of attributes to convert\n   *\n   * @returns {Record<string, any>} An object with the converted attributes object.\n   */\n  prepareAttributesForQuery(attributeKeys) {\n    return attributeKeys.reduce(\n      (acc, key) => ({ ...acc, [key]: this.prepareAttributeForQuery(key) }),\n      {}\n    );\n  }\n\n  /**\n   * Updates or creates this record using a GraphQL mutation. Will use the\n   * `update{ModelName}` or `create{ModelName}` mutations, respectively. Sends\n   * all changed attributes and relationships as arguments, and, by default,\n   * updates attributes using the query used to construct this object.\n   *\n   * @param {object} options Data used to modify the mutation query.\n   * @param {object=} options.args Bare, top-level (non-attribute) arguments passed along with the mutation. These will be at the same level as `id`, for example.\n   * @param {Query=} options.query A Query object used to override the default query.\n   * @param {boolean=} options.always When true, will always perform the mutation even if no data has changed. Useful for forcing the object's attributes to update, even when there's nothing to save.\n   *\n   * @returns {Promise<boolean>} `true` if the mutation ran without errors, `false` otherwise.\n   */\n  async save(options = {}) {\n    if (!this.isDirty() && !options.always) return true;\n\n    let fragment = this.persisted\n      ? new Fragment(`update${this.typename}`).argument(\"id\", this.id)\n      : new Fragment(`create${this.typename}`);\n\n    const args = {\n      attributes: this.prepareAttributesForQuery(\n        Array.from(this.dirtyAttributes)\n      ),\n      ...options.args,\n    };\n\n    Object.entries(args).forEach(([key, value]) => {\n      fragment = fragment.argument(\n        key,\n        value,\n        key === \"attributes\" ? this.constructor.inputType : null\n      );\n    });\n\n    return this.mutate(fragment, pick(options, \"query\"));\n  }\n\n  /**\n   * Reload the model from the API. If a query option is provided then that\n   * query will be used for the reload.\n   *\n   * @param {object} options\n   * @param {Query=} options.query\n   */\n  async reload(options = {}) {\n    if (!this.persisted) {\n      throw new Error(\"Cannot reload unsaved record.\");\n    }\n\n    const query = options.query || this.query;\n    const newRecord = await query.find(this.id);\n    this.resetAttributes(newRecord.attributes);\n  }\n\n  /**\n   * Load additional attributes from the API:\n   *\n   * ```\n   * const feature = await Feature.select('referenceNum').find('FEAT-123');\n   * feature.name => null\n   * await feature.loadAttributes('name');\n   * feature.name => 'Feature 123'\n   * ```\n   *\n   * @param  {...any} attributes\n   */\n  async loadAttributes(...attributes) {\n    await this.reload({\n      query: this.query.select(attributes),\n    });\n  }\n\n  /**\n   * Destroys this record using the `delete{ModelName}` GraphQL\n   * mutation.\n   *\n   * @returns {Promise<boolean>} `true` if the mutation ran without errors, `false` otherwise.\n   */\n  destroy() {\n    if (!this.persisted) {\n      throw new Error(\"Can't destroy a non-persisted model\");\n    }\n\n    return this.mutate(\n      new Fragment(`delete${this.typename}`).argument(\"id\", this.id)\n    );\n  }\n\n  /**\n   * Extends instances of this model with the properties defined in\n   * `mixin`. Will overwrite any existitng properties of the same\n   * name.\n   */\n  static extend(mixin) {\n    Object.keys(mixin).forEach((key) => {\n      const descriptor = Object.getOwnPropertyDescriptor(mixin, key);\n      Object.defineProperty(this.prototype, key, descriptor);\n    });\n  }\n}\n\nexport function attr(options = {}) {\n  return { type: \"attr\", ...options };\n}\nexport function belongsTo(options = {}) {\n  return { type: \"belongsTo\", ...options };\n}\nexport function hasMany(options = {}) {\n  return { type: \"hasMany\", ...options };\n}\n\naddProxyInstanceOf(ApplicationModel);\n", "import tslib from '../tslib.js';\r\nconst {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n} = tslib;\r\nexport {\r\n    __extends,\r\n    __assign,\r\n    __rest,\r\n    __decorate,\r\n    __param,\r\n    __metadata,\r\n    __awaiter,\r\n    __generator,\r\n    __exportStar,\r\n    __createBinding,\r\n    __values,\r\n    __read,\r\n    __spread,\r\n    __spreadArrays,\r\n    __spreadArray,\r\n    __await,\r\n    __asyncGenerator,\r\n    __asyncDelegator,\r\n    __asyncValues,\r\n    __makeTemplateObject,\r\n    __importStar,\r\n    __importDefault,\r\n    __classPrivateFieldGet,\r\n    __classPrivateFieldSet,\r\n};\r\n", "const genericMessage = \"Invariant Violation\";\nconst {\n  setPrototypeOf = function (obj: any, proto: any) {\n    obj.__proto__ = proto;\n    return obj;\n  },\n} = Object as any;\n\nexport class InvariantError extends Error {\n  framesToPop = 1;\n  name = genericMessage;\n  constructor(message: string | number = genericMessage) {\n    super(\n      typeof message === \"number\"\n        ? `${genericMessage}: ${message} (see https://github.com/apollographql/invariant-packages)`\n        : message\n    );\n    setPrototypeOf(this, InvariantError.prototype);\n  }\n}\n\nexport function invariant(\n  condition: any,\n  message?: string | number,\n): asserts condition {\n  if (!condition) {\n    throw new InvariantError(message);\n  }\n}\n\nconst verbosityLevels = [\"debug\", \"log\", \"warn\", \"error\", \"silent\"] as const;\nexport type VerbosityLevel = (typeof verbosityLevels)[number];\nexport type ConsoleMethodName = Exclude<VerbosityLevel, \"silent\">;\nlet verbosityLevel = verbosityLevels.indexOf(\"log\");\n\nfunction wrapConsoleMethod<M extends ConsoleMethodName>(name: M) {\n  return function () {\n    if (verbosityLevels.indexOf(name) >= verbosityLevel) {\n      // Default to console.log if this host environment happens not to provide\n      // all the console.* methods we need.\n      const method = console[name] || console.log;\n      return method.apply(console, arguments as any);\n    }\n  } as (typeof console)[M];\n}\n\nexport namespace invariant {\n  export const debug = wrapConsoleMethod(\"debug\");\n  export const log = wrapConsoleMethod(\"log\");\n  export const warn = wrapConsoleMethod(\"warn\");\n  export const error = wrapConsoleMethod(\"error\");\n}\n\nexport function setVerbosity(level: VerbosityLevel): VerbosityLevel {\n  const old = verbosityLevels[verbosityLevel];\n  verbosityLevel = Math.max(0, verbosityLevels.indexOf(level));\n  return old;\n}\n\nexport default invariant;\n", "export function maybe<T>(thunk: () => T): T | undefined {\n  try { return thunk() } catch {}\n}\n", "import { maybe } from \"./maybe\";\n\ndeclare global {\n  const __DEV__: boolean | undefined;\n}\n\nexport default (\n  maybe(() => globalThis) ||\n  maybe(() => window) ||\n  maybe(() => self) ||\n  maybe(() => global) ||\n  maybe(() => Function(\"return this\")())\n) as typeof globalThis & {\n  __DEV__: typeof __DEV__;\n};\n", "import global from \"../common/global\";\nimport { maybe } from \"../common/maybe\";\n\n// To keep string-based find/replace minifiers from messing with __DEV__ inside\n// string literals or properties like global.__DEV__, we construct the \"__DEV__\"\n// string in a roundabout way that won't be altered by find/replace strategies.\nconst __ = \"__\";\nconst GLOBAL_KEY = [__, __].join(\"DEV\");\n\nfunction getDEV() {\n  try {\n    return Boolean(__DEV__);\n  } catch {\n    Object.defineProperty(global, GLOBAL_KEY, {\n      // In a buildless browser environment, maybe(() => process.env.NODE_ENV)\n      // evaluates as undefined, so __DEV__ becomes true by default, but can be\n      // initialized to false instead by a script/module that runs earlier.\n      value: maybe(() => process.env.NODE_ENV) !== \"production\",\n      enumerable: false,\n      configurable: true,\n      writable: true,\n    });\n    // Using computed property access rather than global.__DEV__ here prevents\n    // string-based find/replace strategies from munging this to global.false:\n    return (global as any)[GLOBAL_KEY];\n  }\n}\n\nexport default getDEV();\n", "function maybe(thunk) {\n  try { return thunk() } catch (_) {}\n}\n\nconst safeGlobal = (\n  maybe(function() { return globalThis }) ||\n  maybe(function() { return window }) ||\n  maybe(function() { return self }) ||\n  maybe(function() { return global }) ||\n  maybe(function() { return Function(\"return this\")() })\n);\n\nlet needToRemove = false;\n\nexport function install() {\n  if (safeGlobal &&\n      !maybe(function() { return process.env.NODE_ENV }) &&\n      !maybe(function() { return process })) {\n    Object.defineProperty(safeGlobal, \"process\", {\n      value: {\n        env: {\n          // This default needs to be \"production\" instead of \"development\", to\n          // avoid the problem https://github.com/graphql/graphql-js/pull/2894\n          // will eventually solve, once merged and released.\n          NODE_ENV: \"production\",\n        },\n      },\n      // Let anyone else change global.process as they see fit, but hide it from\n      // Object.keys(global) enumeration.\n      configurable: true,\n      enumerable: false,\n      writable: true,\n    });\n    needToRemove = true;\n  }\n}\n\n// Call install() at least once, when this module is imported.\ninstall();\n\nexport function remove() {\n  if (needToRemove) {\n    delete safeGlobal.process;\n    needToRemove = false;\n  }\n}\n", "// The ordering of these imports is important, because it ensures the temporary\n// process.env.NODE_ENV polyfill is defined globally (if necessary) before we\n// import { isType } from 'graphql'. The instanceOf function that we really care\n// about (the one that uses process.env.NODE_ENV) is not exported from the\n// top-level graphql package, but isType uses instanceOf, and is exported.\nimport { remove } from 'ts-invariant/process';\nimport { isType } from 'graphql';\n\nexport function removeTemporaryGlobals() {\n  // Calling isType here just to make sure it won't be tree-shaken away,\n  // provided applyFixes is called elsewhere.\n  isType(null);\n  return remove();\n}\n", "// Just in case the graphql package switches from process.env.NODE_ENV to\n// __DEV__, make sure __DEV__ is polyfilled before importing graphql.\nimport DEV from \"./DEV\";\nexport { DEV }\n\n// Import graphql/jsutils/instanceOf safely, working around its unchecked usage\n// of process.env.NODE_ENV and https://github.com/graphql/graphql-js/pull/2894.\nimport { removeTemporaryGlobals } from \"./graphql\";\nexport { removeTemporaryGlobals }\n\n// Synchronously undo the global process.env.NODE_ENV polyfill that we created\n// temporarily while importing the offending graphql/jsutils/instanceOf module.\nremoveTemporaryGlobals();\n", "// Provides the methods that allow QueryManager to handle the `skip` and\n// `include` directives within GraphQL.\nimport {\n  SelectionNode,\n  VariableNode,\n  BooleanValueNode,\n  DirectiveNode,\n  DocumentNode,\n  ArgumentNode,\n  ValueNode,\n  ASTNode,\n  visit,\n} from 'graphql';\n\nimport { invariant } from 'ts-invariant';\n\nexport type DirectiveInfo = {\n  [fieldName: string]: { [argName: string]: any };\n};\n\nexport function shouldInclude(\n  { directives }: SelectionNode,\n  variables?: Record<string, any>,\n): boolean {\n  if (!directives || !directives.length) {\n    return true;\n  }\n  return getInclusionDirectives(\n    directives\n  ).every(({ directive, ifArgument }) => {\n    let evaledValue: boolean = false;\n    if (ifArgument.value.kind === 'Variable') {\n      evaledValue = variables && variables[(ifArgument.value as VariableNode).name.value];\n      invariant(\n        evaledValue !== void 0,\n        `Invalid variable referenced in @${directive.name.value} directive.`,\n      );\n    } else {\n      evaledValue = (ifArgument.value as BooleanValueNode).value;\n    }\n    return directive.name.value === 'skip' ? !evaledValue : evaledValue;\n  });\n}\n\nexport function getDirectiveNames(root: ASTNode) {\n  const names: string[] = [];\n\n  visit(root, {\n    Directive(node: DirectiveNode) {\n      names.push(node.name.value);\n    },\n  });\n\n  return names;\n}\n\nexport function hasDirectives(names: string[], root: ASTNode) {\n  return getDirectiveNames(root).some(\n    (name: string) => names.indexOf(name) > -1,\n  );\n}\n\nexport function hasClientExports(document: DocumentNode) {\n  return (\n    document &&\n    hasDirectives(['client'], document) &&\n    hasDirectives(['export'], document)\n  );\n}\n\nexport type InclusionDirectives = Array<{\n  directive: DirectiveNode;\n  ifArgument: ArgumentNode;\n}>;\n\nfunction isInclusionDirective({ name: { value } }: DirectiveNode): boolean {\n  return value === 'skip' || value === 'include';\n}\n\nexport function getInclusionDirectives(\n  directives: ReadonlyArray<DirectiveNode>,\n): InclusionDirectives {\n  const result: InclusionDirectives = [];\n\n  if (directives && directives.length) {\n    directives.forEach(directive => {\n      if (!isInclusionDirective(directive)) return;\n\n      const directiveArguments = directive.arguments;\n      const directiveName = directive.name.value;\n\n      invariant(\n        directiveArguments && directiveArguments.length === 1,\n        `Incorrect number of arguments for the @${directiveName} directive.`,\n      );\n\n      const ifArgument = directiveArguments![0];\n      invariant(\n        ifArgument.name && ifArgument.name.value === 'if',\n        `Invalid argument for the @${directiveName} directive.`,\n      );\n\n      const ifValue: ValueNode = ifArgument.value;\n\n      // means it has to be a variable value if this is a valid @skip or @include directive\n      invariant(\n        ifValue &&\n          (ifValue.kind === 'Variable' || ifValue.kind === 'BooleanValue'),\n        `Argument for the @${directiveName} directive must be a variable or a boolean value.`,\n      );\n\n      result.push({ directive, ifArgument });\n    });\n  }\n\n  return result;\n}\n\n", "import {\n  DocumentNode,\n  FragmentDefinitionNode,\n  InlineFragmentNode,\n  SelectionNode\n} from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\n/**\n * Returns a query document which adds a single query operation that only\n * spreads the target fragment inside of it.\n *\n * So for example a document of:\n *\n * ```graphql\n * fragment foo on Foo { a b c }\n * ```\n *\n * Turns into:\n *\n * ```graphql\n * { ...foo }\n *\n * fragment foo on Foo { a b c }\n * ```\n *\n * The target fragment will either be the only fragment in the document, or a\n * fragment specified by the provided `fragmentName`. If there is more than one\n * fragment, but a `fragmentName` was not defined then an error will be thrown.\n */\nexport function getFragmentQueryDocument(\n  document: DocumentNode,\n  fragmentName?: string,\n): DocumentNode {\n  let actualFragmentName = fragmentName;\n\n  // Build an array of all our fragment definitions that will be used for\n  // validations. We also do some validations on the other definitions in the\n  // document while building this list.\n  const fragments: Array<FragmentDefinitionNode> = [];\n  document.definitions.forEach(definition => {\n    // Throw an error if we encounter an operation definition because we will\n    // define our own operation definition later on.\n    if (definition.kind === 'OperationDefinition') {\n      throw new InvariantError(\n        `Found a ${definition.operation} operation${\n          definition.name ? ` named '${definition.name.value}'` : ''\n        }. ` +\n          'No operations are allowed when using a fragment as a query. Only fragments are allowed.',\n      );\n    }\n    // Add our definition to the fragments array if it is a fragment\n    // definition.\n    if (definition.kind === 'FragmentDefinition') {\n      fragments.push(definition);\n    }\n  });\n\n  // If the user did not give us a fragment name then let us try to get a\n  // name from a single fragment in the definition.\n  if (typeof actualFragmentName === 'undefined') {\n    invariant(\n      fragments.length === 1,\n      `Found ${\n        fragments.length\n      } fragments. \\`fragmentName\\` must be provided when there is not exactly 1 fragment.`,\n    );\n    actualFragmentName = fragments[0].name.value;\n  }\n\n  // Generate a query document with an operation that simply spreads the\n  // fragment inside of it.\n  const query: DocumentNode = {\n    ...document,\n    definitions: [\n      {\n        kind: 'OperationDefinition',\n        operation: 'query',\n        selectionSet: {\n          kind: 'SelectionSet',\n          selections: [\n            {\n              kind: 'FragmentSpread',\n              name: {\n                kind: 'Name',\n                value: actualFragmentName,\n              },\n            },\n          ],\n        },\n      },\n      ...document.definitions,\n    ],\n  };\n\n  return query;\n}\n\n/**\n * This is an interface that describes a map from fragment names to fragment definitions.\n */\nexport interface FragmentMap {\n  [fragmentName: string]: FragmentDefinitionNode;\n}\n\n// Utility function that takes a list of fragment definitions and makes a hash out of them\n// that maps the name of the fragment to the fragment definition.\nexport function createFragmentMap(\n  fragments: FragmentDefinitionNode[] = [],\n): FragmentMap {\n  const symTable: FragmentMap = {};\n  fragments.forEach(fragment => {\n    symTable[fragment.name.value] = fragment;\n  });\n  return symTable;\n}\n\nexport function getFragmentFromSelection(\n  selection: SelectionNode,\n  fragmentMap?: FragmentMap,\n): InlineFragmentNode | FragmentDefinitionNode | null {\n  switch (selection.kind) {\n    case 'InlineFragment':\n      return selection;\n    case 'FragmentSpread': {\n      const fragment = fragmentMap && fragmentMap[selection.name.value];\n      invariant(fragment, `No fragment named ${selection.name.value}.`);\n      return fragment!;\n    }\n    default:\n      return null;\n  }\n}\n", "export function isNonNullObject(obj: any): obj is Record<string | number, any> {\n  return obj !== null && typeof obj === 'object';\n}\n", "import {\n  DirectiveNode,\n  FieldNode,\n  IntValueNode,\n  FloatValueNode,\n  StringValueNode,\n  BooleanValueNode,\n  ObjectValueNode,\n  ListValueNode,\n  EnumValueNode,\n  NullValueNode,\n  VariableNode,\n  InlineFragmentNode,\n  ValueNode,\n  SelectionNode,\n  NameNode,\n  SelectionSetNode,\n  DocumentNode,\n} from 'graphql';\n\nimport { InvariantError } from 'ts-invariant';\nimport { isNonNullObject } from '../common/objects';\nimport { FragmentMap, getFragmentFromSelection } from './fragments';\n\nexport interface Reference {\n  readonly __ref: string;\n}\n\nexport function makeReference(id: string): Reference {\n  return { __ref: String(id) };\n}\n\nexport function isReference(obj: any): obj is Reference {\n  return Boolean(obj && typeof obj === 'object' && typeof obj.__ref === 'string');\n}\n\nexport type StoreValue =\n  | number\n  | string\n  | string[]\n  | Reference\n  | Reference[]\n  | null\n  | undefined\n  | void\n  | Object;\n\nexport interface StoreObject {\n  __typename?: string;\n  [storeFieldName: string]: StoreValue;\n}\n\nexport function isDocumentNode(value: any): value is DocumentNode {\n  return (\n    isNonNullObject(value) &&\n    (value as DocumentNode).kind === \"Document\" &&\n    Array.isArray((value as DocumentNode).definitions)\n  );\n}\n\nfunction isStringValue(value: ValueNode): value is StringValueNode {\n  return value.kind === 'StringValue';\n}\n\nfunction isBooleanValue(value: ValueNode): value is BooleanValueNode {\n  return value.kind === 'BooleanValue';\n}\n\nfunction isIntValue(value: ValueNode): value is IntValueNode {\n  return value.kind === 'IntValue';\n}\n\nfunction isFloatValue(value: ValueNode): value is FloatValueNode {\n  return value.kind === 'FloatValue';\n}\n\nfunction isVariable(value: ValueNode): value is VariableNode {\n  return value.kind === 'Variable';\n}\n\nfunction isObjectValue(value: ValueNode): value is ObjectValueNode {\n  return value.kind === 'ObjectValue';\n}\n\nfunction isListValue(value: ValueNode): value is ListValueNode {\n  return value.kind === 'ListValue';\n}\n\nfunction isEnumValue(value: ValueNode): value is EnumValueNode {\n  return value.kind === 'EnumValue';\n}\n\nfunction isNullValue(value: ValueNode): value is NullValueNode {\n  return value.kind === 'NullValue';\n}\n\nexport function valueToObjectRepresentation(\n  argObj: any,\n  name: NameNode,\n  value: ValueNode,\n  variables?: Object,\n) {\n  if (isIntValue(value) || isFloatValue(value)) {\n    argObj[name.value] = Number(value.value);\n  } else if (isBooleanValue(value) || isStringValue(value)) {\n    argObj[name.value] = value.value;\n  } else if (isObjectValue(value)) {\n    const nestedArgObj = {};\n    value.fields.map(obj =>\n      valueToObjectRepresentation(nestedArgObj, obj.name, obj.value, variables),\n    );\n    argObj[name.value] = nestedArgObj;\n  } else if (isVariable(value)) {\n    const variableValue = (variables || ({} as any))[value.name.value];\n    argObj[name.value] = variableValue;\n  } else if (isListValue(value)) {\n    argObj[name.value] = value.values.map(listValue => {\n      const nestedArgArrayObj = {};\n      valueToObjectRepresentation(\n        nestedArgArrayObj,\n        name,\n        listValue,\n        variables,\n      );\n      return (nestedArgArrayObj as any)[name.value];\n    });\n  } else if (isEnumValue(value)) {\n    argObj[name.value] = (value as EnumValueNode).value;\n  } else if (isNullValue(value)) {\n    argObj[name.value] = null;\n  } else {\n    throw new InvariantError(\n      `The inline argument \"${name.value}\" of kind \"${(value as any).kind}\"` +\n        'is not supported. Use variables instead of inline arguments to ' +\n        'overcome this limitation.',\n    );\n  }\n}\n\nexport function storeKeyNameFromField(\n  field: FieldNode,\n  variables?: Object,\n): string {\n  let directivesObj: any = null;\n  if (field.directives) {\n    directivesObj = {};\n    field.directives.forEach(directive => {\n      directivesObj[directive.name.value] = {};\n\n      if (directive.arguments) {\n        directive.arguments.forEach(({ name, value }) =>\n          valueToObjectRepresentation(\n            directivesObj[directive.name.value],\n            name,\n            value,\n            variables,\n          ),\n        );\n      }\n    });\n  }\n\n  let argObj: any = null;\n  if (field.arguments && field.arguments.length) {\n    argObj = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n  }\n\n  return getStoreKeyName(field.name.value, argObj, directivesObj);\n}\n\nexport type Directives = {\n  [directiveName: string]: {\n    [argName: string]: any;\n  };\n};\n\nconst KNOWN_DIRECTIVES: string[] = [\n  'connection',\n  'include',\n  'skip',\n  'client',\n  'rest',\n  'export',\n];\n\nexport const getStoreKeyName = Object.assign(function (\n  fieldName: string,\n  args?: Record<string, any> | null,\n  directives?: Directives,\n): string {\n  if (\n    args &&\n    directives &&\n    directives['connection'] &&\n    directives['connection']['key']\n  ) {\n    if (\n      directives['connection']['filter'] &&\n      (directives['connection']['filter'] as string[]).length > 0\n    ) {\n      const filterKeys = directives['connection']['filter']\n        ? (directives['connection']['filter'] as string[])\n        : [];\n      filterKeys.sort();\n\n      const filteredArgs = {} as { [key: string]: any };\n      filterKeys.forEach(key => {\n        filteredArgs[key] = args[key];\n      });\n\n      return `${directives['connection']['key']}(${stringify(\n        filteredArgs,\n      )})`;\n    } else {\n      return directives['connection']['key'];\n    }\n  }\n\n  let completeFieldName: string = fieldName;\n\n  if (args) {\n    // We can't use `JSON.stringify` here since it's non-deterministic,\n    // and can lead to different store key names being created even though\n    // the `args` object used during creation has the same properties/values.\n    const stringifiedArgs: string = stringify(args);\n    completeFieldName += `(${stringifiedArgs})`;\n  }\n\n  if (directives) {\n    Object.keys(directives).forEach(key => {\n      if (KNOWN_DIRECTIVES.indexOf(key) !== -1) return;\n      if (directives[key] && Object.keys(directives[key]).length) {\n        completeFieldName += `@${key}(${stringify(directives[key])})`;\n      } else {\n        completeFieldName += `@${key}`;\n      }\n    });\n  }\n\n  return completeFieldName;\n}, {\n  setStringify(s: typeof stringify) {\n    const previous = stringify;\n    stringify = s;\n    return previous;\n  },\n});\n\n// Default stable JSON.stringify implementation. Can be updated/replaced with\n// something better by calling getStoreKeyName.setStringify.\nlet stringify = function defaultStringify(value: any): string {\n  return JSON.stringify(value, stringifyReplacer);\n};\n\nfunction stringifyReplacer(_key: string, value: any): any {\n  if (isNonNullObject(value) && !Array.isArray(value)) {\n    value = Object.keys(value).sort().reduce((copy, key) => {\n      copy[key] = value[key];\n      return copy;\n    }, {} as Record<string, any>);\n  }\n  return value;\n}\n\nexport function argumentsObjectFromField(\n  field: FieldNode | DirectiveNode,\n  variables?: Record<string, any>,\n): Object | null {\n  if (field.arguments && field.arguments.length) {\n    const argObj: Object = {};\n    field.arguments.forEach(({ name, value }) =>\n      valueToObjectRepresentation(argObj, name, value, variables),\n    );\n    return argObj;\n  }\n  return null;\n}\n\nexport function resultKeyNameFromField(field: FieldNode): string {\n  return field.alias ? field.alias.value : field.name.value;\n}\n\nexport function getTypenameFromResult(\n  result: Record<string, any>,\n  selectionSet: SelectionSetNode,\n  fragmentMap?: FragmentMap,\n): string | undefined {\n  if (typeof result.__typename === 'string') {\n    return result.__typename;\n  }\n\n  for (const selection of selectionSet.selections) {\n    if (isField(selection)) {\n      if (selection.name.value === '__typename') {\n        return result[resultKeyNameFromField(selection)];\n      }\n    } else {\n      const typename = getTypenameFromResult(\n        result,\n        getFragmentFromSelection(selection, fragmentMap)!.selectionSet,\n        fragmentMap,\n      );\n      if (typeof typename === 'string') {\n        return typename;\n      }\n    }\n  }\n}\n\nexport function isField(selection: SelectionNode): selection is FieldNode {\n  return selection.kind === 'Field';\n}\n\nexport function isInlineFragment(\n  selection: SelectionNode,\n): selection is InlineFragmentNode {\n  return selection.kind === 'InlineFragment';\n}\n\nexport type VariableValue = (node: VariableNode) => any;\n", "import {\n  DocumentNode,\n  OperationDefinitionNode,\n  FragmentDefinitionNode,\n  ValueNode,\n} from 'graphql';\n\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { valueToObjectRepresentation } from './storeUtils';\n\n// Checks the document for errors and throws an exception if there is an error.\nexport function checkDocument(doc: DocumentNode) {\n  invariant(\n    doc && doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  const operations = doc.definitions\n    .filter(d => d.kind !== 'FragmentDefinition')\n    .map(definition => {\n      if (definition.kind !== 'OperationDefinition') {\n        throw new InvariantError(\n          `Schema type definitions not allowed in queries. Found: \"${\n            definition.kind\n          }\"`,\n        );\n      }\n      return definition;\n    });\n\n  invariant(\n    operations.length <= 1,\n    `Ambiguous GraphQL document: contains ${operations.length} operations`,\n  );\n\n  return doc;\n}\n\nexport function getOperationDefinition(\n  doc: DocumentNode,\n): OperationDefinitionNode | undefined {\n  checkDocument(doc);\n  return doc.definitions.filter(\n    definition => definition.kind === 'OperationDefinition',\n  )[0] as OperationDefinitionNode;\n}\n\nexport function getOperationName(doc: DocumentNode): string | null {\n  return (\n    doc.definitions\n      .filter(\n        definition =>\n          definition.kind === 'OperationDefinition' && definition.name,\n      )\n      .map((x: OperationDefinitionNode) => x!.name!.value)[0] || null\n  );\n}\n\n// Returns the FragmentDefinitions from a particular document as an array\nexport function getFragmentDefinitions(\n  doc: DocumentNode,\n): FragmentDefinitionNode[] {\n  return doc.definitions.filter(\n    definition => definition.kind === 'FragmentDefinition',\n  ) as FragmentDefinitionNode[];\n}\n\nexport function getQueryDefinition(doc: DocumentNode): OperationDefinitionNode {\n  const queryDef = getOperationDefinition(doc) as OperationDefinitionNode;\n\n  invariant(\n    queryDef && queryDef.operation === 'query',\n    'Must contain a query definition.',\n  );\n\n  return queryDef;\n}\n\nexport function getFragmentDefinition(\n  doc: DocumentNode,\n): FragmentDefinitionNode {\n  invariant(\n    doc.kind === 'Document',\n    `Expecting a parsed GraphQL document. Perhaps you need to wrap the query \\\nstring in a \"gql\" tag? http://docs.apollostack.com/apollo-client/core.html#gql`,\n  );\n\n  invariant(\n    doc.definitions.length <= 1,\n    'Fragment must have exactly one definition.',\n  );\n\n  const fragmentDef = doc.definitions[0] as FragmentDefinitionNode;\n\n  invariant(\n    fragmentDef.kind === 'FragmentDefinition',\n    'Must be a fragment definition.',\n  );\n\n  return fragmentDef as FragmentDefinitionNode;\n}\n\n/**\n * Returns the first operation definition found in this document.\n * If no operation definition is found, the first fragment definition will be returned.\n * If no definitions are found, an error will be thrown.\n */\nexport function getMainDefinition(\n  queryDoc: DocumentNode,\n): OperationDefinitionNode | FragmentDefinitionNode {\n  checkDocument(queryDoc);\n\n  let fragmentDefinition;\n\n  for (let definition of queryDoc.definitions) {\n    if (definition.kind === 'OperationDefinition') {\n      const operation = (definition as OperationDefinitionNode).operation;\n      if (\n        operation === 'query' ||\n        operation === 'mutation' ||\n        operation === 'subscription'\n      ) {\n        return definition as OperationDefinitionNode;\n      }\n    }\n    if (definition.kind === 'FragmentDefinition' && !fragmentDefinition) {\n      // we do this because we want to allow multiple fragment definitions\n      // to precede an operation definition.\n      fragmentDefinition = definition as FragmentDefinitionNode;\n    }\n  }\n\n  if (fragmentDefinition) {\n    return fragmentDefinition;\n  }\n\n  throw new InvariantError(\n    'Expected a parsed GraphQL query with a query, mutation, subscription, or a fragment.',\n  );\n}\n\nexport function getDefaultValues(\n  definition: OperationDefinitionNode | undefined,\n): Record<string, any> {\n  const defaultValues = Object.create(null);\n  const defs = definition && definition.variableDefinitions;\n  if (defs && defs.length) {\n    defs.forEach(def => {\n      if (def.defaultValue) {\n        valueToObjectRepresentation(\n          defaultValues,\n          def.variable.name,\n          def.defaultValue as ValueNode,\n        );\n      }\n    });\n  }\n  return defaultValues;\n}\n", "export function filterInPlace<T>(\n  array: T[],\n  test: (elem: T) => boolean,\n  context?: any,\n): T[] {\n  let target = 0;\n  array.forEach(function (elem, i) {\n    if (test.call(this, elem, i, array)) {\n      array[target++] = elem;\n    }\n  }, context);\n  array.length = target;\n  return array;\n}\n", "import {\n  DocumentNode,\n  SelectionNode,\n  SelectionSetNode,\n  OperationDefinitionNode,\n  FieldNode,\n  DirectiveNode,\n  FragmentDefinitionNode,\n  ArgumentNode,\n  FragmentSpreadNode,\n  VariableDefinitionNode,\n  VariableNode,\n  visit,\n} from 'graphql';\nimport { invariant } from 'ts-invariant';\n\nimport {\n  checkDocument,\n  getOperationDefinition,\n  getFragmentDefinition,\n  getFragmentDefinitions,\n  getMainDefinition,\n} from './getFromAST';\nimport { filterInPlace } from '../common/filterInPlace';\nimport { isField, isInlineFragment } from './storeUtils';\nimport {\n  createFragmentMap,\n  FragmentMap,\n} from './fragments';\n\nexport type RemoveNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n  remove?: boolean;\n};\n\nexport type GetNodeConfig<N> = {\n  name?: string;\n  test?: (node: N) => boolean;\n};\n\nexport type RemoveDirectiveConfig = RemoveNodeConfig<DirectiveNode>;\nexport type GetDirectiveConfig = GetNodeConfig<DirectiveNode>;\nexport type RemoveArgumentsConfig = RemoveNodeConfig<ArgumentNode>;\nexport type GetFragmentSpreadConfig = GetNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentSpreadConfig = RemoveNodeConfig<FragmentSpreadNode>;\nexport type RemoveFragmentDefinitionConfig = RemoveNodeConfig<\n  FragmentDefinitionNode\n>;\nexport type RemoveVariableDefinitionConfig = RemoveNodeConfig<\n  VariableDefinitionNode\n>;\n\nconst TYPENAME_FIELD: FieldNode = {\n  kind: 'Field',\n  name: {\n    kind: 'Name',\n    value: '__typename',\n  },\n};\n\nfunction isEmpty(\n  op: OperationDefinitionNode | FragmentDefinitionNode,\n  fragments: FragmentMap,\n): boolean {\n  return op.selectionSet.selections.every(\n    selection =>\n      selection.kind === 'FragmentSpread' &&\n      isEmpty(fragments[selection.name.value], fragments),\n  );\n}\n\nfunction nullIfDocIsEmpty(doc: DocumentNode) {\n  return isEmpty(\n    getOperationDefinition(doc) || getFragmentDefinition(doc),\n    createFragmentMap(getFragmentDefinitions(doc)),\n  )\n    ? null\n    : doc;\n}\n\nfunction getDirectiveMatcher(\n  directives: (RemoveDirectiveConfig | GetDirectiveConfig)[],\n) {\n  return function directiveMatcher(directive: DirectiveNode) {\n    return directives.some(\n      dir =>\n        (dir.name && dir.name === directive.name.value) ||\n        (dir.test && dir.test(directive)),\n    );\n  };\n}\n\nexport function removeDirectivesFromDocument(\n  directives: RemoveDirectiveConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const variablesInUse: Record<string, boolean> = Object.create(null);\n  let variablesToRemove: RemoveArgumentsConfig[] = [];\n\n  const fragmentSpreadsInUse: Record<string, boolean> = Object.create(null);\n  let fragmentSpreadsToRemove: RemoveFragmentSpreadConfig[] = [];\n\n  let modifiedDoc = nullIfDocIsEmpty(\n    visit(doc, {\n      Variable: {\n        enter(node, _key, parent) {\n          // Store each variable that's referenced as part of an argument\n          // (excluding operation definition variables), so we know which\n          // variables are being used. If we later want to remove a variable\n          // we'll first check to see if it's being used, before continuing with\n          // the removal.\n          if (\n            (parent as VariableDefinitionNode).kind !== 'VariableDefinition'\n          ) {\n            variablesInUse[node.name.value] = true;\n          }\n        },\n      },\n\n      Field: {\n        enter(node) {\n          if (directives && node.directives) {\n            // If `remove` is set to true for a directive, and a directive match\n            // is found for a field, remove the field as well.\n            const shouldRemoveField = directives.some(\n              directive => directive.remove,\n            );\n\n            if (\n              shouldRemoveField &&\n              node.directives &&\n              node.directives.some(getDirectiveMatcher(directives))\n            ) {\n              if (node.arguments) {\n                // Store field argument variables so they can be removed\n                // from the operation definition.\n                node.arguments.forEach(arg => {\n                  if (arg.value.kind === 'Variable') {\n                    variablesToRemove.push({\n                      name: (arg.value as VariableNode).name.value,\n                    });\n                  }\n                });\n              }\n\n              if (node.selectionSet) {\n                // Store fragment spread names so they can be removed from the\n                // document.\n                getAllFragmentSpreadsFromSelectionSet(node.selectionSet).forEach(\n                  frag => {\n                    fragmentSpreadsToRemove.push({\n                      name: frag.name.value,\n                    });\n                  },\n                );\n              }\n\n              // Remove the field.\n              return null;\n            }\n          }\n        },\n      },\n\n      FragmentSpread: {\n        enter(node) {\n          // Keep track of referenced fragment spreads. This is used to\n          // determine if top level fragment definitions should be removed.\n          fragmentSpreadsInUse[node.name.value] = true;\n        },\n      },\n\n      Directive: {\n        enter(node) {\n          // If a matching directive is found, remove it.\n          if (getDirectiveMatcher(directives)(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n\n  // If we've removed fields with arguments, make sure the associated\n  // variables are also removed from the rest of the document, as long as they\n  // aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(variablesToRemove, v => !!v.name && !variablesInUse[v.name]).length\n  ) {\n    modifiedDoc = removeArgumentsFromDocument(variablesToRemove, modifiedDoc);\n  }\n\n  // If we've removed selection sets with fragment spreads, make sure the\n  // associated fragment definitions are also removed from the rest of the\n  // document, as long as they aren't being used elsewhere.\n  if (\n    modifiedDoc &&\n    filterInPlace(fragmentSpreadsToRemove, fs => !!fs.name && !fragmentSpreadsInUse[fs.name])\n      .length\n  ) {\n    modifiedDoc = removeFragmentSpreadFromDocument(\n      fragmentSpreadsToRemove,\n      modifiedDoc,\n    );\n  }\n\n  return modifiedDoc;\n}\n\nexport const addTypenameToDocument = Object.assign(function (\n  doc: DocumentNode\n): DocumentNode {\n  return visit(checkDocument(doc), {\n    SelectionSet: {\n      enter(node, _key, parent) {\n        // Don't add __typename to OperationDefinitions.\n        if (\n          parent &&\n          (parent as OperationDefinitionNode).kind === 'OperationDefinition'\n        ) {\n          return;\n        }\n\n        // No changes if no selections.\n        const { selections } = node;\n        if (!selections) {\n          return;\n        }\n\n        // If selections already have a __typename, or are part of an\n        // introspection query, do nothing.\n        const skip = selections.some(selection => {\n          return (\n            isField(selection) &&\n            (selection.name.value === '__typename' ||\n              selection.name.value.lastIndexOf('__', 0) === 0)\n          );\n        });\n        if (skip) {\n          return;\n        }\n\n        // If this SelectionSet is @export-ed as an input variable, it should\n        // not have a __typename field (see issue #4691).\n        const field = parent as FieldNode;\n        if (\n          isField(field) &&\n          field.directives &&\n          field.directives.some(d => d.name.value === 'export')\n        ) {\n          return;\n        }\n\n        // Create and return a new SelectionSet with a __typename Field.\n        return {\n          ...node,\n          selections: [...selections, TYPENAME_FIELD],\n        };\n      },\n    },\n  });\n}, {\n  added(field: FieldNode): boolean {\n    return field === TYPENAME_FIELD;\n  },\n});\n\nconst connectionRemoveConfig = {\n  test: (directive: DirectiveNode) => {\n    const willRemove = directive.name.value === 'connection';\n    if (willRemove) {\n      if (\n        !directive.arguments ||\n        !directive.arguments.some(arg => arg.name.value === 'key')\n      ) {\n        invariant.warn(\n          'Removing an @connection directive even though it does not have a key. ' +\n            'You may want to use the key parameter to specify a store key.',\n        );\n      }\n    }\n\n    return willRemove;\n  },\n};\n\nexport function removeConnectionDirectiveFromDocument(doc: DocumentNode) {\n  return removeDirectivesFromDocument(\n    [connectionRemoveConfig],\n    checkDocument(doc),\n  );\n}\n\nfunction hasDirectivesInSelectionSet(\n  directives: GetDirectiveConfig[],\n  selectionSet: SelectionSetNode | undefined,\n  nestedCheck = true,\n): boolean {\n  return (\n    !!selectionSet &&\n    selectionSet.selections &&\n    selectionSet.selections.some(selection =>\n      hasDirectivesInSelection(directives, selection, nestedCheck),\n    )\n  );\n}\n\nfunction hasDirectivesInSelection(\n  directives: GetDirectiveConfig[],\n  selection: SelectionNode,\n  nestedCheck = true,\n): boolean {\n  if (!isField(selection)) {\n    return true;\n  }\n\n  if (!selection.directives) {\n    return false;\n  }\n\n  return (\n    selection.directives.some(getDirectiveMatcher(directives)) ||\n    (nestedCheck &&\n      hasDirectivesInSelectionSet(\n        directives,\n        selection.selectionSet,\n        nestedCheck,\n      ))\n  );\n}\n\nfunction getArgumentMatcher(config: RemoveArgumentsConfig[]) {\n  return function argumentMatcher(argument: ArgumentNode) {\n    return config.some(\n      (aConfig: RemoveArgumentsConfig) =>\n        argument.value &&\n        argument.value.kind === 'Variable' &&\n        argument.value.name &&\n        (aConfig.name === argument.value.name.value ||\n          (aConfig.test && aConfig.test(argument))),\n    );\n  };\n}\n\nexport function removeArgumentsFromDocument(\n  config: RemoveArgumentsConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  const argMatcher = getArgumentMatcher(config);\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      OperationDefinition: {\n        enter(node) {\n          return {\n            ...node,\n            // Remove matching top level variables definitions.\n            variableDefinitions: node.variableDefinitions ? node.variableDefinitions.filter(\n              varDef =>\n                !config.some(arg => arg.name === varDef.variable.name.value),\n            ) : [],\n          };\n        },\n      },\n\n      Field: {\n        enter(node) {\n          // If `remove` is set to true for an argument, and an argument match\n          // is found for a field, remove the field as well.\n          const shouldRemoveField = config.some(argConfig => argConfig.remove);\n\n          if (shouldRemoveField) {\n            let argMatchCount = 0;\n            if (node.arguments) {\n              node.arguments.forEach(arg => {\n                if (argMatcher(arg)) {\n                  argMatchCount += 1;\n                }\n              });\n            }\n\n            if (argMatchCount === 1) {\n              return null;\n            }\n          }\n        },\n      },\n\n      Argument: {\n        enter(node) {\n          // Remove all matching arguments.\n          if (argMatcher(node)) {\n            return null;\n          }\n        },\n      },\n    }),\n  );\n}\n\nexport function removeFragmentSpreadFromDocument(\n  config: RemoveFragmentSpreadConfig[],\n  doc: DocumentNode,\n): DocumentNode | null {\n  function enter(\n    node: FragmentSpreadNode | FragmentDefinitionNode,\n  ): null | void {\n    if (config.some(def => def.name === node.name.value)) {\n      return null;\n    }\n  }\n\n  return nullIfDocIsEmpty(\n    visit(doc, {\n      FragmentSpread: { enter },\n      FragmentDefinition: { enter },\n    }),\n  );\n}\n\nfunction getAllFragmentSpreadsFromSelectionSet(\n  selectionSet: SelectionSetNode,\n): FragmentSpreadNode[] {\n  const allFragments: FragmentSpreadNode[] = [];\n\n  selectionSet.selections.forEach(selection => {\n    if (\n      (isField(selection) || isInlineFragment(selection)) &&\n      selection.selectionSet\n    ) {\n      getAllFragmentSpreadsFromSelectionSet(selection.selectionSet).forEach(\n        frag => allFragments.push(frag),\n      );\n    } else if (selection.kind === 'FragmentSpread') {\n      allFragments.push(selection);\n    }\n  });\n\n  return allFragments;\n}\n\n// If the incoming document is a query, return it as is. Otherwise, build a\n// new document containing a query operation based on the selection set\n// of the previous main operation.\nexport function buildQueryFromSelectionSet(\n  document: DocumentNode,\n): DocumentNode {\n  const definition = getMainDefinition(document);\n  const definitionOperation = (<OperationDefinitionNode>definition).operation;\n\n  if (definitionOperation === 'query') {\n    // Already a query, so return the existing document.\n    return document;\n  }\n\n  // Build a new query using the selection set of the main operation.\n  const modifiedDoc = visit(document, {\n    OperationDefinition: {\n      enter(node) {\n        return {\n          ...node,\n          operation: 'query',\n        };\n      },\n    },\n  });\n  return modifiedDoc;\n}\n\n// Remove fields / selection sets that include an @client directive.\nexport function removeClientSetsFromDocument(\n  document: DocumentNode,\n): DocumentNode | null {\n  checkDocument(document);\n\n  let modifiedDoc = removeDirectivesFromDocument(\n    [\n      {\n        test: (directive: DirectiveNode) => directive.name.value === 'client',\n        remove: true,\n      },\n    ],\n    document,\n  );\n\n  // After a fragment definition has had its @client related document\n  // sets removed, if the only field it has left is a __typename field,\n  // remove the entire fragment operation to prevent it from being fired\n  // on the server.\n  if (modifiedDoc) {\n    modifiedDoc = visit(modifiedDoc, {\n      FragmentDefinition: {\n        enter(node) {\n          if (node.selectionSet) {\n            const isTypenameOnly = node.selectionSet.selections.every(\n              selection =>\n                isField(selection) && selection.name.value === '__typename',\n            );\n            if (isTypenameOnly) {\n              return null;\n            }\n          }\n        },\n      },\n    });\n  }\n\n  return modifiedDoc;\n}\n", "import { isNonNullObject } from \"./objects\";\n\nconst { hasOwnProperty } = Object.prototype;\n\n// These mergeDeep and mergeDeepArray utilities merge any number of objects\n// together, sharing as much memory as possible with the source objects, while\n// remaining careful to avoid modifying any source objects.\n\n// Logically, the return type of mergeDeep should be the intersection of\n// all the argument types. The binary call signature is by far the most\n// common, but we support 0- through 5-ary as well. After that, the\n// resulting type is just the inferred array element type. Note to nerds:\n// there is a more clever way of doing this that converts the tuple type\n// first to a union type (easy enough: T[number]) and then converts the\n// union to an intersection type using distributive conditional type\n// inference, but that approach has several fatal flaws (boolean becomes\n// true & false, and the inferred type ends up as unknown in many cases),\n// in addition to being nearly impossible to explain/understand.\nexport type TupleToIntersection<T extends any[]> =\n  T extends [infer A] ? A :\n  T extends [infer A, infer B] ? A & B :\n  T extends [infer A, infer B, infer C] ? A & B & C :\n  T extends [infer A, infer B, infer C, infer D] ? A & B & C & D :\n  T extends [infer A, infer B, infer C, infer D, infer E] ? A & B & C & D & E :\n  T extends (infer U)[] ? U : any;\n\nexport function mergeDeep<T extends any[]>(\n  ...sources: T\n): TupleToIntersection<T> {\n  return mergeDeepArray(sources);\n}\n\n// In almost any situation where you could succeed in getting the\n// TypeScript compiler to infer a tuple type for the sources array, you\n// could just use mergeDeep instead of mergeDeepArray, so instead of\n// trying to convert T[] to an intersection type we just infer the array\n// element type, which works perfectly when the sources array has a\n// consistent element type.\nexport function mergeDeepArray<T>(sources: T[]): T {\n  let target = sources[0] || ({} as T);\n  const count = sources.length;\n  if (count > 1) {\n    const merger = new DeepMerger();\n    for (let i = 1; i < count; ++i) {\n      target = merger.merge(target, sources[i]);\n    }\n  }\n  return target;\n}\n\nexport type ReconcilerFunction<TContextArgs extends any[]> = (\n  this: DeepMerger<TContextArgs>,\n  target: Record<string | number, any>,\n  source: Record<string | number, any>,\n  property: string | number,\n  ...context: TContextArgs\n) => any;\n\nconst defaultReconciler: ReconcilerFunction<any[]> =\n  function (target, source, property) {\n    return this.merge(target[property], source[property]);\n  };\n\nexport class DeepMerger<TContextArgs extends any[]> {\n  constructor(\n    private reconciler: ReconcilerFunction<TContextArgs> = defaultReconciler,\n  ) {}\n\n  public merge(target: any, source: any, ...context: TContextArgs): any {\n    if (isNonNullObject(source) && isNonNullObject(target)) {\n      Object.keys(source).forEach(sourceKey => {\n        if (hasOwnProperty.call(target, sourceKey)) {\n          const targetValue = target[sourceKey];\n          if (source[sourceKey] !== targetValue) {\n            const result = this.reconciler(target, source, sourceKey, ...context);\n            // A well-implemented reconciler may return targetValue to indicate\n            // the merge changed nothing about the structure of the target.\n            if (result !== targetValue) {\n              target = this.shallowCopyForMerge(target);\n              target[sourceKey] = result;\n            }\n          }\n        } else {\n          // If there is no collision, the target can safely share memory with\n          // the source, and the recursion can terminate here.\n          target = this.shallowCopyForMerge(target);\n          target[sourceKey] = source[sourceKey];\n        }\n      });\n\n      return target;\n    }\n\n    // If source (or target) is not an object, let source replace target.\n    return source;\n  }\n\n  public isObject = isNonNullObject;\n\n  private pastCopies = new Set<any>();\n\n  public shallowCopyForMerge<T>(value: T): T {\n    if (isNonNullObject(value) && !this.pastCopies.has(value)) {\n      if (Array.isArray(value)) {\n        value = (value as any).slice(0);\n      } else {\n        value = {\n          __proto__: Object.getPrototypeOf(value),\n          ...value,\n        };\n      }\n      this.pastCopies.add(value);\n    }\n    return value;\n  }\n}\n", "function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\n// === Symbol Support ===\nvar hasSymbols = function () {\n  return typeof Symbol === 'function';\n};\n\nvar hasSymbol = function (name) {\n  return hasSymbols() && Boolean(Symbol[name]);\n};\n\nvar getSymbol = function (name) {\n  return hasSymbol(name) ? Symbol[name] : '@@' + name;\n};\n\nif (hasSymbols() && !hasSymbol('observable')) {\n  Symbol.observable = Symbol('observable');\n}\n\nvar SymbolIterator = getSymbol('iterator');\nvar SymbolObservable = getSymbol('observable');\nvar SymbolSpecies = getSymbol('species'); // === Abstract Operations ===\n\nfunction getMethod(obj, key) {\n  var value = obj[key];\n  if (value == null) return undefined;\n  if (typeof value !== 'function') throw new TypeError(value + ' is not a function');\n  return value;\n}\n\nfunction getSpecies(obj) {\n  var ctor = obj.constructor;\n\n  if (ctor !== undefined) {\n    ctor = ctor[SymbolSpecies];\n\n    if (ctor === null) {\n      ctor = undefined;\n    }\n  }\n\n  return ctor !== undefined ? ctor : Observable;\n}\n\nfunction isObservable(x) {\n  return x instanceof Observable; // SPEC: Brand check\n}\n\nfunction hostReportError(e) {\n  if (hostReportError.log) {\n    hostReportError.log(e);\n  } else {\n    setTimeout(function () {\n      throw e;\n    });\n  }\n}\n\nfunction enqueue(fn) {\n  Promise.resolve().then(function () {\n    try {\n      fn();\n    } catch (e) {\n      hostReportError(e);\n    }\n  });\n}\n\nfunction cleanupSubscription(subscription) {\n  var cleanup = subscription._cleanup;\n  if (cleanup === undefined) return;\n  subscription._cleanup = undefined;\n\n  if (!cleanup) {\n    return;\n  }\n\n  try {\n    if (typeof cleanup === 'function') {\n      cleanup();\n    } else {\n      var unsubscribe = getMethod(cleanup, 'unsubscribe');\n\n      if (unsubscribe) {\n        unsubscribe.call(cleanup);\n      }\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n}\n\nfunction closeSubscription(subscription) {\n  subscription._observer = undefined;\n  subscription._queue = undefined;\n  subscription._state = 'closed';\n}\n\nfunction flushSubscription(subscription) {\n  var queue = subscription._queue;\n\n  if (!queue) {\n    return;\n  }\n\n  subscription._queue = undefined;\n  subscription._state = 'ready';\n\n  for (var i = 0; i < queue.length; ++i) {\n    notifySubscription(subscription, queue[i].type, queue[i].value);\n    if (subscription._state === 'closed') break;\n  }\n}\n\nfunction notifySubscription(subscription, type, value) {\n  subscription._state = 'running';\n  var observer = subscription._observer;\n\n  try {\n    var m = getMethod(observer, type);\n\n    switch (type) {\n      case 'next':\n        if (m) m.call(observer, value);\n        break;\n\n      case 'error':\n        closeSubscription(subscription);\n        if (m) m.call(observer, value);else throw value;\n        break;\n\n      case 'complete':\n        closeSubscription(subscription);\n        if (m) m.call(observer);\n        break;\n    }\n  } catch (e) {\n    hostReportError(e);\n  }\n\n  if (subscription._state === 'closed') cleanupSubscription(subscription);else if (subscription._state === 'running') subscription._state = 'ready';\n}\n\nfunction onNotify(subscription, type, value) {\n  if (subscription._state === 'closed') return;\n\n  if (subscription._state === 'buffering') {\n    subscription._queue.push({\n      type: type,\n      value: value\n    });\n\n    return;\n  }\n\n  if (subscription._state !== 'ready') {\n    subscription._state = 'buffering';\n    subscription._queue = [{\n      type: type,\n      value: value\n    }];\n    enqueue(function () {\n      return flushSubscription(subscription);\n    });\n    return;\n  }\n\n  notifySubscription(subscription, type, value);\n}\n\nvar Subscription = /*#__PURE__*/function () {\n  function Subscription(observer, subscriber) {\n    // ASSERT: observer is an object\n    // ASSERT: subscriber is callable\n    this._cleanup = undefined;\n    this._observer = observer;\n    this._queue = undefined;\n    this._state = 'initializing';\n    var subscriptionObserver = new SubscriptionObserver(this);\n\n    try {\n      this._cleanup = subscriber.call(undefined, subscriptionObserver);\n    } catch (e) {\n      subscriptionObserver.error(e);\n    }\n\n    if (this._state === 'initializing') this._state = 'ready';\n  }\n\n  var _proto = Subscription.prototype;\n\n  _proto.unsubscribe = function unsubscribe() {\n    if (this._state !== 'closed') {\n      closeSubscription(this);\n      cleanupSubscription(this);\n    }\n  };\n\n  _createClass(Subscription, [{\n    key: \"closed\",\n    get: function () {\n      return this._state === 'closed';\n    }\n  }]);\n\n  return Subscription;\n}();\n\nvar SubscriptionObserver = /*#__PURE__*/function () {\n  function SubscriptionObserver(subscription) {\n    this._subscription = subscription;\n  }\n\n  var _proto2 = SubscriptionObserver.prototype;\n\n  _proto2.next = function next(value) {\n    onNotify(this._subscription, 'next', value);\n  };\n\n  _proto2.error = function error(value) {\n    onNotify(this._subscription, 'error', value);\n  };\n\n  _proto2.complete = function complete() {\n    onNotify(this._subscription, 'complete');\n  };\n\n  _createClass(SubscriptionObserver, [{\n    key: \"closed\",\n    get: function () {\n      return this._subscription._state === 'closed';\n    }\n  }]);\n\n  return SubscriptionObserver;\n}();\n\nvar Observable = /*#__PURE__*/function () {\n  function Observable(subscriber) {\n    if (!(this instanceof Observable)) throw new TypeError('Observable cannot be called as a function');\n    if (typeof subscriber !== 'function') throw new TypeError('Observable initializer must be a function');\n    this._subscriber = subscriber;\n  }\n\n  var _proto3 = Observable.prototype;\n\n  _proto3.subscribe = function subscribe(observer) {\n    if (typeof observer !== 'object' || observer === null) {\n      observer = {\n        next: observer,\n        error: arguments[1],\n        complete: arguments[2]\n      };\n    }\n\n    return new Subscription(observer, this._subscriber);\n  };\n\n  _proto3.forEach = function forEach(fn) {\n    var _this = this;\n\n    return new Promise(function (resolve, reject) {\n      if (typeof fn !== 'function') {\n        reject(new TypeError(fn + ' is not a function'));\n        return;\n      }\n\n      function done() {\n        subscription.unsubscribe();\n        resolve();\n      }\n\n      var subscription = _this.subscribe({\n        next: function (value) {\n          try {\n            fn(value, done);\n          } catch (e) {\n            reject(e);\n            subscription.unsubscribe();\n          }\n        },\n        error: reject,\n        complete: resolve\n      });\n    });\n  };\n\n  _proto3.map = function map(fn) {\n    var _this2 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this2.subscribe({\n        next: function (value) {\n          try {\n            value = fn(value);\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.filter = function filter(fn) {\n    var _this3 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      return _this3.subscribe({\n        next: function (value) {\n          try {\n            if (!fn(value)) return;\n          } catch (e) {\n            return observer.error(e);\n          }\n\n          observer.next(value);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.reduce = function reduce(fn) {\n    var _this4 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    var hasSeed = arguments.length > 1;\n    var hasValue = false;\n    var seed = arguments[1];\n    var acc = seed;\n    return new C(function (observer) {\n      return _this4.subscribe({\n        next: function (value) {\n          var first = !hasValue;\n          hasValue = true;\n\n          if (!first || hasSeed) {\n            try {\n              acc = fn(acc, value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          } else {\n            acc = value;\n          }\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          if (!hasValue && !hasSeed) return observer.error(new TypeError('Cannot reduce an empty sequence'));\n          observer.next(acc);\n          observer.complete();\n        }\n      });\n    });\n  };\n\n  _proto3.concat = function concat() {\n    var _this5 = this;\n\n    for (var _len = arguments.length, sources = new Array(_len), _key = 0; _key < _len; _key++) {\n      sources[_key] = arguments[_key];\n    }\n\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscription;\n      var index = 0;\n\n      function startNext(next) {\n        subscription = next.subscribe({\n          next: function (v) {\n            observer.next(v);\n          },\n          error: function (e) {\n            observer.error(e);\n          },\n          complete: function () {\n            if (index === sources.length) {\n              subscription = undefined;\n              observer.complete();\n            } else {\n              startNext(C.from(sources[index++]));\n            }\n          }\n        });\n      }\n\n      startNext(_this5);\n      return function () {\n        if (subscription) {\n          subscription.unsubscribe();\n          subscription = undefined;\n        }\n      };\n    });\n  };\n\n  _proto3.flatMap = function flatMap(fn) {\n    var _this6 = this;\n\n    if (typeof fn !== 'function') throw new TypeError(fn + ' is not a function');\n    var C = getSpecies(this);\n    return new C(function (observer) {\n      var subscriptions = [];\n\n      var outer = _this6.subscribe({\n        next: function (value) {\n          if (fn) {\n            try {\n              value = fn(value);\n            } catch (e) {\n              return observer.error(e);\n            }\n          }\n\n          var inner = C.from(value).subscribe({\n            next: function (value) {\n              observer.next(value);\n            },\n            error: function (e) {\n              observer.error(e);\n            },\n            complete: function () {\n              var i = subscriptions.indexOf(inner);\n              if (i >= 0) subscriptions.splice(i, 1);\n              completeIfDone();\n            }\n          });\n          subscriptions.push(inner);\n        },\n        error: function (e) {\n          observer.error(e);\n        },\n        complete: function () {\n          completeIfDone();\n        }\n      });\n\n      function completeIfDone() {\n        if (outer.closed && subscriptions.length === 0) observer.complete();\n      }\n\n      return function () {\n        subscriptions.forEach(function (s) {\n          return s.unsubscribe();\n        });\n        outer.unsubscribe();\n      };\n    });\n  };\n\n  _proto3[SymbolObservable] = function () {\n    return this;\n  };\n\n  Observable.from = function from(x) {\n    var C = typeof this === 'function' ? this : Observable;\n    if (x == null) throw new TypeError(x + ' is not an object');\n    var method = getMethod(x, SymbolObservable);\n\n    if (method) {\n      var observable = method.call(x);\n      if (Object(observable) !== observable) throw new TypeError(observable + ' is not an object');\n      if (isObservable(observable) && observable.constructor === C) return observable;\n      return new C(function (observer) {\n        return observable.subscribe(observer);\n      });\n    }\n\n    if (hasSymbol('iterator')) {\n      method = getMethod(x, SymbolIterator);\n\n      if (method) {\n        return new C(function (observer) {\n          enqueue(function () {\n            if (observer.closed) return;\n\n            for (var _iterator = _createForOfIteratorHelperLoose(method.call(x)), _step; !(_step = _iterator()).done;) {\n              var item = _step.value;\n              observer.next(item);\n              if (observer.closed) return;\n            }\n\n            observer.complete();\n          });\n        });\n      }\n    }\n\n    if (Array.isArray(x)) {\n      return new C(function (observer) {\n        enqueue(function () {\n          if (observer.closed) return;\n\n          for (var i = 0; i < x.length; ++i) {\n            observer.next(x[i]);\n            if (observer.closed) return;\n          }\n\n          observer.complete();\n        });\n      });\n    }\n\n    throw new TypeError(x + ' is not observable');\n  };\n\n  Observable.of = function of() {\n    for (var _len2 = arguments.length, items = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      items[_key2] = arguments[_key2];\n    }\n\n    var C = typeof this === 'function' ? this : Observable;\n    return new C(function (observer) {\n      enqueue(function () {\n        if (observer.closed) return;\n\n        for (var i = 0; i < items.length; ++i) {\n          observer.next(items[i]);\n          if (observer.closed) return;\n        }\n\n        observer.complete();\n      });\n    });\n  };\n\n  _createClass(Observable, null, [{\n    key: SymbolSpecies,\n    get: function () {\n      return this;\n    }\n  }]);\n\n  return Observable;\n}();\n\nif (hasSymbols()) {\n  Object.defineProperty(Observable, Symbol('extensions'), {\n    value: {\n      symbol: SymbolObservable,\n      hostReportError: hostReportError\n    },\n    configurable: true\n  });\n}\n\nexport { Observable };\n", "export default function symbolObservablePonyfill(root) {\n\tvar result;\n\tvar Symbol = root.Symbol;\n\n\tif (typeof Symbol === 'function') {\n\t\tif (Symbol.observable) {\n\t\t\tresult = Symbol.observable;\n\t\t} else {\n\n\t\t\tif (typeof Symbol.for === 'function') {\n\t\t\t\t// This just needs to be something that won't trample other user's Symbol.for use\n\t\t\t\t// It also will guide people to the source of their issues, if this is problematic.\n\t\t\t\t// META: It's a resource locator!\n\t\t\t\tresult = Symbol.for('https://github.com/benlesh/symbol-observable');\n\t\t\t} else {\n\t\t\t\t// Symbol.for didn't exist! The best we can do at this point is a totally \n\t\t\t\t// unique symbol. Note that the string argument here is a descriptor, not\n\t\t\t\t// an identifier. This symbol is unique.\n\t\t\t\tresult = Symbol('https://github.com/benlesh/symbol-observable');\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tSymbol.observable = result;\n\t\t\t} catch (err) {\n\t\t\t\t// Do nothing. In some environments, users have frozen `Symbol` for security reasons,\n\t\t\t\t// if it is frozen assigning to it will throw. In this case, we don't care, because\n\t\t\t\t// they will need to use the returned value from the ponyfill.\n\t\t\t}\n\t\t}\n\t} else {\n\t\tresult = '@@observable';\n\t}\n\n\treturn result;\n};\n", "/* global window */\nimport ponyfill from './ponyfill.js';\n\nvar root;\n\nif (typeof self !== 'undefined') {\n  root = self;\n} else if (typeof window !== 'undefined') {\n  root = window;\n} else if (typeof global !== 'undefined') {\n  root = global;\n} else if (typeof module !== 'undefined') {\n  root = module;\n} else {\n  root = Function('return this')();\n}\n\nvar result = ponyfill(root);\nexport default result;\n", "import {\n  Observable,\n  Observer,\n  Subscription as ObservableSubscription,\n  Subscriber,\n} from 'zen-observable-ts';\n\n// This simplified polyfill attempts to follow the ECMAScript Observable\n// proposal (https://github.com/zenparsing/es-observable)\nimport 'symbol-observable';\n\nexport type {\n  Observer,\n  ObservableSubscription,\n  Subscriber,\n};\n\n// The zen-observable package defines Observable.prototype[Symbol.observable]\n// when Symbol is supported, but RxJS interop depends on also setting this fake\n// '@@observable' string as a polyfill for Symbol.observable.\nconst { prototype } = Observable;\nconst fakeObsSymbol = '@@observable' as keyof typeof prototype;\nif (!prototype[fakeObsSymbol]) {\n  prototype[fakeObsSymbol] = function () { return this; };\n}\n\nexport { Observable };\n", "const { toString } = Object.prototype;\n\n/**\n * Deeply clones a value to create a new instance.\n */\nexport function cloneDeep<T>(value: T): T {\n  return cloneDeepHelper(value);\n}\n\nfunction cloneDeepHelper<T>(val: T, seen?: Map<any, any>): T {\n  switch (toString.call(val)) {\n  case \"[object Array]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    const copy: T & any[] = (val as any).slice(0);\n    seen.set(val, copy);\n    copy.forEach(function (child, i) {\n      copy[i] = cloneDeepHelper(child, seen);\n    });\n    return copy;\n  }\n\n  case \"[object Object]\": {\n    seen = seen || new Map;\n    if (seen.has(val)) return seen.get(val);\n    // High fidelity polyfills of Object.create and Object.getPrototypeOf are\n    // possible in all JS environments, so we will assume they exist/work.\n    const copy = Object.create(Object.getPrototypeOf(val));\n    seen.set(val, copy);\n    Object.keys(val).forEach(key => {\n      copy[key] = cloneDeepHelper((val as any)[key], seen);\n    });\n    return copy;\n  }\n\n  default:\n    return val;\n  }\n}\n", "import '../globals'; // For __DEV__\nimport { isNonNullObject } from './objects';\n\nfunction deepFreeze(value: any) {\n  const workSet = new Set([value]);\n  workSet.forEach(obj => {\n    if (isNonNullObject(obj)) {\n      if (!Object.isFrozen(obj)) Object.freeze(obj);\n      Object.getOwnPropertyNames(obj).forEach(name => {\n        if (isNonNullObject(obj[name])) workSet.add(obj[name]);\n      });\n    }\n  });\n  return value;\n}\n\nexport function maybeDeepFreeze<T>(obj: T): T {\n  if (__DEV__) {\n    deepFreeze(obj);\n  }\n  return obj;\n}\n", "import { Observer } from \"./Observable\";\n\nexport function iterateObserversSafely<E, A>(\n  observers: Set<Observer<E>>,\n  method: keyof Observer<E>,\n  argument?: A,\n) {\n  // In case observers is modified during iteration, we need to commit to the\n  // original elements, which also provides an opportunity to filter them down\n  // to just the observers with the given method.\n  const observersWithMethod: Observer<E>[] = [];\n  observers.forEach(obs => obs[method] && observersWithMethod.push(obs));\n  observersWithMethod.forEach(obs => (obs as any)[method](argument));\n}\n", "import { Observable, Observer } from \"./Observable\";\n\n// Like Observable.prototype.map, except that the mapping function can\n// optionally return a Promise (or be async).\nexport function asyncMap<V, R>(\n  observable: Observable<V>,\n  mapFn: (value: V) => R | PromiseLike<R>,\n  catchFn?: (error: any) => R | PromiseLike<R>,\n): Observable<R> {\n  return new Observable<R>(observer => {\n    const { next, error, complete } = observer;\n    let activeCallbackCount = 0;\n    let completed = false;\n    let promiseQueue = {\n      // Normally we would initialize promiseQueue to Promise.resolve(), but\n      // in this case, for backwards compatibility, we need to be careful to\n      // invoke the first callback synchronously.\n      then(callback: () => any) {\n        return new Promise(resolve => resolve(callback()));\n      },\n    } as Promise<void>;\n\n    function makeCallback(\n      examiner: typeof mapFn | typeof catchFn,\n      delegate: typeof next | typeof error,\n    ): (arg: any) => void {\n      if (examiner) {\n        return arg => {\n          ++activeCallbackCount;\n          const both = () => examiner(arg);\n          promiseQueue = promiseQueue.then(both, both).then(\n            result => {\n              --activeCallbackCount;\n              next && next.call(observer, result);\n              if (completed) {\n                handler.complete!();\n              }\n            },\n            error => {\n              --activeCallbackCount;\n              throw error;\n            },\n          ).catch(caught => {\n            error && error.call(observer, caught);\n          });\n        };\n      } else {\n        return arg => delegate && delegate.call(observer, arg);\n      }\n    }\n\n    const handler: Observer<V> = {\n      next: makeCallback(mapFn, next),\n      error: makeCallback(catchFn, error),\n      complete() {\n        completed = true;\n        if (!activeCallbackCount) {\n          complete && complete.call(observer);\n        }\n      },\n    };\n\n    const sub = observable.subscribe(handler);\n    return () => sub.unsubscribe();\n  });\n}\n", "import { Observable } from \"./Observable\";\n\n// Generic implementations of Observable.prototype methods like map and\n// filter need to know how to create a new Observable from an Observable\n// subclass (like Concast or ObservableQuery). Those methods assume\n// (perhaps unwisely?) that they can call the subtype's constructor with a\n// Subscriber function, even though the subclass constructor might expect\n// different parameters. Defining this static Symbol.species property on\n// the subclass is a hint to generic Observable code to use the default\n// constructor instead of trying to do `new Subclass(observer => ...)`.\nexport function fixObservableSubclass<\n  S extends new (...args: any[]) => Observable<any>,\n>(subclass: S): S {\n  function set(key: symbol | string) {\n    // Object.defineProperty is necessary because the Symbol.species\n    // property is a getter by default in modern JS environments, so we\n    // can't assign to it with a normal assignment expression.\n    Object.defineProperty(subclass, key, { value: Observable });\n  }\n  if (typeof Symbol === \"function\" && Symbol.species) {\n    set(Symbol.species);\n  }\n  // The \"@@species\" string is used as a fake Symbol.species value in some\n  // polyfill systems (including the SymbolSpecies variable used by\n  // zen-observable), so we should set it as well, to be safe.\n  set(\"@@species\");\n  return subclass;\n}\n", "import { Observable, Observer, ObservableSubscription, Subscriber } from \"./Observable\";\nimport { iterateObserversSafely } from \"./iteration\";\nimport { fixObservableSubclass } from \"./subclassing\";\n\ntype MaybeAsync<T> = T | PromiseLike<T>;\n\nfunction isPromiseLike<T>(value: MaybeAsync<T>): value is PromiseLike<T> {\n  return value && typeof (value as any).then === \"function\";\n}\n\n// Any individual Source<T> can be an Observable<T> or a promise for one.\ntype Source<T> = MaybeAsync<Observable<T>>;\n\nexport type ConcastSourcesIterable<T> = Iterable<Source<T>>;\n\n// A Concast<T> observable concatenates the given sources into a single\n// non-overlapping sequence of Ts, automatically unwrapping any promises,\n// and broadcasts the T elements of that sequence to any number of\n// subscribers, all without creating a bunch of intermediary Observable\n// wrapper objects.\n//\n// Even though any number of observers can subscribe to the Concast, each\n// source observable is guaranteed to receive at most one subscribe call,\n// and the results are multicast to all observers.\n//\n// In addition to broadcasting every next/error message to this.observers,\n// the Concast stores the most recent message using this.latest, so any\n// new observers can immediately receive the latest message, even if it\n// was originally delivered in the past. This behavior means we can assume\n// every active observer in this.observers has received the same most\n// recent message.\n//\n// With the exception of this.latest replay, a Concast is a \"hot\"\n// observable in the sense that it does not replay past results from the\n// beginning of time for each new observer.\n//\n// Could we have used some existing RxJS class instead? Concast<T> is\n// similar to a BehaviorSubject<T>, because it is multicast and redelivers\n// the latest next/error message to new subscribers. Unlike Subject<T>,\n// Concast<T> does not expose an Observer<T> interface (this.handlers is\n// intentionally private), since Concast<T> gets its inputs from the\n// concatenated sources. If we ever switch to RxJS, there may be some\n// value in reusing their code, but for now we use zen-observable, which\n// does not contain any Subject implementations.\nexport class Concast<T> extends Observable<T> {\n  // Active observers receiving broadcast messages. Thanks to this.latest,\n  // we can assume all observers in this Set have received the same most\n  // recent message, though possibly at different times in the past.\n  private observers = new Set<Observer<T>>();\n\n  // This property starts off undefined to indicate the initial\n  // subscription has not yet begun, then points to each source\n  // subscription in turn, and finally becomes null after the sources have\n  // been exhausted. After that, it stays null.\n  private sub?: ObservableSubscription | null;\n\n  // Not only can the individual elements of the iterable be promises, but\n  // also the iterable itself can be wrapped in a promise.\n  constructor(sources: MaybeAsync<ConcastSourcesIterable<T>> | Subscriber<T>) {\n    super(observer => {\n      this.addObserver(observer);\n      return () => this.removeObserver(observer);\n    });\n\n    // Suppress rejection warnings for this.promise, since it's perfectly\n    // acceptable to pay no attention to this.promise if you're consuming\n    // the results through the normal observable API.\n    this.promise.catch(_ => {});\n\n    // If someone accidentally tries to create a Concast using a subscriber\n    // function, recover by creating an Observable from that subscriber and\n    // using it as the source.\n    if (typeof sources === \"function\") {\n      sources = [new Observable(sources)];\n    }\n\n    if (isPromiseLike(sources)) {\n      sources.then(\n        iterable => this.start(iterable),\n        this.handlers.error,\n      );\n    } else {\n      this.start(sources);\n    }\n  }\n\n  // A consumable array of source observables, incrementally consumed\n  // each time this.handlers.complete is called.\n  private sources: Source<T>[];\n\n  private start(sources: ConcastSourcesIterable<T>) {\n    if (this.sub !== void 0) return;\n\n    // In practice, sources is most often simply an Array of observables.\n    // TODO Consider using sources[Symbol.iterator]() to take advantage\n    // of the laziness of non-Array iterables.\n    this.sources = Array.from(sources);\n\n    // Calling this.handlers.complete() kicks off consumption of the first\n    // source observable. It's tempting to do this step lazily in\n    // addObserver, but this.promise can be accessed without calling\n    // addObserver, so consumption needs to begin eagerly.\n    this.handlers.complete();\n  }\n\n  private deliverLastMessage(observer: Observer<T>) {\n    if (this.latest) {\n      const nextOrError = this.latest[0];\n      const method = observer[nextOrError];\n      if (method) {\n        method.call(observer, this.latest[1]);\n      }\n      // If the subscription is already closed, and the last message was\n      // a 'next' message, simulate delivery of the final 'complete'\n      // message again.\n      if (this.sub === null &&\n          nextOrError === \"next\" &&\n          observer.complete) {\n        observer.complete();\n      }\n    }\n  }\n\n  // Note: cleanup observers do not count towards this total.\n  private addCount = 0;\n\n  public addObserver(observer: Observer<T>) {\n    if (!this.observers.has(observer)) {\n      // Immediately deliver the most recent message, so we can always\n      // be sure all observers have the latest information.\n      this.deliverLastMessage(observer);\n      this.observers.add(observer);\n      ++this.addCount;\n    }\n  }\n\n  public removeObserver(\n    observer: Observer<T>,\n    quietly?: boolean,\n  ) {\n    if (this.observers.delete(observer) &&\n        --this.addCount < 1 &&\n        !quietly) {\n      // In case there are still any cleanup observers in this.observers,\n      // and no error or completion has been broadcast yet, make sure\n      // those observers receive an error that terminates them.\n      this.handlers.error(new Error(\"Observable cancelled prematurely\"));\n    }\n  }\n\n  // Any Concast object can be trivially converted to a Promise, without\n  // having to create a new wrapper Observable. This promise provides an\n  // easy way to observe the final state of the Concast.\n  private resolve: (result?: T | PromiseLike<T>) => void;\n  private reject: (reason: any) => void;\n  public readonly promise = new Promise<T>((resolve, reject) => {\n    this.resolve = resolve;\n    this.reject = reject;\n  });\n\n  // Name and argument of the most recently invoked observer method, used\n  // to deliver latest results immediately to new observers.\n  private latest?: [\"next\" | \"error\", any];\n\n  // Bound handler functions that can be reused for every internal\n  // subscription.\n  private handlers = {\n    next: (result: T) => {\n      if (this.sub !== null) {\n        this.latest = [\"next\", result];\n        iterateObserversSafely(this.observers, \"next\", result);\n      }\n    },\n\n    error: (error: any) => {\n      const { sub } = this;\n      if (sub !== null) {\n        // Delay unsubscribing from the underlying subscription slightly,\n        // so that immediately subscribing another observer can keep the\n        // subscription active.\n        if (sub) Promise.resolve().then(() => sub.unsubscribe());\n        this.sub = null;\n        this.latest = [\"error\", error];\n        this.reject(error);\n        iterateObserversSafely(this.observers, \"error\", error);\n      }\n    },\n\n    complete: () => {\n      if (this.sub !== null) {\n        const value = this.sources.shift();\n        if (!value) {\n          this.sub = null;\n          if (this.latest &&\n              this.latest[0] === \"next\") {\n            this.resolve(this.latest[1]);\n          } else {\n            this.resolve();\n          }\n          // We do not store this.latest = [\"complete\"], because doing so\n          // discards useful information about the previous next (or\n          // error) message. Instead, if new observers subscribe after\n          // this Concast has completed, they will receive the final\n          // 'next' message (unless there was an error) immediately\n          // followed by a 'complete' message (see addObserver).\n          iterateObserversSafely(this.observers, \"complete\");\n        } else if (isPromiseLike(value)) {\n          value.then(obs => this.sub = obs.subscribe(this.handlers));\n        } else {\n          this.sub = value.subscribe(this.handlers);\n        }\n      }\n    },\n  };\n\n  public cleanup(callback: () => any) {\n    let called = false;\n    const once = () => {\n      if (!called) {\n        called = true;\n        // Removing a cleanup observer should not unsubscribe from the\n        // underlying Observable, so the only removeObserver behavior we\n        // need here is to delete observer from this.observers.\n        this.observers.delete(observer);\n        callback();\n      }\n    }\n    const observer = {\n      next: once,\n      error: once,\n      complete: once,\n    };\n    const count = this.addCount;\n    this.addObserver(observer);\n    // Normally addObserver increments this.addCount, but we can \"hide\"\n    // cleanup observers by restoring this.addCount to its previous value\n    // after adding any cleanup observer.\n    this.addCount = count;\n  }\n\n  // A public way to abort observation and broadcast.\n  public cancel = (reason: any) => {\n    this.reject(reason);\n    this.sources = [];\n    this.handlers.complete();\n  }\n}\n\n// Necessary because the Concast constructor has a different signature\n// than the Observable constructor.\nfixObservableSubclass(Concast);\n", "export function isNonEmptyArray<T>(value?: ArrayLike<T>): value is Array<T> {\n  return Array.isArray(value) && value.length > 0;\n}\n", "import { ExecutionResult } from 'graphql';\n\nexport function graphQLResultHasError(result: ExecutionResult): boolean {\n  return (result.errors && result.errors.length > 0) || false;\n}\n", "export const canUseWeakMap = typeof WeakMap === 'function' && !(\n  typeof navigator === 'object' &&\n  navigator.product === 'ReactNative'\n);\n\nexport const canUseWeakSet = typeof WeakSet === 'function';\n", "import { TupleToIntersection } from './mergeDeep';\n\n/**\n * Merges the provided objects shallowly and removes\n * all properties with an `undefined` value\n */\nexport function compact<TArgs extends any[]>(\n  ...objects: TArgs\n): TupleToIntersection<TArgs> {\n  const result = Object.create(null);\n\n  objects.forEach(obj => {\n    if (!obj) return;\n    Object.keys(obj).forEach(key => {\n      const value = (obj as any)[key];\n      if (value !== void 0) {\n        result[key] = value;\n      }\n    });\n  });\n\n  return result;\n}\n", "const prefixCounts = new Map<string, number>();\n\n// These IDs won't be globally unique, but they will be unique within this\n// process, thanks to the counter, and unguessable thanks to the random suffix.\nexport function makeUniqueId(prefix: string) {\n  const count = prefixCounts.get(prefix) || 1;\n  prefixCounts.set(prefix, count + 1);\n  return `${prefix}:${count}:${Math.random().toString(36).slice(2)}`;\n}\n", "import { makeUniqueId } from \"./makeUniqueId\";\n\nexport function stringifyForDisplay(value: any): string {\n  const undefId = makeUniqueId(\"stringifyForDisplay\");\n  return JSON.stringify(value, (key, value) => {\n    return value === void 0 ? undefId : value;\n  }).split(JSON.stringify(undefId)).join(\"<undefined>\");\n}\n", "import { invariant } from \"ts-invariant\";\nimport { DEV } from \"./globals\";\ninvariant(\"boolean\" === typeof DEV, DEV);\nexport { DEV }\n\nexport {\n  DirectiveInfo,\n  InclusionDirectives,\n  shouldInclude,\n  hasDirectives,\n  hasClientExports,\n  getDirectiveNames,\n  getInclusionDirectives,\n} from './graphql/directives';\n\nexport {\n  FragmentMap,\n  createFragmentMap,\n  getFragmentQueryDocument,\n  getFragmentFromSelection,\n} from './graphql/fragments';\n\nexport {\n  checkDocument,\n  getOperationDefinition,\n  getOperationName,\n  getFragmentDefinitions,\n  getQueryDefinition,\n  getFragmentDefinition,\n  getMainDefinition,\n  getDefaultValues,\n} from './graphql/getFromAST';\n\nexport {\n  StoreObject,\n  Reference,\n  StoreValue,\n  Directives,\n  VariableValue,\n  makeReference,\n  isDocumentNode,\n  isReference,\n  isField,\n  isInlineFragment,\n  valueToObjectRepresentation,\n  storeKeyNameFromField,\n  argumentsObjectFromField,\n  resultKeyNameFromField,\n  getStoreKeyName,\n  getTypenameFromResult,\n} from './graphql/storeUtils';\n\nexport {\n  RemoveNodeConfig,\n  GetNodeConfig,\n  RemoveDirectiveConfig,\n  GetDirectiveConfig,\n  RemoveArgumentsConfig,\n  GetFragmentSpreadConfig,\n  RemoveFragmentSpreadConfig,\n  RemoveFragmentDefinitionConfig,\n  RemoveVariableDefinitionConfig,\n  addTypenameToDocument,\n  buildQueryFromSelectionSet,\n  removeDirectivesFromDocument,\n  removeConnectionDirectiveFromDocument,\n  removeArgumentsFromDocument,\n  removeFragmentSpreadFromDocument,\n  removeClientSetsFromDocument,\n} from './graphql/transform';\n\nexport {\n  concatPagination,\n  offsetLimitPagination,\n  relayStylePagination,\n} from './policies/pagination';\n\nexport {\n  Observable,\n  Observer,\n  ObservableSubscription\n} from './observables/Observable';\n\nexport * from './common/mergeDeep';\nexport * from './common/cloneDeep';\nexport * from './common/maybeDeepFreeze';\nexport * from './common/maybe';\nexport * from './observables/iteration';\nexport * from './observables/asyncMap';\nexport * from './observables/Concast';\nexport * from './observables/subclassing';\nexport * from './common/arrays';\nexport * from './common/objects';\nexport * from './common/errorHandling';\nexport * from './common/canUse';\nexport * from './common/compact';\nexport * from './common/makeUniqueId';\nexport * from './common/stringifyForDisplay';\n\nexport * from './types/IsStrictlyAny';\n", "import { Observable } from '../../utilities';\n\nexport function fromError<T>(errorValue: any): Observable<T> {\n  return new Observable<T>(observer => {\n    observer.error(errorValue);\n  });\n}\n", "export type ServerError = Error & {\n  response: Response;\n  result: Record<string, any>;\n  statusCode: number;\n};\n\nexport const throwServerError = (\n  response: Response,\n  result: any,\n  message: string\n) => {\n  const error = new Error(message) as ServerError;\n  error.name = 'ServerError';\n  error.response = response;\n  error.statusCode = response.status;\n  error.result = result;\n  throw error;\n};\n", "import { InvariantError } from 'ts-invariant';\n\nimport { GraphQLRequest } from '../core';\n\nexport function validateOperation(operation: GraphQLRequest): GraphQLRequest {\n  const OPERATION_FIELDS = [\n    'query',\n    'operationName',\n    'variables',\n    'extensions',\n    'context',\n  ];\n  for (let key of Object.keys(operation)) {\n    if (OPERATION_FIELDS.indexOf(key) < 0) {\n      throw new InvariantError(`illegal argument: ${key}`);\n    }\n  }\n\n  return operation;\n}\n", "import { GraphQLRequest, Operation } from '../core';\n\nexport function createOperation(\n  starting: any,\n  operation: GraphQLRequest,\n): Operation {\n  let context = { ...starting };\n  const setContext = (next: any) => {\n    if (typeof next === 'function') {\n      context = { ...context, ...next(context) };\n    } else {\n      context = { ...context, ...next };\n    }\n  };\n  const getContext = () => ({ ...context });\n\n  Object.defineProperty(operation, 'setContext', {\n    enumerable: false,\n    value: setContext,\n  });\n\n  Object.defineProperty(operation, 'getContext', {\n    enumerable: false,\n    value: getContext,\n  });\n\n  return operation as Operation;\n}\n", "import { GraphQLRequest, Operation } from '../core';\nimport { getOperationName } from '../../utilities';\n\nexport function transformOperation(operation: GraphQLRequest): GraphQLRequest {\n  const transformedOperation: GraphQLRequest = {\n    variables: operation.variables || {},\n    extensions: operation.extensions || {},\n    operationName: operation.operationName,\n    query: operation.query,\n  };\n\n  // Best guess at an operation name\n  if (!transformedOperation.operationName) {\n    transformedOperation.operationName =\n      typeof transformedOperation.query !== 'string'\n        ? getOperationName(transformedOperation.query) || undefined\n        : '';\n  }\n\n  return transformedOperation as Operation;\n}\n", "import { InvariantError, invariant } from 'ts-invariant';\n\nimport { Observable } from '../../utilities';\nimport {\n  NextLink,\n  Operation,\n  RequestHandler,\n  FetchResult,\n  GraphQLRequest\n} from './types';\nimport {\n  validateOperation,\n  createOperation,\n  transformOperation,\n} from '../utils';\n\nfunction passthrough(op: Operation, forward: NextLink) {\n  return (forward ? forward(op) : Observable.of()) as Observable<FetchResult>;\n}\n\nfunction toLink(handler: RequestHandler | ApolloLink) {\n  return typeof handler === 'function' ? new ApolloLink(handler) : handler;\n}\n\nfunction isTerminating(link: ApolloLink): boolean {\n  return link.request.length <= 1;\n}\n\nclass LinkError extends Error {\n  public link?: ApolloLink;\n  constructor(message?: string, link?: ApolloLink) {\n    super(message);\n    this.link = link;\n  }\n}\n\nexport class ApolloLink {\n  public static empty(): ApolloLink {\n    return new ApolloLink(() => Observable.of());\n  }\n\n  public static from(links: (ApolloLink | RequestHandler)[]): ApolloLink {\n    if (links.length === 0) return ApolloLink.empty();\n    return links.map(toLink).reduce((x, y) => x.concat(y)) as ApolloLink;\n  }\n\n  public static split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    const leftLink = toLink(left);\n    const rightLink = toLink(right || new ApolloLink(passthrough));\n\n    if (isTerminating(leftLink) && isTerminating(rightLink)) {\n      return new ApolloLink(operation => {\n        return test(operation)\n          ? leftLink.request(operation) || Observable.of()\n          : rightLink.request(operation) || Observable.of();\n      });\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return test(operation)\n          ? leftLink.request(operation, forward) || Observable.of()\n          : rightLink.request(operation, forward) || Observable.of();\n      });\n    }\n  }\n\n  public static execute(\n    link: ApolloLink,\n    operation: GraphQLRequest,\n  ): Observable<FetchResult> {\n    return (\n      link.request(\n        createOperation(\n          operation.context,\n          transformOperation(validateOperation(operation)),\n        ),\n      ) || Observable.of()\n    );\n  }\n\n  public static concat(\n    first: ApolloLink | RequestHandler,\n    second: ApolloLink | RequestHandler,\n  ) {\n    const firstLink = toLink(first);\n    if (isTerminating(firstLink)) {\n      invariant.warn(\n        new LinkError(\n          `You are calling concat on a terminating link, which will have no effect`,\n          firstLink,\n        ),\n      );\n      return firstLink;\n    }\n    const nextLink = toLink(second);\n\n    if (isTerminating(nextLink)) {\n      return new ApolloLink(\n        operation =>\n          firstLink.request(\n            operation,\n            op => nextLink.request(op) || Observable.of(),\n          ) || Observable.of(),\n      );\n    } else {\n      return new ApolloLink((operation, forward) => {\n        return (\n          firstLink.request(operation, op => {\n            return nextLink.request(op, forward) || Observable.of();\n          }) || Observable.of()\n        );\n      });\n    }\n  }\n\n  constructor(request?: RequestHandler) {\n    if (request) this.request = request;\n  }\n\n  public split(\n    test: (op: Operation) => boolean,\n    left: ApolloLink | RequestHandler,\n    right?: ApolloLink | RequestHandler,\n  ): ApolloLink {\n    return this.concat(\n      ApolloLink.split(test, left, right || new ApolloLink(passthrough))\n    );\n  }\n\n  public concat(next: ApolloLink | RequestHandler): ApolloLink {\n    return ApolloLink.concat(this, next);\n  }\n\n  public request(\n    operation: Operation,\n    forward?: NextLink,\n  ): Observable<FetchResult> | null {\n    throw new InvariantError('request is not implemented');\n  }\n\n  protected onError(\n    error: any,\n    observer?: ZenObservable.Observer<FetchResult>,\n  ): false | void {\n    if (observer && observer.error) {\n      observer.error(error);\n      // Returning false indicates that observer.error does not need to be\n      // called again, since it was already called (on the previous line).\n      // Calling observer.error again would not cause any real problems,\n      // since only the first call matters, but custom onError functions\n      // might have other reasons for wanting to prevent the default\n      // behavior by returning false.\n      return false;\n    }\n    // Throw errors will be passed to observer.error.\n    throw error;\n  }\n\n  public setOnError(fn: ApolloLink[\"onError\"]): this {\n    this.onError = fn;\n    return this;\n  }\n}\n", "import { ApolloLink } from './ApolloLink';\n\nexport const from = ApolloLink.from;\n", "import { ApolloLink } from './ApolloLink';\n\nexport const execute = ApolloLink.execute;\n", "import { invariant } from \"ts-invariant\";\nimport { DEV } from \"../../utilities\";\ninvariant(\"boolean\" === typeof DEV, DEV);\n\nexport { empty } from './empty';\nexport { from } from './from';\nexport { split } from './split';\nexport { concat } from './concat';\nexport { execute } from './execute';\nexport { ApolloLink } from './ApolloLink';\n\nexport * from './types';\n", "export const version = 'local';\n", "import { Operation } from '../core';\nimport { throwServerError } from '../utils';\n\nconst { hasOwnProperty } = Object.prototype;\n\nexport type ServerParseError = Error & {\n  response: Response;\n  statusCode: number;\n  bodyText: string;\n};\n\nexport function parseAndCheckHttpResponse(\n  operations: Operation | Operation[],\n) {\n  return (response: Response) => response\n    .text()\n    .then(bodyText => {\n      try {\n        return JSON.parse(bodyText);\n      } catch (err) {\n        const parseError = err as ServerParseError;\n        parseError.name = 'ServerParseError';\n        parseError.response = response;\n        parseError.statusCode = response.status;\n        parseError.bodyText = bodyText;\n        throw parseError;\n      }\n    })\n    .then((result: any) => {\n      if (response.status >= 300) {\n        // Network error\n        throwServerError(\n          response,\n          result,\n          `Response not successful: Received status code ${response.status}`,\n        );\n      }\n\n      if (\n        !Array.isArray(result) &&\n        !hasOwnProperty.call(result, 'data') &&\n        !hasOwnProperty.call(result, 'errors')\n      ) {\n        // Data error\n        throwServerError(\n          response,\n          result,\n          `Server response was missing for query '${\n            Array.isArray(operations)\n              ? operations.map(op => op.operationName)\n              : operations.operationName\n          }'.`,\n        );\n      }\n      return result;\n    });\n}\n", "import { InvariantError } from 'ts-invariant';\n\nexport type ClientParseError = InvariantError & {\n  parseError: Error;\n};\n\nexport const serializeFetchParameter = (p: any, label: string) => {\n  let serialized;\n  try {\n    serialized = JSON.stringify(p);\n  } catch (e) {\n    const parseError = new InvariantError(\n      `Network request failed. ${label} is not serializable: ${e.message}`,\n    ) as ClientParseError;\n    parseError.parseError = e;\n    throw parseError;\n  }\n  return serialized;\n};\n", "import { print } from 'graphql';\n\nimport { Operation } from '../core';\n\nexport interface UriFunction {\n  (operation: Operation): string;\n}\n\nexport interface Body {\n  query?: string;\n  operationName?: string;\n  variables?: Record<string, any>;\n  extensions?: Record<string, any>;\n}\n\nexport interface HttpOptions {\n  /**\n   * The URI to use when fetching operations.\n   *\n   * Defaults to '/graphql'.\n   */\n  uri?: string | UriFunction;\n\n  /**\n   * Passes the extensions field to your graphql server.\n   *\n   * Defaults to false.\n   */\n  includeExtensions?: boolean;\n\n  /**\n   * A `fetch`-compatible API to use when making requests.\n   */\n  fetch?: WindowOrWorkerGlobalScope['fetch'];\n\n  /**\n   * An object representing values to be sent as headers on the request.\n   */\n  headers?: any;\n\n  /**\n   * The credentials policy you want to use for the fetch call.\n   */\n  credentials?: string;\n\n  /**\n   * Any overrides of the fetch options argument to pass to the fetch call.\n   */\n  fetchOptions?: any;\n\n  /**\n   * If set to true, use the HTTP GET method for query operations. Mutations\n   * will still use the method specified in fetchOptions.method (which defaults\n   * to POST).\n   */\n  useGETForQueries?: boolean;\n\n  /**\n   * If set to true, the default behavior of stripping unused variables\n   * from the request will be disabled.\n   *\n   * Unused variables are likely to trigger server-side validation errors,\n   * per https://spec.graphql.org/draft/#sec-All-Variables-Used, but this\n   * includeUnusedVariables option can be useful if your server deviates\n   * from the GraphQL specification by not strictly enforcing that rule.\n   */\n  includeUnusedVariables?: boolean;\n}\n\nexport interface HttpQueryOptions {\n  includeQuery?: boolean;\n  includeExtensions?: boolean;\n}\n\nexport interface HttpConfig {\n  http?: HttpQueryOptions;\n  options?: any;\n  headers?: any;\n  credentials?: any;\n}\n\nconst defaultHttpOptions: HttpQueryOptions = {\n  includeQuery: true,\n  includeExtensions: false,\n};\n\nconst defaultHeaders = {\n  // headers are case insensitive (https://stackoverflow.com/a/5259004)\n  accept: '*/*',\n  'content-type': 'application/json',\n};\n\nconst defaultOptions = {\n  method: 'POST',\n};\n\nexport const fallbackHttpConfig = {\n  http: defaultHttpOptions,\n  headers: defaultHeaders,\n  options: defaultOptions,\n};\n\nexport const selectHttpOptionsAndBody = (\n  operation: Operation,\n  fallbackConfig: HttpConfig,\n  ...configs: Array<HttpConfig>\n) => {\n  let options: HttpConfig & Record<string, any> = {\n    ...fallbackConfig.options,\n    headers: fallbackConfig.headers,\n    credentials: fallbackConfig.credentials,\n  };\n  let http: HttpQueryOptions = fallbackConfig.http || {};\n\n  /*\n   * use the rest of the configs to populate the options\n   * configs later in the list will overwrite earlier fields\n   */\n  configs.forEach(config => {\n    options = {\n      ...options,\n      ...config.options,\n      headers: {\n        ...options.headers,\n        ...headersToLowerCase(config.headers),\n      },\n    };\n    if (config.credentials) options.credentials = config.credentials;\n\n    http = {\n      ...http,\n      ...config.http,\n    };\n  });\n\n  //The body depends on the http options\n  const { operationName, extensions, variables, query } = operation;\n  const body: Body = { operationName, variables };\n\n  if (http.includeExtensions) (body as any).extensions = extensions;\n\n  // not sending the query (i.e persisted queries)\n  if (http.includeQuery) (body as any).query = print(query);\n\n  return {\n    options,\n    body,\n  };\n};\n\nfunction headersToLowerCase(\n  headers: Record<string, string> | undefined\n): typeof headers {\n  if (headers) {\n    const normalized = Object.create(null);\n    Object.keys(Object(headers)).forEach(name => {\n      normalized[name.toLowerCase()] = headers[name];\n    });\n    return normalized;\n  }\n  return headers;\n}\n", "import { InvariantError } from 'ts-invariant';\n\nexport const checkFetcher = (fetcher: WindowOrWorkerGlobalScope['fetch'] | undefined) => {\n  if (!fetcher && typeof fetch === 'undefined') {\n    throw new InvariantError(`\n\"fetch\" has not been found globally and no fetcher has been \\\nconfigured. To fix this, install a fetch package (like \\\nhttps://www.npmjs.com/package/cross-fetch), instantiate the \\\nfetcher, and pass it into your HttpLink constructor. For example:\n\nimport fetch from 'cross-fetch';\nimport { ApolloClient, HttpLink } from '@apollo/client';\nconst client = new ApolloClient({\n  link: new HttpLink({ uri: '/graphql', fetch })\n});\n    `);\n  }\n};\n", "export const createSignalIfSupported = () => {\n  if (typeof AbortController === 'undefined')\n    return { controller: false, signal: false };\n\n  const controller = new AbortController();\n  const signal = controller.signal;\n  return { controller, signal };\n};\n", "import { Operation } from '../core';\n\nexport const selectURI = (\n  operation: Operation,\n  fallbackURI?: string | ((operation: Operation) => string),\n) => {\n  const context = operation.getContext();\n  const contextURI = context.uri;\n\n  if (contextURI) {\n    return contextURI;\n  } else if (typeof fallbackURI === 'function') {\n    return fallbackURI(operation);\n  } else {\n    return (fallbackURI as string) || '/graphql';\n  }\n};\n", "import { serializeFetchParameter } from './serializeFetchParameter';\nimport { Body } from './selectHttpOptionsAndBody';\n\n// For GET operations, returns the given URI rewritten with parameters, or a\n// parse error.\nexport function rewriteURIForGET(chosenURI: string, body: Body) {\n  // Implement the standard HTTP GET serialization, plus 'extensions'. Note\n  // the extra level of JSON serialization!\n  const queryParams: string[] = [];\n  const addQueryParam = (key: string, value: string) => {\n    queryParams.push(`${key}=${encodeURIComponent(value)}`);\n  };\n\n  if ('query' in body) {\n    addQueryParam('query', body.query!);\n  }\n  if (body.operationName) {\n    addQueryParam('operationName', body.operationName);\n  }\n  if (body.variables) {\n    let serializedVariables;\n    try {\n      serializedVariables = serializeFetchParameter(\n        body.variables,\n        'Variables map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('variables', serializedVariables);\n  }\n  if (body.extensions) {\n    let serializedExtensions;\n    try {\n      serializedExtensions = serializeFetchParameter(\n        body.extensions,\n        'Extensions map',\n      );\n    } catch (parseError) {\n      return { parseError };\n    }\n    addQueryParam('extensions', serializedExtensions);\n  }\n\n  // Reconstruct the URI with added query params.\n  // XXX This assumes that the URI is well-formed and that it doesn't\n  //     already contain any of these query params. We could instead use the\n  //     URL API and take a polyfill (whatwg-url@6) for older browsers that\n  //     don't support URLSearchParams. Note that some browsers (and\n  //     versions of whatwg-url) support URL but not URLSearchParams!\n  let fragment = '',\n    preFragment = chosenURI;\n  const fragmentStart = chosenURI.indexOf('#');\n  if (fragmentStart !== -1) {\n    fragment = chosenURI.substr(fragmentStart);\n    preFragment = chosenURI.substr(0, fragmentStart);\n  }\n  const queryParamsPrefix = preFragment.indexOf('?') === -1 ? '?' : '&';\n  const newURI =\n    preFragment + queryParamsPrefix + queryParams.join('&') + fragment;\n  return { newURI };\n}\n", "import { visit, DefinitionNode, VariableDefinitionNode } from 'graphql';\n\nimport { ApolloLink } from '../core';\nimport { Observable } from '../../utilities';\nimport { serializeFetchParameter } from './serializeFetchParameter';\nimport { selectURI } from './selectURI';\nimport { parseAndCheckHttpResponse } from './parseAndCheckHttpResponse';\nimport { checkFetcher } from './checkFetcher';\nimport {\n  selectHttpOptionsAndBody,\n  fallbackHttpConfig,\n  HttpOptions\n} from './selectHttpOptionsAndBody';\nimport { createSignalIfSupported } from './createSignalIfSupported';\nimport { rewriteURIForGET } from './rewriteURIForGET';\nimport { fromError } from '../utils';\nimport { maybe } from '../../utilities';\n\nconst backupFetch = maybe(() => fetch);\n\nexport const createHttpLink = (linkOptions: HttpOptions = {}) => {\n  let {\n    uri = '/graphql',\n    // use default global fetch if nothing passed in\n    fetch: preferredFetch,\n    includeExtensions,\n    useGETForQueries,\n    includeUnusedVariables = false,\n    ...requestOptions\n  } = linkOptions;\n\n  if (__DEV__) {\n    // Make sure at least one of preferredFetch, window.fetch, or backupFetch is\n    // defined, so requests won't fail at runtime.\n    checkFetcher(preferredFetch || backupFetch);\n  }\n\n  const linkConfig = {\n    http: { includeExtensions },\n    options: requestOptions.fetchOptions,\n    credentials: requestOptions.credentials,\n    headers: requestOptions.headers,\n  };\n\n  return new ApolloLink(operation => {\n    let chosenURI = selectURI(operation, uri);\n\n    const context = operation.getContext();\n\n    // `apollographql-client-*` headers are automatically set if a\n    // `clientAwareness` object is found in the context. These headers are\n    // set first, followed by the rest of the headers pulled from\n    // `context.headers`. If desired, `apollographql-client-*` headers set by\n    // the `clientAwareness` object can be overridden by\n    // `apollographql-client-*` headers set in `context.headers`.\n    const clientAwarenessHeaders: {\n      'apollographql-client-name'?: string;\n      'apollographql-client-version'?: string;\n    } = {};\n\n    if (context.clientAwareness) {\n      const { name, version } = context.clientAwareness;\n      if (name) {\n        clientAwarenessHeaders['apollographql-client-name'] = name;\n      }\n      if (version) {\n        clientAwarenessHeaders['apollographql-client-version'] = version;\n      }\n    }\n\n    const contextHeaders = { ...clientAwarenessHeaders, ...context.headers };\n\n    const contextConfig = {\n      http: context.http,\n      options: context.fetchOptions,\n      credentials: context.credentials,\n      headers: contextHeaders,\n    };\n\n    //uses fallback, link, and then context to build options\n    const { options, body } = selectHttpOptionsAndBody(\n      operation,\n      fallbackHttpConfig,\n      linkConfig,\n      contextConfig,\n    );\n\n    if (body.variables && !includeUnusedVariables) {\n      const unusedNames = new Set(Object.keys(body.variables));\n      visit(operation.query, {\n        Variable(node, _key, parent) {\n          // A variable type definition at the top level of a query is not\n          // enough to silence server-side errors about the variable being\n          // unused, so variable definitions do not count as usage.\n          // https://spec.graphql.org/draft/#sec-All-Variables-Used\n          if (parent && (parent as VariableDefinitionNode).kind !== 'VariableDefinition') {\n            unusedNames.delete(node.name.value);\n          }\n        },\n      });\n      if (unusedNames.size) {\n        // Make a shallow copy of body.variables (with keys in the same\n        // order) and then delete unused variables from the copy.\n        body.variables = { ...body.variables };\n        unusedNames.forEach(name => {\n          delete body.variables![name];\n        });\n      }\n    }\n\n    let controller: any;\n    if (!(options as any).signal) {\n      const { controller: _controller, signal } = createSignalIfSupported();\n      controller = _controller;\n      if (controller) (options as any).signal = signal;\n    }\n\n    // If requested, set method to GET if there are no mutations.\n    const definitionIsMutation = (d: DefinitionNode) => {\n      return d.kind === 'OperationDefinition' && d.operation === 'mutation';\n    };\n    if (\n      useGETForQueries &&\n      !operation.query.definitions.some(definitionIsMutation)\n    ) {\n      options.method = 'GET';\n    }\n\n    if (options.method === 'GET') {\n      const { newURI, parseError } = rewriteURIForGET(chosenURI, body);\n      if (parseError) {\n        return fromError(parseError);\n      }\n      chosenURI = newURI;\n    } else {\n      try {\n        (options as any).body = serializeFetchParameter(body, 'Payload');\n      } catch (parseError) {\n        return fromError(parseError);\n      }\n    }\n\n    return new Observable(observer => {\n      // Prefer linkOptions.fetch (preferredFetch) if provided, and otherwise\n      // fall back to the *current* global window.fetch function (see issue\n      // #7832), or (if all else fails) the backupFetch function we saved when\n      // this module was first evaluated. This last option protects against the\n      // removal of window.fetch, which is unlikely but not impossible.\n      const currentFetch = preferredFetch || maybe(() => fetch) || backupFetch;\n\n      currentFetch!(chosenURI, options)\n        .then(response => {\n          operation.setContext({ response });\n          return response;\n        })\n        .then(parseAndCheckHttpResponse(operation))\n        .then(result => {\n          // we have data and can send it to back up the link chain\n          observer.next(result);\n          observer.complete();\n          return result;\n        })\n        .catch(err => {\n          // fetch was cancelled so it's already been cleaned up in the unsubscribe\n          if (err.name === 'AbortError') return;\n          // if it is a network error, BUT there is graphql result info\n          // fire the next observer before calling error\n          // this gives apollo-client (and react-apollo) the `graphqlErrors` and `networErrors`\n          // to pass to UI\n          // this should only happen if we *also* have data as part of the response key per\n          // the spec\n          if (err.result && err.result.errors && err.result.data) {\n            // if we don't call next, the UI can only show networkError because AC didn't\n            // get any graphqlErrors\n            // this is graphql execution result info (i.e errors and possibly data)\n            // this is because there is no formal spec how errors should translate to\n            // http status codes. So an auth error (401) could have both data\n            // from a public field, errors from a private field, and a status of 401\n            // {\n            //  user { // this will have errors\n            //    firstName\n            //  }\n            //  products { // this is public so will have data\n            //    cost\n            //  }\n            // }\n            //\n            // the result of above *could* look like this:\n            // {\n            //   data: { products: [{ cost: \"$10\" }] },\n            //   errors: [{\n            //      message: 'your session has timed out',\n            //      path: []\n            //   }]\n            // }\n            // status code of above would be a 401\n            // in the UI you want to show data where you can, errors as data where you can\n            // and use correct http status codes\n            observer.next(err.result);\n          }\n          observer.error(err);\n        });\n\n      return () => {\n        // XXX support canceling this request\n        // https://developers.google.com/web/updates/2017/09/abortable-fetch\n        if (controller) controller.abort();\n      };\n    });\n  });\n};\n", "import { ApolloLink, RequestHandler } from '../core';\nimport { HttpOptions } from './selectHttpOptionsAndBody';\nimport { createHttpLink } from './createHttpLink';\n\nexport class HttpLink extends ApolloLink {\n  public requester: RequestHandler;\n  constructor(public options: HttpOptions = {}) {\n    super(createHttpLink(options).request);\n  }\n}\n", "const { toString, hasOwnProperty } = Object.prototype;\nconst fnToStr = Function.prototype.toString;\nconst previousComparisons = new Map<object, Set<object>>();\n\n/**\n * Performs a deep equality check on two JavaScript values, tolerating cycles.\n */\nexport function equal(a: any, b: any): boolean {\n  try {\n    return check(a, b);\n  } finally {\n    previousComparisons.clear();\n  }\n}\n\n// Allow default imports as well.\nexport default equal;\n\nfunction check(a: any, b: any): boolean {\n  // If the two values are strictly equal, our job is easy.\n  if (a === b) {\n    return true;\n  }\n\n  // Object.prototype.toString returns a representation of the runtime type of\n  // the given value that is considerably more precise than typeof.\n  const aTag = toString.call(a);\n  const bTag = toString.call(b);\n\n  // If the runtime types of a and b are different, they could maybe be equal\n  // under some interpretation of equality, but for simplicity and performance\n  // we just return false instead.\n  if (aTag !== bTag) {\n    return false;\n  }\n\n  switch (aTag) {\n    case '[object Array]':\n      // Arrays are a lot like other objects, but we can cheaply compare their\n      // lengths as a short-cut before comparing their elements.\n      if (a.length !== b.length) return false;\n      // Fall through to object case...\n    case '[object Object]': {\n      if (previouslyCompared(a, b)) return true;\n\n      const aKeys = definedKeys(a);\n      const bKeys = definedKeys(b);\n\n      // If `a` and `b` have a different number of enumerable keys, they\n      // must be different.\n      const keyCount = aKeys.length;\n      if (keyCount !== bKeys.length) return false;\n\n      // Now make sure they have the same keys.\n      for (let k = 0; k < keyCount; ++k) {\n        if (!hasOwnProperty.call(b, aKeys[k])) {\n          return false;\n        }\n      }\n\n      // Finally, check deep equality of all child properties.\n      for (let k = 0; k < keyCount; ++k) {\n        const key = aKeys[k];\n        if (!check(a[key], b[key])) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Error]':\n      return a.name === b.name && a.message === b.message;\n\n    case '[object Number]':\n      // Handle NaN, which is !== itself.\n      if (a !== a) return b !== b;\n      // Fall through to shared +a === +b case...\n    case '[object Boolean]':\n    case '[object Date]':\n      return +a === +b;\n\n    case '[object RegExp]':\n    case '[object String]':\n      return a == `${b}`;\n\n    case '[object Map]':\n    case '[object Set]': {\n      if (a.size !== b.size) return false;\n      if (previouslyCompared(a, b)) return true;\n\n      const aIterator = a.entries();\n      const isMap = aTag === '[object Map]';\n\n      while (true) {\n        const info = aIterator.next();\n        if (info.done) break;\n\n        // If a instanceof Set, aValue === aKey.\n        const [aKey, aValue] = info.value;\n\n        // So this works the same way for both Set and Map.\n        if (!b.has(aKey)) {\n          return false;\n        }\n\n        // However, we care about deep equality of values only when dealing\n        // with Map structures.\n        if (isMap && !check(aValue, b.get(aKey))) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    case '[object Uint16Array]':\n    case '[object Uint8Array]': // Buffer, in Node.js.\n    case '[object Uint32Array]':\n    case '[object Int32Array]':\n    case '[object Int8Array]':\n    case '[object Int16Array]':\n    case '[object ArrayBuffer]':\n      // DataView doesn't need these conversions, but the equality check is\n      // otherwise the same.\n      a = new Uint8Array(a);\n      b = new Uint8Array(b);\n      // Fall through...\n    case '[object DataView]': {\n      let len = a.byteLength;\n      if (len === b.byteLength) {\n        while (len-- && a[len] === b[len]) {\n          // Keep looping as long as the bytes are equal.\n        }\n      }\n      return len === -1;\n    }\n\n    case '[object AsyncFunction]':\n    case '[object GeneratorFunction]':\n    case '[object AsyncGeneratorFunction]':\n    case '[object Function]': {\n      const aCode = fnToStr.call(a);\n      if (aCode !== fnToStr.call(b)) {\n        return false;\n      }\n\n      // We consider non-native functions equal if they have the same code\n      // (native functions require === because their code is censored).\n      // Note that this behavior is not entirely sound, since !== function\n      // objects with the same code can behave differently depending on\n      // their closure scope. However, any function can behave differently\n      // depending on the values of its input arguments (including this)\n      // and its calling context (including its closure scope), even\n      // though the function object is === to itself; and it is entirely\n      // possible for functions that are not === to behave exactly the\n      // same under all conceivable circumstances. Because none of these\n      // factors are statically decidable in JavaScript, JS function\n      // equality is not well-defined. This ambiguity allows us to\n      // consider the best possible heuristic among various imperfect\n      // options, and equating non-native functions that have the same\n      // code has enormous practical benefits, such as when comparing\n      // functions that are repeatedly passed as fresh function\n      // expressions within objects that are otherwise deeply equal. Since\n      // any function created from the same syntactic expression (in the\n      // same code location) will always stringify to the same code\n      // according to fnToStr.call, we can reasonably expect these\n      // repeatedly passed function expressions to have the same code, and\n      // thus behave \"the same\" (with all the caveats mentioned above),\n      // even though the runtime function objects are !== to one another.\n      return !endsWith(aCode, nativeCodeSuffix);\n    }\n  }\n\n  // Otherwise the values are not equal.\n  return false;\n}\n\nfunction definedKeys<TObject extends object>(obj: TObject) {\n  // Remember that the second argument to Array.prototype.filter will be\n  // used as `this` within the callback function.\n  return Object.keys(obj).filter(isDefinedKey, obj);\n}\nfunction isDefinedKey<TObject extends object>(\n  this: TObject,\n  key: keyof TObject,\n) {\n  return this[key] !== void 0;\n}\n\nconst nativeCodeSuffix = \"{ [native code] }\";\n\nfunction endsWith(full: string, suffix: string) {\n  const fromIndex = full.length - suffix.length;\n  return fromIndex >= 0 &&\n    full.indexOf(suffix, fromIndex) === fromIndex;\n}\n\nfunction previouslyCompared(a: object, b: object): boolean {\n  // Though cyclic references can make an object graph appear infinite from the\n  // perspective of a depth-first traversal, the graph still contains a finite\n  // number of distinct object references. We use the previousComparisons cache\n  // to avoid comparing the same pair of object references more than once, which\n  // guarantees termination (even if we end up comparing every object in one\n  // graph to every object in the other graph, which is extremely unlikely),\n  // while still allowing weird isomorphic structures (like rings with different\n  // lengths) a chance to pass the equality test.\n  let bSet = previousComparisons.get(a);\n  if (bSet) {\n    // Return true here because we can be sure false will be returned somewhere\n    // else if the objects are not equivalent.\n    if (bSet.has(b)) return true;\n  } else {\n    previousComparisons.set(a, bSet = new Set);\n  }\n  bSet.add(b);\n  return false;\n}\n", "// A [trie](https://en.wikipedia.org/wiki/Trie) data structure that holds\n// object keys weakly, yet can also hold non-object keys, unlike the\n// native `WeakMap`.\n\n// If no makeData function is supplied, the looked-up data will be an empty,\n// null-prototype Object.\nconst defaultMakeData = () => Object.create(null);\n\n// Useful for processing arguments objects as well as arrays.\nconst { forEach, slice } = Array.prototype;\n\nexport class Trie<Data> {\n  // Since a `WeakMap` cannot hold primitive values as keys, we need a\n  // backup `Map` instance to hold primitive keys. Both `this._weakMap`\n  // and `this._strongMap` are lazily initialized.\n  private weak?: WeakMap<any, Trie<Data>>;\n  private strong?: Map<any, Trie<Data>>;\n  private data?: Data;\n\n  constructor(\n    private weakness = true,\n    private makeData: (array: any[]) => Data = defaultMakeData,\n  ) {}\n\n  public lookup<T extends any[]>(...array: T): Data {\n    return this.lookupArray(array);\n  }\n\n  public lookupArray<T extends IArguments | any[]>(array: T): Data {\n    let node: Trie<Data> = this;\n    forEach.call(array, key => node = node.getChildTrie(key));\n    return node.data || (node.data = this.makeData(slice.call(array)));\n  }\n\n  private getChildTrie(key: any) {\n    const map = this.weakness && isObjRef(key)\n      ? this.weak || (this.weak = new WeakMap<any, Trie<Data>>())\n      : this.strong || (this.strong = new Map<any, Trie<Data>>());\n    let child = map.get(key);\n    if (!child) map.set(key, child = new Trie<Data>(this.weakness, this.makeData));\n    return child;\n  }\n}\n\nfunction isObjRef(value: any) {\n  switch (typeof value) {\n  case \"object\":\n    if (value === null) break;\n    // Fall through to return true...\n  case \"function\":\n    return true;\n  }\n  return false;\n}\n", "type Context = {\n  parent: Context | null;\n  slots: { [slotId: string]: any };\n}\n\n// This currentContext variable will only be used if the makeSlotClass\n// function is called, which happens only if this is the first copy of the\n// @wry/context package to be imported.\nlet currentContext: Context | null = null;\n\n// This unique internal object is used to denote the absence of a value\n// for a given Slot, and is never exposed to outside code.\nconst MISSING_VALUE: any = {};\n\nlet idCounter = 1;\n\n// Although we can't do anything about the cost of duplicated code from\n// accidentally bundling multiple copies of the @wry/context package, we can\n// avoid creating the Slot class more than once using makeSlotClass.\nconst makeSlotClass = () => class Slot<TValue> {\n  // If you have a Slot object, you can find out its slot.id, but you cannot\n  // guess the slot.id of a Slot you don't have access to, thanks to the\n  // randomized suffix.\n  public readonly id = [\n    \"slot\",\n    idCounter++,\n    Date.now(),\n    Math.random().toString(36).slice(2),\n  ].join(\":\");\n\n  public hasValue() {\n    for (let context = currentContext; context; context = context.parent) {\n      // We use the Slot object iself as a key to its value, which means the\n      // value cannot be obtained without a reference to the Slot object.\n      if (this.id in context.slots) {\n        const value = context.slots[this.id];\n        if (value === MISSING_VALUE) break;\n        if (context !== currentContext) {\n          // Cache the value in currentContext.slots so the next lookup will\n          // be faster. This caching is safe because the tree of contexts and\n          // the values of the slots are logically immutable.\n          currentContext!.slots[this.id] = value;\n        }\n        return true;\n      }\n    }\n    if (currentContext) {\n      // If a value was not found for this Slot, it's never going to be found\n      // no matter how many times we look it up, so we might as well cache\n      // the absence of the value, too.\n      currentContext.slots[this.id] = MISSING_VALUE;\n    }\n    return false;\n  }\n\n  public getValue(): TValue | undefined {\n    if (this.hasValue()) {\n      return currentContext!.slots[this.id] as TValue;\n    }\n  }\n\n  public withValue<TResult, TArgs extends any[], TThis = any>(\n    value: TValue,\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ): TResult {\n    const slots = {\n      __proto__: null,\n      [this.id]: value,\n    };\n    const parent = currentContext;\n    currentContext = { parent, slots };\n    try {\n      // Function.prototype.apply allows the arguments array argument to be\n      // omitted or undefined, so args! is fine here.\n      return callback.apply(thisArg!, args!);\n    } finally {\n      currentContext = parent;\n    }\n  }\n\n  // Capture the current context and wrap a callback function so that it\n  // reestablishes the captured context when called.\n  static bind<TArgs extends any[], TResult, TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n  ) {\n    const context = currentContext;\n    return function (this: TThis) {\n      const saved = currentContext;\n      try {\n        currentContext = context;\n        return callback.apply(this, arguments as any);\n      } finally {\n        currentContext = saved;\n      }\n    } as typeof callback;\n  }\n\n  // Immediately run a callback function without any captured context.\n  static noContext<TResult, TArgs extends any[], TThis = any>(\n    callback: (this: TThis, ...args: TArgs) => TResult,\n    // Given the prevalence of arrow functions, specifying arguments is likely\n    // to be much more common than specifying `this`, hence this ordering:\n    args?: TArgs,\n    thisArg?: TThis,\n  ) {\n    if (currentContext) {\n      const saved = currentContext;\n      try {\n        currentContext = null;\n        // Function.prototype.apply allows the arguments array argument to be\n        // omitted or undefined, so args! is fine here.\n        return callback.apply(thisArg!, args!);\n      } finally {\n        currentContext = saved;\n      }\n    } else {\n      return callback.apply(thisArg!, args!);\n    }\n  }\n};\n\n// We store a single global implementation of the Slot class as a permanent\n// non-enumerable symbol property of the Array constructor. This obfuscation\n// does nothing to prevent access to the Slot class, but at least it ensures\n// the implementation (i.e. currentContext) cannot be tampered with, and all\n// copies of the @wry/context package (hopefully just one) will share the\n// same Slot implementation. Since the first copy of the @wry/context package\n// to be imported wins, this technique imposes a very high cost for any\n// future breaking changes to the Slot class.\nconst globalKey = \"@wry/context:Slot\";\nconst host = Array as any;\n\nexport const Slot: ReturnType<typeof makeSlotClass> = host[globalKey] || function () {\n  const Slot = makeSlotClass();\n  try {\n    Object.defineProperty(host, globalKey, {\n      value: host[globalKey] = Slot,\n      enumerable: false,\n      writable: false,\n      configurable: false,\n    });\n  } finally {\n    return Slot;\n  }\n}();\n", "import { Slot } from \"./slot\";\nexport { Slot }\nexport const { bind, noContext } = Slot;\n\n// Relying on the @types/node declaration of global.setTimeout can make\n// things tricky for dowstream projects (see PR #7).\ndeclare function setTimeout(\n  callback: (...args: any[]) => any,\n  ms?: number,\n  ...args: any[]\n): any;\n\n// Like global.setTimeout, except the callback runs with captured context.\nexport { setTimeoutWithContext as setTimeout };\nfunction setTimeoutWithContext(callback: () => any, delay: number) {\n  return setTimeout(bind(callback), delay);\n}\n\n// Turn any generator function into an async function (using yield instead\n// of await), with context automatically preserved across yields.\nexport function asyncFromGen<\n  TArgs extends any[],\n  TYield = any,\n  TReturn = any,\n  TNext = any,\n>(\n  genFn: (...args: TArgs) => Generator<TYield, TReturn, TNext>\n) {\n  return function (this: any) {\n    const gen = genFn.apply(this, arguments as any);\n\n    type Method = (\n      this: Generator<TYield, TReturn, TNext>,\n      arg: any,\n    ) => IteratorResult<TYield, TReturn>;\n\n    const boundNext: Method = bind(gen.next);\n    const boundThrow: Method = bind(gen.throw!);\n\n    return new Promise((resolve, reject) => {\n      function invoke(method: Method, argument: any) {\n        try {\n          var result: any = method.call(gen, argument);\n        } catch (error) {\n          return reject(error);\n        }\n        const next = result.done ? resolve : invokeNext;\n        if (isPromiseLike(result.value)) {\n          result.value.then(next, result.done ? reject : invokeThrow);\n        } else {\n          next(result.value);\n        }\n      }\n      const invokeNext = (value?: any) => invoke(boundNext, value);\n      const invokeThrow = (error: any) => invoke(boundThrow, error);\n      invokeNext();\n    });\n  } as (...args: TArgs) => Promise<any>;\n}\n\nfunction isPromiseLike(value: any): value is PromiseLike<any> {\n  return value && typeof value.then === \"function\";\n}\n\n// If you use the fibers npm package to implement coroutines in Node.js,\n// you should call this function at least once to ensure context management\n// remains coherent across any yields.\nconst wrappedFibers: Function[] = [];\nexport function wrapYieldingFiberMethods<F extends Function>(Fiber: F): F {\n  // There can be only one implementation of Fiber per process, so this array\n  // should never grow longer than one element.\n  if (wrappedFibers.indexOf(Fiber) < 0) {\n    const wrap = (obj: any, method: string) => {\n      const fn = obj[method];\n      obj[method] = function () {\n        return noContext(fn, arguments as any, this);\n      };\n    }\n    // These methods can yield, according to\n    // https://github.com/laverdet/node-fibers/blob/ddebed9b8ae3883e57f822e2108e6943e5c8d2a8/fibers.js#L97-L100\n    wrap(Fiber, \"yield\");\n    wrap(Fiber.prototype, \"run\");\n    wrap(Fiber.prototype, \"throwInto\");\n    wrappedFibers.push(Fiber);\n  }\n  return Fiber;\n}\n", "interface Node<K, V> {\n  key: K;\n  value: V;\n  newer: Node<K, V> | null;\n  older: Node<K, V> | null;\n}\n\nfunction defaultDispose() {}\n\nexport class Cache<K = any, V = any> {\n  private map = new Map<K, Node<K, V>>();\n  private newest: Node<K, V> | null = null;\n  private oldest: Node<K, V> | null = null;\n\n  constructor(\n    private max = Infinity,\n    public dispose: (value: V, key: K) => void = defaultDispose,\n  ) {}\n\n  public has(key: K): boolean {\n    return this.map.has(key);\n  }\n\n  public get(key: K): V | undefined {\n    const node = this.getNode(key);\n    return node && node.value;\n  }\n\n  private getNode(key: K): Node<K, V> | undefined {\n    const node = this.map.get(key);\n\n    if (node && node !== this.newest) {\n      const { older, newer } = node;\n\n      if (newer) {\n        newer.older = older;\n      }\n\n      if (older) {\n        older.newer = newer;\n      }\n\n      node.older = this.newest;\n      node.older!.newer = node;\n\n      node.newer = null;\n      this.newest = node;\n\n      if (node === this.oldest) {\n        this.oldest = newer;\n      }\n    }\n\n    return node;\n  }\n\n  public set(key: K, value: V): V {\n    let node = this.getNode(key);\n    if (node) {\n      return node.value = value;\n    }\n\n    node = {\n      key,\n      value,\n      newer: null,\n      older: this.newest\n    };\n\n    if (this.newest) {\n      this.newest.newer = node;\n    }\n\n    this.newest = node;\n    this.oldest = this.oldest || node;\n\n    this.map.set(key, node);\n\n    return node.value;\n  }\n\n  public clean() {\n    while (this.oldest && this.map.size > this.max) {\n      this.delete(this.oldest.key);\n    }\n  }\n\n  public delete(key: K): boolean {\n    const node = this.map.get(key);\n    if (node) {\n      if (node === this.newest) {\n        this.newest = node.older;\n      }\n\n      if (node === this.oldest) {\n        this.oldest = node.newer;\n      }\n\n      if (node.newer) {\n        node.newer.older = node.older;\n      }\n\n      if (node.older) {\n        node.older.newer = node.newer;\n      }\n\n      this.map.delete(key);\n      this.dispose(node.value, key);\n\n      return true;\n    }\n\n    return false;\n  }\n}\n", "import { AnyEntry } from \"./entry\";\nimport { Slot } from \"@wry/context\";\n\nexport const parentEntrySlot = new Slot<AnyEntry>();\n\nexport {\n  bind as bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"@wry/context\";\n", "export const {\n  hasOwnProperty,\n} = Object.prototype;\n\nexport const {\n  // This Array.from polyfill is restricted to working with Set<any> for now,\n  // but we can improve the polyfill and add other input types, as needed. Note\n  // that this fallback implementation will only be used if the host environment\n  // does not support a native Array.from function. In most modern JS runtimes,\n  // the toArray function exported here will be === Array.from.\n  from: toArray = (collection: Set<any>) => {\n    const array: any[] = [];\n    collection.forEach(item => array.push(item));\n    return array;\n  },\n} = Array;\n\nexport type Unsubscribable = {\n  unsubscribe?: void | (() => any);\n}\n\nexport function maybeUnsubscribe(entryOrDep: Unsubscribable) {\n  const { unsubscribe } = entryOrDep;\n  if (typeof unsubscribe === \"function\") {\n    entryOrDep.unsubscribe = void 0;\n    unsubscribe();\n  }\n}\n", "import { parentEntrySlot } from \"./context\";\nimport { OptimisticWrapOptions } from \"./index\";\nimport { Dep } from \"./dep\";\nimport { maybeUnsubscribe, toArray, Unsubscribable } from \"./helpers\";\n\nconst emptySetPool: Set<any>[] = [];\nconst POOL_TARGET_SIZE = 100;\n\n// Since this package might be used browsers, we should avoid using the\n// Node built-in assert module.\nfunction assert(condition: any, optionalMessage?: string) {\n  if (! condition) {\n    throw new Error(optionalMessage || \"assertion failure\");\n  }\n}\n\n// Since exceptions are cached just like normal values, we need an efficient\n// way of representing unknown, ordinary, and exceptional values.\ntype Value<T> =\n  | []           // unknown\n  | [T]          // known value\n  | [void, any]; // known exception\n\nfunction valueIs(a: Value<any>, b: Value<any>) {\n  const len = a.length;\n  return (\n    // Unknown values are not equal to each other.\n    len > 0 &&\n    // Both values must be ordinary (or both exceptional) to be equal.\n    len === b.length &&\n    // The underlying value or exception must be the same.\n    a[len - 1] === b[len - 1]\n  );\n}\n\nfunction valueGet<T>(value: Value<T>): T {\n  switch (value.length) {\n    case 0: throw new Error(\"unknown value\");\n    case 1: return value[0];\n    case 2: throw value[1];\n  }\n}\n\nfunction valueCopy<T>(value: Value<T>): Value<T> {\n  return value.slice(0) as Value<T>;\n}\n\nexport type AnyEntry = Entry<any, any>;\n\nexport class Entry<TArgs extends any[], TValue> {\n  public static count = 0;\n\n  public subscribe: OptimisticWrapOptions<TArgs>[\"subscribe\"];\n  public unsubscribe: Unsubscribable[\"unsubscribe\"];\n\n  public readonly parents = new Set<AnyEntry>();\n  public readonly childValues = new Map<AnyEntry, Value<any>>();\n\n  // When this Entry has children that are dirty, this property becomes\n  // a Set containing other Entry objects, borrowed from emptySetPool.\n  // When the set becomes empty, it gets recycled back to emptySetPool.\n  public dirtyChildren: Set<AnyEntry> | null = null;\n\n  public dirty = true;\n  public recomputing = false;\n  public readonly value: Value<TValue> = [];\n\n  constructor(\n    public readonly fn: (...args: TArgs) => TValue,\n  ) {\n    ++Entry.count;\n  }\n\n  public peek(): TValue | undefined {\n    if (this.value.length === 1 && !mightBeDirty(this)) {\n      rememberParent(this);\n      return this.value[0];\n    }\n  }\n\n  // This is the most important method of the Entry API, because it\n  // determines whether the cached this.value can be returned immediately,\n  // or must be recomputed. The overall performance of the caching system\n  // depends on the truth of the following observations: (1) this.dirty is\n  // usually false, (2) this.dirtyChildren is usually null/empty, and thus\n  // (3) valueGet(this.value) is usually returned without recomputation.\n  public recompute(args: TArgs): TValue {\n    assert(! this.recomputing, \"already recomputing\");\n    rememberParent(this);\n    return mightBeDirty(this)\n      ? reallyRecompute(this, args)\n      : valueGet(this.value);\n  }\n\n  public setDirty() {\n    if (this.dirty) return;\n    this.dirty = true;\n    this.value.length = 0;\n    reportDirty(this);\n    // We can go ahead and unsubscribe here, since any further dirty\n    // notifications we receive will be redundant, and unsubscribing may\n    // free up some resources, e.g. file watchers.\n    maybeUnsubscribe(this);\n  }\n\n  public dispose() {\n    this.setDirty();\n\n    // Sever any dependency relationships with our own children, so those\n    // children don't retain this parent Entry in their child.parents sets,\n    // thereby preventing it from being fully garbage collected.\n    forgetChildren(this);\n\n    // Because this entry has been kicked out of the cache (in index.js),\n    // we've lost the ability to find out if/when this entry becomes dirty,\n    // whether that happens through a subscription, because of a direct call\n    // to entry.setDirty(), or because one of its children becomes dirty.\n    // Because of this loss of future information, we have to assume the\n    // worst (that this entry might have become dirty very soon), so we must\n    // immediately mark this entry's parents as dirty. Normally we could\n    // just call entry.setDirty() rather than calling parent.setDirty() for\n    // each parent, but that would leave this entry in parent.childValues\n    // and parent.dirtyChildren, which would prevent the child from being\n    // truly forgotten.\n    eachParent(this, (parent, child) => {\n      parent.setDirty();\n      forgetChild(parent, this);\n    });\n  }\n\n  public forget() {\n    // The code that creates Entry objects in index.ts will replace this method\n    // with one that actually removes the Entry from the cache, which will also\n    // trigger the entry.dispose method.\n    this.dispose();\n  }\n\n  private deps: Set<Dep<any>> | null = null;\n\n  public dependOn(dep: Dep<any>) {\n    dep.add(this);\n    if (! this.deps) {\n      this.deps = emptySetPool.pop() || new Set<Set<AnyEntry>>();\n    }\n    this.deps.add(dep);\n  }\n\n  public forgetDeps() {\n    if (this.deps) {\n      toArray(this.deps).forEach(dep => dep.delete(this));\n      this.deps.clear();\n      emptySetPool.push(this.deps);\n      this.deps = null;\n    }\n  }\n}\n\nfunction rememberParent(child: AnyEntry) {\n  const parent = parentEntrySlot.getValue();\n  if (parent) {\n    child.parents.add(parent);\n\n    if (! parent.childValues.has(child)) {\n      parent.childValues.set(child, []);\n    }\n\n    if (mightBeDirty(child)) {\n      reportDirtyChild(parent, child);\n    } else {\n      reportCleanChild(parent, child);\n    }\n\n    return parent;\n  }\n}\n\nfunction reallyRecompute(entry: AnyEntry, args: any[]) {\n  forgetChildren(entry);\n\n  // Set entry as the parent entry while calling recomputeNewValue(entry).\n  parentEntrySlot.withValue(entry, recomputeNewValue, [entry, args]);\n\n  if (maybeSubscribe(entry, args)) {\n    // If we successfully recomputed entry.value and did not fail to\n    // (re)subscribe, then this Entry is no longer explicitly dirty.\n    setClean(entry);\n  }\n\n  return valueGet(entry.value);\n}\n\nfunction recomputeNewValue(entry: AnyEntry, args: any[]) {\n  entry.recomputing = true;\n  // Set entry.value as unknown.\n  entry.value.length = 0;\n  try {\n    // If entry.fn succeeds, entry.value will become a normal Value.\n    entry.value[0] = entry.fn.apply(null, args);\n  } catch (e) {\n    // If entry.fn throws, entry.value will become exceptional.\n    entry.value[1] = e;\n  }\n  // Either way, this line is always reached.\n  entry.recomputing = false;\n}\n\nfunction mightBeDirty(entry: AnyEntry) {\n  return entry.dirty || !!(entry.dirtyChildren && entry.dirtyChildren.size);\n}\n\nfunction setClean(entry: AnyEntry) {\n  entry.dirty = false;\n\n  if (mightBeDirty(entry)) {\n    // This Entry may still have dirty children, in which case we can't\n    // let our parents know we're clean just yet.\n    return;\n  }\n\n  reportClean(entry);\n}\n\nfunction reportDirty(child: AnyEntry) {\n  eachParent(child, reportDirtyChild);\n}\n\nfunction reportClean(child: AnyEntry) {\n  eachParent(child, reportCleanChild);\n}\n\nfunction eachParent(\n  child: AnyEntry,\n  callback: (parent: AnyEntry, child: AnyEntry) => any,\n) {\n  const parentCount = child.parents.size;\n  if (parentCount) {\n    const parents = toArray(child.parents);\n    for (let i = 0; i < parentCount; ++i) {\n      callback(parents[i], child);\n    }\n  }\n}\n\n// Let a parent Entry know that one of its children may be dirty.\nfunction reportDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberParent(child) before calling\n  // reportDirtyChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(mightBeDirty(child));\n  const parentWasClean = !mightBeDirty(parent);\n\n  if (! parent.dirtyChildren) {\n    parent.dirtyChildren = emptySetPool.pop() || new Set;\n\n  } else if (parent.dirtyChildren.has(child)) {\n    // If we already know this child is dirty, then we must have already\n    // informed our own parents that we are dirty, so we can terminate\n    // the recursion early.\n    return;\n  }\n\n  parent.dirtyChildren.add(child);\n\n  // If parent was clean before, it just became (possibly) dirty (according to\n  // mightBeDirty), since we just added child to parent.dirtyChildren.\n  if (parentWasClean) {\n    reportDirty(parent);\n  }\n}\n\n// Let a parent Entry know that one of its children is no longer dirty.\nfunction reportCleanChild(parent: AnyEntry, child: AnyEntry) {\n  // Must have called rememberChild(child) before calling\n  // reportCleanChild(parent, child).\n  assert(parent.childValues.has(child));\n  assert(! mightBeDirty(child));\n\n  const childValue = parent.childValues.get(child)!;\n  if (childValue.length === 0) {\n    parent.childValues.set(child, valueCopy(child.value));\n  } else if (! valueIs(childValue, child.value)) {\n    parent.setDirty();\n  }\n\n  removeDirtyChild(parent, child);\n\n  if (mightBeDirty(parent)) {\n    return;\n  }\n\n  reportClean(parent);\n}\n\nfunction removeDirtyChild(parent: AnyEntry, child: AnyEntry) {\n  const dc = parent.dirtyChildren;\n  if (dc) {\n    dc.delete(child);\n    if (dc.size === 0) {\n      if (emptySetPool.length < POOL_TARGET_SIZE) {\n        emptySetPool.push(dc);\n      }\n      parent.dirtyChildren = null;\n    }\n  }\n}\n\n// Removes all children from this entry and returns an array of the\n// removed children.\nfunction forgetChildren(parent: AnyEntry) {\n  if (parent.childValues.size > 0) {\n    parent.childValues.forEach((_value, child) => {\n      forgetChild(parent, child);\n    });\n  }\n\n  // Remove this parent Entry from any sets to which it was added by the\n  // addToSet method.\n  parent.forgetDeps();\n\n  // After we forget all our children, this.dirtyChildren must be empty\n  // and therefore must have been reset to null.\n  assert(parent.dirtyChildren === null);\n}\n\nfunction forgetChild(parent: AnyEntry, child: AnyEntry) {\n  child.parents.delete(parent);\n  parent.childValues.delete(child);\n  removeDirtyChild(parent, child);\n}\n\nfunction maybeSubscribe(entry: AnyEntry, args: any[]) {\n  if (typeof entry.subscribe === \"function\") {\n    try {\n      maybeUnsubscribe(entry); // Prevent double subscriptions.\n      entry.unsubscribe = entry.subscribe.apply(null, args);\n    } catch (e) {\n      // If this Entry has a subscribe function and it threw an exception\n      // (or an unsubscribe function it previously returned now throws),\n      // return false to indicate that we were not able to subscribe (or\n      // unsubscribe), and this Entry should remain dirty.\n      entry.setDirty();\n      return false;\n    }\n  }\n\n  // Returning true indicates either that there was no entry.subscribe\n  // function or that it succeeded.\n  return true;\n}\n", "import { AnyEntry } from \"./entry\";\nimport { OptimisticWrapOptions } from \"./index\";\nimport { parentEntrySlot } from \"./context\";\nimport { hasOwnProperty, Unsubscribable, maybeUnsubscribe, toArray } from \"./helpers\";\n\ntype EntryMethodName = keyof typeof EntryMethods;\nconst EntryMethods = {\n  setDirty: true, // Mark parent Entry as needing to be recomputed (default)\n  dispose: true,  // Detach parent Entry from parents and children, but leave in LRU cache\n  forget: true,   // Fully remove parent Entry from LRU cache and computation graph\n};\n\nexport type OptimisticDependencyFunction<TKey> =\n  ((key: TKey) => void) & {\n    dirty: (key: TKey, entryMethodName?: EntryMethodName) => void;\n  };\n\nexport type Dep<TKey> = Set<AnyEntry> & {\n  subscribe: OptimisticWrapOptions<[TKey]>[\"subscribe\"];\n} & Unsubscribable;\n\nexport function dep<TKey>(options?: {\n  subscribe: Dep<TKey>[\"subscribe\"];\n}) {\n  const depsByKey = new Map<TKey, Dep<TKey>>();\n  const subscribe = options && options.subscribe;\n\n  function depend(key: TKey) {\n    const parent = parentEntrySlot.getValue();\n    if (parent) {\n      let dep = depsByKey.get(key);\n      if (!dep) {\n        depsByKey.set(key, dep = new Set as Dep<TKey>);\n      }\n      parent.dependOn(dep);\n      if (typeof subscribe === \"function\") {\n        maybeUnsubscribe(dep);\n        dep.unsubscribe = subscribe(key);\n      }\n    }\n  }\n\n  depend.dirty = function dirty(\n    key: TKey,\n    entryMethodName?: EntryMethodName,\n  ) {\n    const dep = depsByKey.get(key);\n    if (dep) {\n      const m: EntryMethodName = (\n        entryMethodName &&\n        hasOwnProperty.call(EntryMethods, entryMethodName)\n      ) ? entryMethodName : \"setDirty\";\n      // We have to use toArray(dep).forEach instead of dep.forEach, because\n      // modifying a Set while iterating over it can cause elements in the Set\n      // to be removed from the Set before they've been iterated over.\n      toArray(dep).forEach(entry => entry[m]());\n      depsByKey.delete(key);\n      maybeUnsubscribe(dep);\n    }\n  };\n\n  return depend as OptimisticDependencyFunction<TKey>;\n}\n", "import { Trie } from \"@wry/trie\";\n\nimport { Cache } from \"./cache\";\nimport { Entry, AnyEntry } from \"./entry\";\nimport { parentEntrySlot } from \"./context\";\n\n// These helper functions are important for making optimism work with\n// asynchronous code. In order to register parent-child dependencies,\n// optimism needs to know about any currently active parent computations.\n// In ordinary synchronous code, the parent context is implicit in the\n// execution stack, but asynchronous code requires some extra guidance in\n// order to propagate context from one async task segment to the next.\nexport {\n  bindContext,\n  noContext,\n  setTimeout,\n  asyncFromGen,\n} from \"./context\";\n\n// A lighter-weight dependency, similar to OptimisticWrapperFunction, except\n// with only one argument, no makeCacheKey, no wrapped function to recompute,\n// and no result value. Useful for representing dependency leaves in the graph\n// of computation. Subscriptions are supported.\nexport { dep, OptimisticDependencyFunction } from \"./dep\";\n\nfunction makeDefaultMakeCacheKeyFunction<\n  TKeyArgs extends any[],\n  TCacheKey = any,\n>(): (...args: TKeyArgs) => TCacheKey {\n  const keyTrie = new Trie<TCacheKey>(typeof WeakMap === \"function\");\n  return function () {\n    return keyTrie.lookupArray(arguments);\n  };\n}\n\n// The defaultMakeCacheKey function is remarkably powerful, because it gives\n// a unique object for any shallow-identical list of arguments. If you need\n// to implement a custom makeCacheKey function, you may find it helpful to\n// delegate the final work to defaultMakeCacheKey, which is why we export it\n// here. However, you may want to avoid defaultMakeCacheKey if your runtime\n// does not support WeakMap, or you have the ability to return a string key.\n// In those cases, just write your own custom makeCacheKey functions.\nexport const defaultMakeCacheKey = makeDefaultMakeCacheKeyFunction();\n\n// If you're paranoid about memory leaks, or you want to avoid using WeakMap\n// under the hood, but you still need the behavior of defaultMakeCacheKey,\n// import this constructor to create your own tries.\nexport { Trie as KeyTrie }\n\nexport type OptimisticWrapperFunction<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n> = ((...args: TArgs) => TResult) & {\n  // Get the current number of Entry objects in the LRU cache.\n  readonly size: number;\n\n  // \"Dirty\" any cached Entry stored for the given arguments, marking that Entry\n  // and its ancestors as potentially needing to be recomputed. The .dirty(...)\n  // method of an optimistic function takes the same parameter types as the\n  // original function by default, unless a keyArgs function is configured, and\n  // then it matters that .dirty takes TKeyArgs instead of TArgs.\n  dirty: (...args: TKeyArgs) => void;\n  // A version of .dirty that accepts a key returned by .getKey.\n  dirtyKey: (key: TCacheKey) => void;\n\n  // Examine the current value without recomputing it.\n  peek: (...args: TKeyArgs) => TResult | undefined;\n  // A version of .peek that accepts a key returned by .getKey.\n  peekKey: (key: TCacheKey) => TResult | undefined;\n\n  // Completely remove the entry from the cache, dirtying any parent entries.\n  forget: (...args: TKeyArgs) => boolean;\n  // A version of .forget that accepts a key returned by .getKey.\n  forgetKey: (key: TCacheKey) => boolean;\n\n  // In order to use the -Key version of the above functions, you need a key\n  // rather than the arguments used to compute the key. These two functions take\n  // TArgs or TKeyArgs and return the corresponding TCacheKey. If no keyArgs\n  // function has been configured, TArgs will be the same as TKeyArgs, and thus\n  // getKey and makeCacheKey will be synonymous.\n  getKey: (...args: TArgs) => TCacheKey;\n\n  // This property is equivalent to the makeCacheKey function provided in the\n  // OptimisticWrapOptions, or (if no options.makeCacheKey function is provided)\n  // a default implementation of makeCacheKey.\n  makeCacheKey: (...args: TKeyArgs) => TCacheKey;\n};\n\nexport type OptimisticWrapOptions<\n  TArgs extends any[],\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n> = {\n  // The maximum number of cache entries that should be retained before the\n  // cache begins evicting the oldest ones.\n  max?: number;\n  // Transform the raw arguments to some other type of array, which will then\n  // be passed to makeCacheKey.\n  keyArgs?: (...args: TArgs) => TKeyArgs;\n  // The makeCacheKey function takes the same arguments that were passed to\n  // the wrapper function and returns a single value that can be used as a key\n  // in a Map to identify the cached result.\n  makeCacheKey?: (...args: TKeyArgs) => TCacheKey;\n  // If provided, the subscribe function should either return an unsubscribe\n  // function or return nothing.\n  subscribe?: (...args: TArgs) => void | (() => any);\n};\n\nconst caches = new Set<Cache<any, AnyEntry>>();\n\nexport function wrap<\n  TArgs extends any[],\n  TResult,\n  TKeyArgs extends any[] = TArgs,\n  TCacheKey = any,\n>(\n  originalFunction: (...args: TArgs) => TResult,\n  options: OptimisticWrapOptions<TArgs, TKeyArgs> = Object.create(null),\n) {\n  const cache = new Cache<TCacheKey, Entry<TArgs, TResult>>(\n    options.max || Math.pow(2, 16),\n    entry => entry.dispose(),\n  );\n\n  const keyArgs = options.keyArgs;\n  const makeCacheKey = options.makeCacheKey ||\n    makeDefaultMakeCacheKeyFunction<TKeyArgs, TCacheKey>();\n\n  const optimistic = function (): TResult {\n    const key = makeCacheKey.apply(\n      null,\n      keyArgs ? keyArgs.apply(null, arguments as any) : arguments as any\n    );\n\n    if (key === void 0) {\n      return originalFunction.apply(null, arguments as any);\n    }\n\n    let entry = cache.get(key)!;\n    if (!entry) {\n      cache.set(key, entry = new Entry(originalFunction));\n      entry.subscribe = options.subscribe;\n      // Give the Entry the ability to trigger cache.delete(key), even though\n      // the Entry itself does not know about key or cache.\n      entry.forget = () => cache.delete(key);\n    }\n\n    const value = entry.recompute(\n      Array.prototype.slice.call(arguments) as TArgs,\n    );\n\n    // Move this entry to the front of the least-recently used queue,\n    // since we just finished computing its value.\n    cache.set(key, entry);\n\n    caches.add(cache);\n\n    // Clean up any excess entries in the cache, but only if there is no\n    // active parent entry, meaning we're not in the middle of a larger\n    // computation that might be flummoxed by the cleaning.\n    if (! parentEntrySlot.hasValue()) {\n      caches.forEach(cache => cache.clean());\n      caches.clear();\n    }\n\n    return value;\n  } as OptimisticWrapperFunction<TArgs, TResult, TKeyArgs, TCacheKey>;\n\n  Object.defineProperty(optimistic, \"size\", {\n    get() {\n      return cache[\"map\"].size;\n    },\n    configurable: false,\n    enumerable: false,\n  });\n\n  function dirtyKey(key: TCacheKey) {\n    const entry = cache.get(key);\n    if (entry) {\n      entry.setDirty();\n    }\n  }\n  optimistic.dirtyKey = dirtyKey;\n  optimistic.dirty = function dirty() {\n    dirtyKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function peekKey(key: TCacheKey) {\n    const entry = cache.get(key);\n    if (entry) {\n      return entry.peek();\n    }\n  }\n  optimistic.peekKey = peekKey;\n  optimistic.peek = function peek() {\n    return peekKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  function forgetKey(key: TCacheKey) {\n    return cache.delete(key);\n  }\n  optimistic.forgetKey = forgetKey;\n  optimistic.forget = function forget() {\n    return forgetKey(makeCacheKey.apply(null, arguments as any));\n  };\n\n  optimistic.makeCacheKey = makeCacheKey;\n  optimistic.getKey = keyArgs ? function getKey() {\n    return makeCacheKey.apply(null, keyArgs.apply(null, arguments as any));\n  } : makeCacheKey as (...args: any[]) => TCacheKey;\n\n  return Object.freeze(optimistic);\n}\n", "import { DocumentNode } from 'graphql';\nimport { wrap } from 'optimism';\n\nimport {\n  StoreObject,\n  Reference,\n  getFragmentQueryDocument,\n} from '../../utilities';\nimport { DataProxy } from './types/DataProxy';\nimport { Cache } from './types/Cache';\n\nexport type Transaction<T> = (c: ApolloCache<T>) => void;\n\nexport abstract class ApolloCache<TSerialized> implements DataProxy {\n  // required to implement\n  // core API\n  public abstract read<T, TVariables = any>(\n    query: Cache.ReadOptions<TVariables, T>,\n  ): T | null;\n  public abstract write<TResult = any, TVariables = any>(\n    write: Cache.WriteOptions<TResult, TVariables>,\n  ): Reference | undefined;\n  public abstract diff<T>(query: Cache.DiffOptions): Cache.DiffResult<T>;\n  public abstract watch(watch: Cache.WatchOptions): () => void;\n  public abstract reset(): Promise<void>;\n\n  // Remove whole objects from the cache by passing just options.id, or\n  // specific fields by passing options.field and/or options.args. If no\n  // options.args are provided, all fields matching options.field (even\n  // those with arguments) will be removed. Returns true iff any data was\n  // removed from the cache.\n  public abstract evict(options: Cache.EvictOptions): boolean;\n\n  // intializer / offline / ssr API\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public abstract restore(\n    serializedState: TSerialized,\n  ): ApolloCache<TSerialized>;\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public abstract extract(optimistic?: boolean): TSerialized;\n\n  // Optimistic API\n\n  public abstract removeOptimistic(id: string): void;\n\n  // Transactional API\n\n  // The batch method is intended to replace/subsume both performTransaction\n  // and recordOptimisticTransaction, but performTransaction came first, so we\n  // provide a default batch implementation that's just another way of calling\n  // performTransaction. Subclasses of ApolloCache (such as InMemoryCache) can\n  // override the batch method to do more interesting things with its options.\n  public batch(options: Cache.BatchOptions<this>) {\n    const optimisticId =\n      typeof options.optimistic === \"string\" ? options.optimistic :\n      options.optimistic === false ? null : void 0;\n    this.performTransaction(options.update, optimisticId);\n  }\n\n  public abstract performTransaction(\n    transaction: Transaction<TSerialized>,\n    // Although subclasses may implement recordOptimisticTransaction\n    // however they choose, the default implementation simply calls\n    // performTransaction with a string as the second argument, allowing\n    // performTransaction to handle both optimistic and non-optimistic\n    // (broadcast-batching) transactions. Passing null for optimisticId is\n    // also allowed, and indicates that performTransaction should apply\n    // the transaction non-optimistically (ignoring optimistic data).\n    optimisticId?: string | null,\n  ): void;\n\n  public recordOptimisticTransaction(\n    transaction: Transaction<TSerialized>,\n    optimisticId: string,\n  ) {\n    this.performTransaction(transaction, optimisticId);\n  }\n\n  // Optional API\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  public identify(object: StoreObject | Reference): string | undefined {\n    return;\n  }\n\n  public gc(): string[] {\n    return [];\n  }\n\n  public modify(options: Cache.ModifyOptions): boolean {\n    return false;\n  }\n\n  // Experimental API\n\n  public transformForLink(document: DocumentNode): DocumentNode {\n    return document;\n  }\n\n  // DataProxy API\n  /**\n   *\n   * @param options\n   * @param optimistic\n   */\n  public readQuery<QueryType, TVariables = any>(\n    options: Cache.ReadQueryOptions<QueryType, TVariables>,\n    optimistic = !!options.optimistic,\n  ): QueryType | null {\n    return this.read({\n      ...options,\n      rootId: options.id || 'ROOT_QUERY',\n      optimistic,\n    });\n  }\n\n  // Make sure we compute the same (===) fragment query document every\n  // time we receive the same fragment in readFragment.\n  private getFragmentDoc = wrap(getFragmentQueryDocument);\n\n  public readFragment<FragmentType, TVariables = any>(\n    options: Cache.ReadFragmentOptions<FragmentType, TVariables>,\n    optimistic = !!options.optimistic,\n  ): FragmentType | null {\n    return this.read({\n      ...options,\n      query: this.getFragmentDoc(options.fragment, options.fragmentName),\n      rootId: options.id,\n      optimistic,\n    });\n  }\n\n  public writeQuery<TData = any, TVariables = any>({\n    id,\n    data,\n    ...options\n  }: Cache.WriteQueryOptions<TData, TVariables>): Reference | undefined {\n    return this.write(Object.assign(options, {\n      dataId: id || 'ROOT_QUERY',\n      result: data,\n    }));\n  }\n\n  public writeFragment<TData = any, TVariables = any>({\n    id,\n    data,\n    fragment,\n    fragmentName,\n    ...options\n  }: Cache.WriteFragmentOptions<TData, TVariables>): Reference | undefined {\n    return this.write(Object.assign(options, {\n      query: this.getFragmentDoc(fragment, fragmentName),\n      dataId: id,\n      result: data,\n    }));\n  }\n}\n", "import { FieldNode } from 'graphql';\n\nimport {\n  Reference,\n  StoreObject,\n  StoreValue,\n  isReference,\n} from '../../../utilities';\n\nimport { StorageType } from '../../inmemory/policies';\n\n// The Readonly<T> type only really works for object types, since it marks\n// all of the object's properties as readonly, but there are many cases when\n// a generic type parameter like TExisting might be a string or some other\n// primitive type, in which case we need to avoid wrapping it with Readonly.\n// SafeReadonly<string> collapses to just string, which makes string\n// assignable to SafeReadonly<any>, whereas string is not assignable to\n// Readonly<any>, somewhat surprisingly.\nexport type SafeReadonly<T> = T extends object ? Readonly<T> : T;\n\nexport class MissingFieldError extends Error {\n  constructor(\n    public readonly message: string,\n    public readonly path: (string | number)[],\n    public readonly query: import('graphql').DocumentNode,\n    public readonly variables?: Record<string, any>,\n  ) {\n    super(message);\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = MissingFieldError.prototype;\n  }\n}\n\nexport interface FieldSpecifier {\n  typename?: string;\n  fieldName: string;\n  field?: FieldNode;\n  args?: Record<string, any>;\n  variables?: Record<string, any>;\n}\n\nexport interface ReadFieldOptions extends FieldSpecifier {\n  from?: StoreObject | Reference;\n}\n\nexport interface ReadFieldFunction {\n  <V = StoreValue>(options: ReadFieldOptions): SafeReadonly<V> | undefined;\n  <V = StoreValue>(\n    fieldName: string,\n    from?: StoreObject | Reference,\n  ): SafeReadonly<V> | undefined;\n}\n\nexport type ToReferenceFunction = (\n  objOrIdOrRef: StoreObject | string | Reference,\n  mergeIntoStore?: boolean,\n) => Reference | undefined;\n\nexport type CanReadFunction = (value: StoreValue) => boolean;\n\nexport type Modifier<T> = (value: T, details: {\n  DELETE: any;\n  INVALIDATE: any;\n  fieldName: string;\n  storeFieldName: string;\n  readField: ReadFieldFunction;\n  canRead: CanReadFunction;\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n  storage: StorageType;\n}) => T;\n\nexport type Modifiers = {\n  [fieldName: string]: Modifier<any>;\n};\n", "import { SelectionSetNode } from 'graphql';\n\nimport { NormalizedCache } from './types';\nimport {\n  Reference,\n  isReference,\n  StoreValue,\n  StoreObject,\n  isField,\n  DeepMerger,\n  resultKeyNameFromField,\n  shouldInclude,\n  isNonNullObject,\n} from '../../utilities';\n\nexport const {\n  hasOwnProperty: hasOwn,\n} = Object.prototype;\n\nexport function getTypenameFromStoreObject(\n  store: NormalizedCache,\n  objectOrReference: StoreObject | Reference,\n): string | undefined {\n  return isReference(objectOrReference)\n    ? store.get(objectOrReference.__ref, \"__typename\") as string\n    : objectOrReference && objectOrReference.__typename;\n}\n\nexport const TypeOrFieldNameRegExp = /^[_a-z][_0-9a-z]*/i;\n\nexport function fieldNameFromStoreName(storeFieldName: string): string {\n  const match = storeFieldName.match(TypeOrFieldNameRegExp);\n  return match ? match[0] : storeFieldName;\n}\n\nexport function selectionSetMatchesResult(\n  selectionSet: SelectionSetNode,\n  result: Record<string, any>,\n  variables?: Record<string, any>,\n): boolean {\n  if (isNonNullObject(result)) {\n    return Array.isArray(result)\n      ? result.every(item => selectionSetMatchesResult(selectionSet, item, variables))\n      : selectionSet.selections.every(field => {\n        if (isField(field) && shouldInclude(field, variables)) {\n          const key = resultKeyNameFromField(field);\n          return hasOwn.call(result, key) &&\n            (!field.selectionSet ||\n             selectionSetMatchesResult(field.selectionSet, result[key], variables));\n        }\n        // If the selection has been skipped with @skip(true) or\n        // @include(false), it should not count against the matching. If\n        // the selection is not a field, it must be a fragment (inline or\n        // named). We will determine if selectionSetMatchesResult for that\n        // fragment when we get to it, so for now we return true.\n        return true;\n      });\n  }\n  return false;\n}\n\nexport function storeValueIsStoreObject(\n  value: StoreValue,\n): value is StoreObject {\n  return isNonNullObject(value) &&\n    !isReference(value) &&\n    !Array.isArray(value);\n}\n\nexport function makeProcessedFieldsMerger() {\n  return new DeepMerger;\n}\n", "import { dep, OptimisticDependencyFunction } from 'optimism';\nimport { invariant } from 'ts-invariant';\nimport { equal } from '@wry/equality';\nimport { Trie } from '@wry/trie';\n\nimport {\n  isReference,\n  StoreValue,\n  StoreObject,\n  Reference,\n  makeReference,\n  DeepMerger,\n  maybeDeepFreeze,\n  canUseWeakMap,\n  isNonNullObject,\n} from '../../utilities';\nimport { NormalizedCache, NormalizedCacheObject } from './types';\nimport { hasOwn, fieldNameFromStoreName } from './helpers';\nimport { Policies, StorageType } from './policies';\nimport { Cache } from '../core/types/Cache';\nimport {\n  SafeReadonly,\n  Modifier,\n  Modifiers,\n  ReadFieldOptions,\n  ToReferenceFunction,\n  CanReadFunction,\n} from '../core/types/common';\n\nconst DELETE: any = Object.create(null);\nconst delModifier: Modifier<any> = () => DELETE;\nconst INVALIDATE: any = Object.create(null);\n\nexport abstract class EntityStore implements NormalizedCache {\n  protected data: NormalizedCacheObject = Object.create(null);\n\n  constructor(\n    public readonly policies: Policies,\n    public readonly group: CacheGroup,\n  ) {}\n\n  public abstract addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any,\n  ): Layer;\n\n  public abstract removeLayer(layerId: string): EntityStore;\n\n  // Although the EntityStore class is abstract, it contains concrete\n  // implementations of the various NormalizedCache interface methods that\n  // are inherited by the Root and Layer subclasses.\n\n  public toObject(): NormalizedCacheObject {\n    return { ...this.data };\n  }\n\n  public has(dataId: string): boolean {\n    return this.lookup(dataId, true) !== void 0;\n  }\n\n  public get(dataId: string, fieldName: string): StoreValue {\n    this.group.depend(dataId, fieldName);\n    if (hasOwn.call(this.data, dataId)) {\n      const storeObject = this.data[dataId];\n      if (storeObject && hasOwn.call(storeObject, fieldName)) {\n        return storeObject[fieldName];\n      }\n    }\n    if (fieldName === \"__typename\" &&\n        hasOwn.call(this.policies.rootTypenamesById, dataId)) {\n      return this.policies.rootTypenamesById[dataId];\n    }\n    if (this instanceof Layer) {\n      return this.parent.get(dataId, fieldName);\n    }\n  }\n\n  protected lookup(dataId: string, dependOnExistence?: boolean): StoreObject | undefined {\n    // The has method (above) calls lookup with dependOnExistence = true, so\n    // that it can later be invalidated when we add or remove a StoreObject for\n    // this dataId. Any consumer who cares about the contents of the StoreObject\n    // should not rely on this dependency, since the contents could change\n    // without the object being added or removed.\n    if (dependOnExistence) this.group.depend(dataId, \"__exists\");\n\n    if (hasOwn.call(this.data, dataId)) {\n      return this.data[dataId];\n    }\n\n    if (this instanceof Layer) {\n      return this.parent.lookup(dataId, dependOnExistence);\n    }\n\n    if (this.policies.rootTypenamesById[dataId]) {\n      return Object.create(null);\n    }\n  }\n\n  public merge(\n    older: string | StoreObject,\n    newer: StoreObject | string,\n  ): void {\n    let dataId: string | undefined;\n\n    // Convert unexpected references to ID strings.\n    if (isReference(older)) older = older.__ref;\n    if (isReference(newer)) newer = newer.__ref;\n\n    const existing: StoreObject | undefined =\n      typeof older === \"string\"\n        ? this.lookup(dataId = older)\n        : older;\n\n    const incoming: StoreObject | undefined =\n      typeof newer === \"string\"\n        ? this.lookup(dataId = newer)\n        : newer;\n\n    // If newer was a string ID, but that ID was not defined in this store,\n    // then there are no fields to be merged, so we're done.\n    if (!incoming) return;\n\n    invariant(\n      typeof dataId === \"string\",\n      \"store.merge expects a string ID\",\n    );\n\n    const merged: StoreObject =\n      new DeepMerger(storeObjectReconciler).merge(existing, incoming);\n\n    // Even if merged === existing, existing may have come from a lower\n    // layer, so we always need to set this.data[dataId] on this level.\n    this.data[dataId] = merged;\n\n    if (merged !== existing) {\n      delete this.refs[dataId];\n      if (this.group.caching) {\n        const fieldsToDirty: Record<string, 1> = Object.create(null);\n\n        // If we added a new StoreObject where there was previously none, dirty\n        // anything that depended on the existence of this dataId, such as the\n        // EntityStore#has method.\n        if (!existing) fieldsToDirty.__exists = 1;\n\n        // Now invalidate dependents who called getFieldValue for any fields\n        // that are changing as a result of this merge.\n        Object.keys(incoming).forEach(storeFieldName => {\n          if (!existing || existing[storeFieldName] !== merged[storeFieldName]) {\n            // Always dirty the full storeFieldName, which may include\n            // serialized arguments following the fieldName prefix.\n            fieldsToDirty[storeFieldName] = 1;\n\n            // Also dirty fieldNameFromStoreName(storeFieldName) if it's\n            // different from storeFieldName and this field does not have\n            // keyArgs configured, because that means the cache can't make\n            // any assumptions about how field values with the same field\n            // name but different arguments might be interrelated, so it\n            // must err on the side of invalidating all field values that\n            // share the same short fieldName, regardless of arguments.\n            const fieldName = fieldNameFromStoreName(storeFieldName);\n            if (fieldName !== storeFieldName &&\n                !this.policies.hasKeyArgs(merged.__typename, fieldName)) {\n              fieldsToDirty[fieldName] = 1;\n            }\n\n            // If merged[storeFieldName] has become undefined, and this is the\n            // Root layer, actually delete the property from the merged object,\n            // which is guaranteed to have been created fresh in this method.\n            if (merged[storeFieldName] === void 0 && !(this instanceof Layer)) {\n              delete merged[storeFieldName];\n            }\n          }\n        });\n\n        if (fieldsToDirty.__typename &&\n            !(existing && existing.__typename) &&\n            // Since we return default root __typename strings\n            // automatically from store.get, we don't need to dirty the\n            // ROOT_QUERY.__typename field if merged.__typename is equal\n            // to the default string (usually \"Query\").\n            this.policies.rootTypenamesById[dataId] === merged.__typename) {\n          delete fieldsToDirty.__typename;\n        }\n\n        Object.keys(fieldsToDirty).forEach(\n          fieldName => this.group.dirty(dataId as string, fieldName));\n      }\n    }\n  }\n\n  public modify(\n    dataId: string,\n    fields: Modifier<any> | Modifiers,\n  ): boolean {\n    const storeObject = this.lookup(dataId);\n\n    if (storeObject) {\n      const changedFields: Record<string, any> = Object.create(null);\n      let needToMerge = false;\n      let allDeleted = true;\n\n      const sharedDetails = {\n        DELETE,\n        INVALIDATE,\n        isReference,\n        toReference: this.toReference,\n        canRead: this.canRead,\n        readField: <V = StoreValue>(\n          fieldNameOrOptions: string | ReadFieldOptions,\n          from?: StoreObject | Reference,\n        ) => this.policies.readField<V>(\n          typeof fieldNameOrOptions === \"string\" ? {\n            fieldName: fieldNameOrOptions,\n            from: from || makeReference(dataId),\n          } : fieldNameOrOptions,\n          { store: this },\n        ),\n      };\n\n      Object.keys(storeObject).forEach(storeFieldName => {\n        const fieldName = fieldNameFromStoreName(storeFieldName);\n        let fieldValue = storeObject[storeFieldName];\n        if (fieldValue === void 0) return;\n        const modify: Modifier<StoreValue> = typeof fields === \"function\"\n          ? fields\n          : fields[storeFieldName] || fields[fieldName];\n        if (modify) {\n          let newValue = modify === delModifier ? DELETE :\n            modify(maybeDeepFreeze(fieldValue), {\n              ...sharedDetails,\n              fieldName,\n              storeFieldName,\n              storage: this.getStorage(dataId, storeFieldName),\n            });\n          if (newValue === INVALIDATE) {\n            this.group.dirty(dataId, storeFieldName);\n          } else {\n            if (newValue === DELETE) newValue = void 0;\n            if (newValue !== fieldValue) {\n              changedFields[storeFieldName] = newValue;\n              needToMerge = true;\n              fieldValue = newValue;\n            }\n          }\n        }\n        if (fieldValue !== void 0) {\n          allDeleted = false;\n        }\n      });\n\n      if (needToMerge) {\n        this.merge(dataId, changedFields);\n\n        if (allDeleted) {\n          if (this instanceof Layer) {\n            this.data[dataId] = void 0;\n          } else {\n            delete this.data[dataId];\n          }\n          this.group.dirty(dataId, \"__exists\");\n        }\n\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  // If called with only one argument, removes the entire entity\n  // identified by dataId. If called with a fieldName as well, removes all\n  // fields of that entity whose names match fieldName according to the\n  // fieldNameFromStoreName helper function. If called with a fieldName\n  // and variables, removes all fields of that entity whose names match fieldName\n  // and whose arguments when cached exactly match the variables passed.\n  public delete(\n    dataId: string,\n    fieldName?: string,\n    args?: Record<string, any>,\n  ) {\n    const storeObject = this.lookup(dataId);\n    if (storeObject) {\n      const typename = this.getFieldValue<string>(storeObject, \"__typename\");\n      const storeFieldName = fieldName && args\n        ? this.policies.getStoreFieldName({ typename, fieldName, args })\n        : fieldName;\n      return this.modify(dataId, storeFieldName ? {\n        [storeFieldName]: delModifier,\n      } : delModifier);\n    }\n    return false;\n  }\n\n  public evict(options: Cache.EvictOptions): boolean {\n    let evicted = false;\n    if (options.id) {\n      if (hasOwn.call(this.data, options.id)) {\n        evicted = this.delete(options.id, options.fieldName, options.args);\n      }\n      if (this instanceof Layer) {\n        evicted = this.parent.evict(options) || evicted;\n      }\n      // Always invalidate the field to trigger rereading of watched\n      // queries, even if no cache data was modified by the eviction,\n      // because queries may depend on computed fields with custom read\n      // functions, whose values are not stored in the EntityStore.\n      if (options.fieldName || evicted) {\n        this.group.dirty(options.id, options.fieldName || \"__exists\");\n      }\n    }\n    return evicted;\n  }\n\n  public clear(): void {\n    this.replace(null);\n  }\n\n  public extract(): NormalizedCacheObject {\n    const obj = this.toObject();\n    const extraRootIds: string[] = [];\n    this.getRootIdSet().forEach(id => {\n      if (!hasOwn.call(this.policies.rootTypenamesById, id)) {\n        extraRootIds.push(id);\n      }\n    });\n    if (extraRootIds.length) {\n      obj.__META = { extraRootIds: extraRootIds.sort() };\n    }\n    return obj;\n  }\n\n  public replace(newData: NormalizedCacheObject | null): void {\n    Object.keys(this.data).forEach(dataId => {\n      if (!(newData && hasOwn.call(newData, dataId))) {\n        this.delete(dataId);\n      }\n    });\n    if (newData) {\n      const { __META, ...rest } = newData;\n      Object.keys(rest).forEach(dataId => {\n        this.merge(dataId, rest[dataId] as StoreObject);\n      });\n      if (__META) {\n        __META.extraRootIds.forEach(this.retain, this);\n      }\n    }\n  }\n\n  public abstract getStorage(\n    idOrObj: string | StoreObject,\n    ...storeFieldNames: (string | number)[]\n  ): StorageType;\n\n  // Maps root entity IDs to the number of times they have been retained, minus\n  // the number of times they have been released. Retained entities keep other\n  // entities they reference (even indirectly) from being garbage collected.\n  private rootIds: {\n    [rootId: string]: number;\n  } = Object.create(null);\n\n  public retain(rootId: string): number {\n    return this.rootIds[rootId] = (this.rootIds[rootId] || 0) + 1;\n  }\n\n  public release(rootId: string): number {\n    if (this.rootIds[rootId] > 0) {\n      const count = --this.rootIds[rootId];\n      if (!count) delete this.rootIds[rootId];\n      return count;\n    }\n    return 0;\n  }\n\n  // Return a Set<string> of all the ID strings that have been retained by\n  // this layer/root *and* any layers/roots beneath it.\n  public getRootIdSet(ids = new Set<string>()) {\n    Object.keys(this.rootIds).forEach(ids.add, ids);\n    if (this instanceof Layer) {\n      this.parent.getRootIdSet(ids);\n    } else {\n      // Official singleton IDs like ROOT_QUERY and ROOT_MUTATION are\n      // always considered roots for garbage collection, regardless of\n      // their retainment counts in this.rootIds.\n      Object.keys(this.policies.rootTypenamesById).forEach(ids.add, ids);\n    }\n    return ids;\n  }\n\n  // The goal of garbage collection is to remove IDs from the Root layer of the\n  // store that are no longer reachable starting from any IDs that have been\n  // explicitly retained (see retain and release, above). Returns an array of\n  // dataId strings that were removed from the store.\n  public gc() {\n    const ids = this.getRootIdSet();\n    const snapshot = this.toObject();\n    ids.forEach(id => {\n      if (hasOwn.call(snapshot, id)) {\n        // Because we are iterating over an ECMAScript Set, the IDs we add here\n        // will be visited in later iterations of the forEach loop only if they\n        // were not previously contained by the Set.\n        Object.keys(this.findChildRefIds(id)).forEach(ids.add, ids);\n        // By removing IDs from the snapshot object here, we protect them from\n        // getting removed from the root store layer below.\n        delete snapshot[id];\n      }\n    });\n    const idsToRemove = Object.keys(snapshot);\n    if (idsToRemove.length) {\n      let root: EntityStore = this;\n      while (root instanceof Layer) root = root.parent;\n      idsToRemove.forEach(id => root.delete(id));\n    }\n    return idsToRemove;\n  }\n\n  // Lazily tracks { __ref: <dataId> } strings contained by this.data[dataId].\n  private refs: {\n    [dataId: string]: Record<string, true>;\n  } = Object.create(null);\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    if (!hasOwn.call(this.refs, dataId)) {\n      const found = this.refs[dataId] = Object.create(null);\n      const root = this.data[dataId];\n      if (!root) return found;\n\n      const workSet = new Set<Record<string | number, any>>([root]);\n      // Within the store, only arrays and objects can contain child entity\n      // references, so we can prune the traversal using this predicate:\n      workSet.forEach(obj => {\n        if (isReference(obj)) {\n          found[obj.__ref] = true;\n          // In rare cases, a { __ref } Reference object may have other fields.\n          // This often indicates a mismerging of References with StoreObjects,\n          // but garbage collection should not be fooled by a stray __ref\n          // property in a StoreObject (ignoring all the other fields just\n          // because the StoreObject looks like a Reference). To avoid this\n          // premature termination of findChildRefIds recursion, we fall through\n          // to the code below, which will handle any other properties of obj.\n        }\n        if (isNonNullObject(obj)) {\n          Object.keys(obj).forEach(key => {\n            const child = obj[key];\n            // No need to add primitive values to the workSet, since they cannot\n            // contain reference objects.\n            if (isNonNullObject(child)) {\n              workSet.add(child);\n            }\n          });\n        }\n      });\n    }\n    return this.refs[dataId];\n  }\n\n  // Used to compute cache keys specific to this.group.\n  public makeCacheKey(...args: any[]): object;\n  public makeCacheKey() {\n    return this.group.keyMaker.lookupArray(arguments);\n  }\n\n  // Bound function that can be passed around to provide easy access to fields\n  // of Reference objects as well as ordinary objects.\n  public getFieldValue = <T = StoreValue>(\n    objectOrReference: StoreObject | Reference | undefined,\n    storeFieldName: string,\n  ) => maybeDeepFreeze(\n    isReference(objectOrReference)\n      ? this.get(objectOrReference.__ref, storeFieldName)\n      : objectOrReference && objectOrReference[storeFieldName]\n  ) as SafeReadonly<T>;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  public canRead: CanReadFunction = objOrRef => {\n    return isReference(objOrRef)\n      ? this.has(objOrRef.__ref)\n      : typeof objOrRef === \"object\";\n  };\n\n  // Bound function that converts an id or an object with a __typename and\n  // primary key fields to a Reference object. If called with a Reference object,\n  // that same Reference object is returned. Pass true for mergeIntoStore to persist\n  // an object into the store.\n  public toReference: ToReferenceFunction = (\n    objOrIdOrRef,\n    mergeIntoStore,\n  ) => {\n    if (typeof objOrIdOrRef === \"string\") {\n      return makeReference(objOrIdOrRef);\n    }\n\n    if (isReference(objOrIdOrRef)) {\n      return objOrIdOrRef;\n    }\n\n    const [id] = this.policies.identify(objOrIdOrRef);\n\n    if (id) {\n      const ref = makeReference(id);\n      if (mergeIntoStore) {\n        this.merge(id, objOrIdOrRef);\n      }\n      return ref;\n    }\n  };\n}\n\nexport type FieldValueGetter = EntityStore[\"getFieldValue\"];\n\n// A single CacheGroup represents a set of one or more EntityStore objects,\n// typically the Root store in a CacheGroup by itself, and all active Layer\n// stores in a group together. A single EntityStore object belongs to only\n// one CacheGroup, store.group. The CacheGroup is responsible for tracking\n// dependencies, so store.group is helpful for generating unique keys for\n// cached results that need to be invalidated when/if those dependencies\n// change. If we used the EntityStore objects themselves as cache keys (that\n// is, store rather than store.group), the cache would become unnecessarily\n// fragmented by all the different Layer objects. Instead, the CacheGroup\n// approach allows all optimistic Layer objects in the same linked list to\n// belong to one CacheGroup, with the non-optimistic Root object belonging\n// to another CacheGroup, allowing resultCaching dependencies to be tracked\n// separately for optimistic and non-optimistic entity data.\nclass CacheGroup {\n  private d: OptimisticDependencyFunction<string> | null = null;\n\n  // Used by the EntityStore#makeCacheKey method to compute cache keys\n  // specific to this CacheGroup.\n  public keyMaker: Trie<object>;\n\n  constructor(\n    public readonly caching: boolean,\n    private parent: CacheGroup | null = null,\n  ) {\n    this.resetCaching();\n  }\n\n  public resetCaching() {\n    this.d = this.caching ? dep<string>() : null;\n    this.keyMaker = new Trie(canUseWeakMap);\n  }\n\n  public depend(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d(makeDepKey(dataId, storeFieldName));\n      const fieldName = fieldNameFromStoreName(storeFieldName);\n      if (fieldName !== storeFieldName) {\n        // Fields with arguments that contribute extra identifying\n        // information to the fieldName (thus forming the storeFieldName)\n        // depend not only on the full storeFieldName but also on the\n        // short fieldName, so the field can be invalidated using either\n        // level of specificity.\n        this.d(makeDepKey(dataId, fieldName));\n      }\n      if (this.parent) {\n        this.parent.depend(dataId, storeFieldName);\n      }\n    }\n  }\n\n  public dirty(dataId: string, storeFieldName: string) {\n    if (this.d) {\n      this.d.dirty(\n        makeDepKey(dataId, storeFieldName),\n        // When storeFieldName === \"__exists\", that means the entity identified\n        // by dataId has either disappeared from the cache or was newly added,\n        // so the result caching system would do well to \"forget everything it\n        // knows\" about that object. To achieve that kind of invalidation, we\n        // not only dirty the associated result cache entry, but also remove it\n        // completely from the dependency graph. For the optimism implmentation\n        // details, see https://github.com/benjamn/optimism/pull/195.\n        storeFieldName === \"__exists\" ? \"forget\" : \"setDirty\",\n      );\n    }\n  }\n}\n\nfunction makeDepKey(dataId: string, storeFieldName: string) {\n  // Since field names cannot have '#' characters in them, this method\n  // of joining the field name and the ID should be unambiguous, and much\n  // cheaper than JSON.stringify([dataId, fieldName]).\n  return storeFieldName + '#' + dataId;\n}\n\nexport function maybeDependOnExistenceOfEntity(\n  store: NormalizedCache,\n  entityId: string,\n) {\n  if (supportsResultCaching(store)) {\n    // We use this pseudo-field __exists elsewhere in the EntityStore code to\n    // represent changes in the existence of the entity object identified by\n    // entityId. This dependency gets reliably dirtied whenever an object with\n    // this ID is deleted (or newly created) within this group, so any result\n    // cache entries (for example, StoreReader#executeSelectionSet results) that\n    // depend on __exists for this entityId will get dirtied as well, leading to\n    // the eventual recomputation (instead of reuse) of those result objects the\n    // next time someone reads them from the cache.\n    store.group.depend(entityId, \"__exists\");\n  }\n}\n\nexport namespace EntityStore {\n  // Refer to this class as EntityStore.Root outside this namespace.\n  export class Root extends EntityStore {\n    constructor({\n      policies,\n      resultCaching = true,\n      seed,\n    }: {\n      policies: Policies;\n      resultCaching?: boolean;\n      seed?: NormalizedCacheObject;\n    }) {\n      super(policies, new CacheGroup(resultCaching));\n      if (seed) this.replace(seed);\n    }\n\n    public readonly stump = new Stump(this);\n\n    public addLayer(\n      layerId: string,\n      replay: (layer: EntityStore) => any,\n    ): Layer {\n      // Adding an optimistic Layer on top of the Root actually adds the Layer\n      // on top of the Stump, so the Stump always comes between the Root and\n      // any Layer objects that we've added.\n      return this.stump.addLayer(layerId, replay);\n    }\n\n    public removeLayer(): Root {\n      // Never remove the root layer.\n      return this;\n    }\n\n    public readonly storageTrie = new Trie<StorageType>(canUseWeakMap);\n    public getStorage(): StorageType {\n      return this.storageTrie.lookupArray(arguments);\n    }\n  }\n}\n\n// Not exported, since all Layer instances are created by the addLayer method\n// of the EntityStore.Root class.\nclass Layer extends EntityStore {\n  constructor(\n    public readonly id: string,\n    public readonly parent: EntityStore,\n    public readonly replay: (layer: EntityStore) => any,\n    public readonly group: CacheGroup,\n  ) {\n    super(parent.policies, group);\n    replay(this);\n  }\n\n  public addLayer(\n    layerId: string,\n    replay: (layer: EntityStore) => any,\n  ): Layer {\n    return new Layer(layerId, this, replay, this.group);\n  }\n\n  public removeLayer(layerId: string): EntityStore {\n    // Remove all instances of the given id, not just the first one.\n    const parent = this.parent.removeLayer(layerId);\n\n    if (layerId === this.id) {\n      if (this.group.caching) {\n        // Dirty every ID we're removing. Technically we might be able to avoid\n        // dirtying fields that have values in higher layers, but we don't have\n        // easy access to higher layers here, and we're about to recreate those\n        // layers anyway (see parent.addLayer below).\n        Object.keys(this.data).forEach(dataId => {\n          const ownStoreObject = this.data[dataId];\n          const parentStoreObject = parent[\"lookup\"](dataId);\n          if (!parentStoreObject) {\n            // The StoreObject identified by dataId was defined in this layer\n            // but will be undefined in the parent layer, so we can delete the\n            // whole entity using this.delete(dataId). Since we're about to\n            // throw this layer away, the only goal of this deletion is to dirty\n            // the removed fields.\n            this.delete(dataId);\n          } else if (!ownStoreObject) {\n            // This layer had an entry for dataId but it was undefined, which\n            // means the entity was deleted in this layer, and it's about to\n            // become undeleted when we remove this layer, so we need to dirty\n            // all fields that are about to be reexposed.\n            this.group.dirty(dataId, \"__exists\");\n            Object.keys(parentStoreObject).forEach(storeFieldName => {\n              this.group.dirty(dataId, storeFieldName);\n            });\n          } else if (ownStoreObject !== parentStoreObject) {\n            // If ownStoreObject is not exactly the same as parentStoreObject,\n            // dirty any fields whose values will change as a result of this\n            // removal.\n            Object.keys(ownStoreObject).forEach(storeFieldName => {\n              if (!equal(ownStoreObject[storeFieldName],\n                         parentStoreObject[storeFieldName])) {\n                this.group.dirty(dataId, storeFieldName);\n              }\n            });\n          }\n        });\n      }\n\n      return parent;\n    }\n\n    // No changes are necessary if the parent chain remains identical.\n    if (parent === this.parent) return this;\n\n    // Recreate this layer on top of the new parent.\n    return parent.addLayer(this.id, this.replay);\n  }\n\n  public toObject(): NormalizedCacheObject {\n    return {\n      ...this.parent.toObject(),\n      ...this.data,\n    };\n  }\n\n  public findChildRefIds(dataId: string): Record<string, true> {\n    const fromParent = this.parent.findChildRefIds(dataId);\n    return hasOwn.call(this.data, dataId) ? {\n      ...fromParent,\n      ...super.findChildRefIds(dataId),\n    } : fromParent;\n  }\n\n  public getStorage(): StorageType {\n    let p: EntityStore = this.parent;\n    while ((p as Layer).parent) p = (p as Layer).parent;\n    return p.getStorage.apply(p, arguments);\n  }\n}\n\n// Represents a Layer permanently installed just above the Root, which allows\n// reading optimistically (and registering optimistic dependencies) even when\n// no optimistic layers are currently active. The stump.group CacheGroup object\n// is shared by any/all Layer objects added on top of the Stump.\nclass Stump extends Layer {\n  constructor(root: EntityStore.Root) {\n    super(\n      \"EntityStore.Stump\",\n      root,\n      () => {},\n      new CacheGroup(root.group.caching, root.group),\n    );\n  }\n\n  public removeLayer() {\n    // Never remove the Stump layer.\n    return this;\n  }\n\n  public merge() {\n    // We never want to write any data into the Stump, so we forward any merge\n    // calls to the Root instead. Another option here would be to throw an\n    // exception, but the toReference(object, true) function can sometimes\n    // trigger Stump writes (which used to be Root writes, before the Stump\n    // concept was introduced).\n    return this.parent.merge.apply(this.parent, arguments);\n  }\n}\n\nfunction storeObjectReconciler(\n  existingObject: StoreObject,\n  incomingObject: StoreObject,\n  property: string,\n): StoreValue {\n  const existingValue = existingObject[property];\n  const incomingValue = incomingObject[property];\n  // Wherever there is a key collision, prefer the incoming value, unless\n  // it is deeply equal to the existing value. It's worth checking deep\n  // equality here (even though blindly returning incoming would be\n  // logically correct) because preserving the referential identity of\n  // existing data can prevent needless rereading and rerendering.\n  return equal(existingValue, incomingValue) ? existingValue : incomingValue;\n}\n\nexport function supportsResultCaching(store: any): store is EntityStore {\n  // When result caching is disabled, store.depend will be null.\n  return !!(store instanceof EntityStore && store.group.caching);\n}\n", "import { Trie } from \"@wry/trie\";\nimport {\n  canUseWeakMap,\n  canUseWeakSet,\n  isNonNullObject as isObjectOrArray,\n} from \"../../utilities\";\n\nfunction shallowCopy<T>(value: T): T {\n  if (isObjectOrArray(value)) {\n    return Array.isArray(value)\n      ? value.slice(0) as any as T\n      : { __proto__: Object.getPrototypeOf(value), ...value };\n  }\n  return value;\n}\n\n// When programmers talk about the \"canonical form\" of an object, they\n// usually have the following meaning in mind, which I've copied from\n// https://en.wiktionary.org/wiki/canonical_form:\n//\n// 1. A standard or normal presentation of a mathematical entity [or\n//    object]. A canonical form is an element of a set of representatives\n//    of equivalence classes of forms such that there is a function or\n//    procedure which projects every element of each equivalence class\n//    onto that one element, the canonical form of that equivalence\n//    class. The canonical form is expected to be simpler than the rest of\n//    the forms in some way.\n//\n// That's a long-winded way of saying any two objects that have the same\n// canonical form may be considered equivalent, even if they are !==,\n// which usually means the objects are structurally equivalent (deeply\n// equal), but don't necessarily use the same memory.\n//\n// Like a literary or musical canon, this ObjectCanon class represents a\n// collection of unique canonical items (JavaScript objects), with the\n// important property that canon.admit(a) === canon.admit(b) if a and b\n// are deeply equal to each other. In terms of the definition above, the\n// canon.admit method is the \"function or procedure which projects every\"\n// object \"onto that one element, the canonical form.\"\n//\n// In the worst case, the canonicalization process may involve looking at\n// every property in the provided object tree, so it takes the same order\n// of time as deep equality checking. Fortunately, already-canonicalized\n// objects are returned immediately from canon.admit, so the presence of\n// canonical subtrees tends to speed up canonicalization.\n//\n// Since consumers of canonical objects can check for deep equality in\n// constant time, canonicalizing cache results can massively improve the\n// performance of application code that skips re-rendering unchanged\n// results, such as \"pure\" UI components in a framework like React.\n//\n// Of course, since canonical objects may be shared widely between\n// unrelated consumers, it's important to think of them as immutable, even\n// though they are not actually frozen with Object.freeze in production,\n// due to the extra performance overhead that comes with frozen objects.\n//\n// Custom scalar objects whose internal class name is neither Array nor\n// Object can be included safely in the admitted tree, but they will not\n// be replaced with a canonical version (to put it another way, they are\n// assumed to be canonical already).\n//\n// If we ignore custom objects, no detection of cycles or repeated object\n// references is currently required by the StoreReader class, since\n// GraphQL result objects are JSON-serializable trees (and thus contain\n// neither cycles nor repeated subtrees), so we can avoid the complexity\n// of keeping track of objects we've already seen during the recursion of\n// the admit method.\n//\n// In the future, we may consider adding additional cases to the switch\n// statement to handle other common object types, such as \"[object Date]\"\n// objects, as needed.\nexport class ObjectCanon {\n  // Set of all canonical objects this ObjectCanon has admitted, allowing\n  // canon.admit to return previously-canonicalized objects immediately.\n  private known = new (canUseWeakSet ? WeakSet : Set)<object>();\n\n  // Efficient storage/lookup structure for canonical objects.\n  private pool = new Trie<{\n    array?: any[];\n    object?: Record<string, any>;\n    keys?: SortedKeysInfo;\n  }>(canUseWeakMap);\n\n  public isKnown(value: any): boolean {\n    return isObjectOrArray(value) && this.known.has(value);\n  }\n\n  // Make the ObjectCanon assume this value has already been\n  // canonicalized.\n  private passes = new WeakMap<object, object>();\n  public pass<T>(value: T): T;\n  public pass(value: any) {\n    if (isObjectOrArray(value)) {\n      const copy = shallowCopy(value);\n      this.passes.set(copy, value);\n      return copy;\n    }\n    return value;\n  }\n\n  // Returns the canonical version of value.\n  public admit<T>(value: T): T;\n  public admit(value: any) {\n    if (isObjectOrArray(value)) {\n      const original = this.passes.get(value);\n      if (original) return original;\n\n      const proto = Object.getPrototypeOf(value);\n      switch (proto) {\n        case Array.prototype: {\n          if (this.known.has(value)) return value;\n          const array: any[] = (value as any[]).map(this.admit, this);\n          // Arrays are looked up in the Trie using their recursively\n          // canonicalized elements, and the known version of the array is\n          // preserved as node.array.\n          const node = this.pool.lookupArray(array);\n          if (!node.array) {\n            this.known.add(node.array = array);\n            // Since canonical arrays may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(array);\n            }\n          }\n          return node.array;\n        }\n\n        case null:\n        case Object.prototype: {\n          if (this.known.has(value)) return value;\n          const proto = Object.getPrototypeOf(value);\n          const array = [proto];\n          const keys = this.sortedKeys(value);\n          array.push(keys.json);\n          const firstValueIndex = array.length;\n          keys.sorted.forEach(key => {\n            array.push(this.admit((value as any)[key]));\n          });\n          // Objects are looked up in the Trie by their prototype (which\n          // is *not* recursively canonicalized), followed by a JSON\n          // representation of their (sorted) keys, followed by the\n          // sequence of recursively canonicalized values corresponding to\n          // those keys. To keep the final results unambiguous with other\n          // sequences (such as arrays that just happen to contain [proto,\n          // keys.json, value1, value2, ...]), the known version of the\n          // object is stored as node.object.\n          const node = this.pool.lookupArray(array);\n          if (!node.object) {\n            const obj = node.object = Object.create(proto);\n            this.known.add(obj);\n            keys.sorted.forEach((key, i) => {\n              obj[key] = array[firstValueIndex + i];\n            });\n            // Since canonical objects may be shared widely between\n            // unrelated consumers, it's important to regard them as\n            // immutable, even if they are not frozen in production.\n            if (__DEV__) {\n              Object.freeze(obj);\n            }\n          }\n          return node.object;\n        }\n      }\n    }\n    return value;\n  }\n\n  // It's worthwhile to cache the sorting of arrays of strings, since the\n  // same initial unsorted arrays tend to be encountered many times.\n  // Fortunately, we can reuse the Trie machinery to look up the sorted\n  // arrays in linear time (which is faster than sorting large arrays).\n  private sortedKeys(obj: object) {\n    const keys = Object.keys(obj);\n    const node = this.pool.lookupArray(keys);\n    if (!node.keys) {\n      keys.sort();\n      const json = JSON.stringify(keys);\n      if (!(node.keys = this.keysByJSON.get(json))) {\n        this.keysByJSON.set(json, node.keys = { sorted: keys, json });\n      }\n    }\n    return node.keys;\n  }\n  // Arrays that contain the same elements in a different order can share\n  // the same SortedKeysInfo object, to save memory.\n  private keysByJSON = new Map<string, SortedKeysInfo>();\n\n  // This has to come last because it depends on keysByJSON.\n  public readonly empty = this.admit({});\n}\n\ntype SortedKeysInfo = {\n  sorted: string[];\n  json: string;\n};\n\n// Since the keys of canonical objects are always created in lexicographically\n// sorted order, we can use the ObjectCanon to implement a fast and stable\n// version of JSON.stringify, which automatically sorts object keys.\nexport const canonicalStringify = Object.assign(function (value: any): string {\n  if (isObjectOrArray(value)) {\n    if (stringifyCanon === void 0) {\n      resetCanonicalStringify();\n    }\n    const canonical = stringifyCanon.admit(value);\n    let json = stringifyCache.get(canonical);\n    if (json === void 0) {\n      stringifyCache.set(\n        canonical,\n        json = JSON.stringify(canonical),\n      );\n    }\n    return json;\n  }\n  return JSON.stringify(value);\n}, {\n  reset: resetCanonicalStringify,\n});\n\n// Can be reset by calling canonicalStringify.reset().\nlet stringifyCanon: ObjectCanon;\nlet stringifyCache: WeakMap<object, string>;\n\nfunction resetCanonicalStringify() {\n  stringifyCanon = new ObjectCanon;\n  stringifyCache = new (canUseWeakMap ? WeakMap : Map)();\n}\n", "import {\n  DocumentNode,\n  FieldNode,\n  SelectionSetNode,\n} from 'graphql';\nimport { wrap, OptimisticWrapperFunction } from 'optimism';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  isField,\n  resultKeyNameFromField,\n  Reference,\n  isReference,\n  makeReference,\n  StoreObject,\n  createFragmentMap,\n  FragmentMap,\n  shouldInclude,\n  addTypenameToDocument,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getMainDefinition,\n  getQueryDefinition,\n  mergeDeepArray,\n  getFragmentFromSelection,\n  maybeDeepFreeze,\n  isNonNullObject,\n  canUseWeakMap,\n} from '../../utilities';\nimport { Cache } from '../core/types/Cache';\nimport {\n  DiffQueryAgainstStoreOptions,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from './types';\nimport { maybeDependOnExistenceOfEntity, supportsResultCaching } from './entityStore';\nimport { getTypenameFromStoreObject } from './helpers';\nimport { Policies } from './policies';\nimport { InMemoryCache } from './inMemoryCache';\nimport { MissingFieldError } from '../core/types/common';\nimport { canonicalStringify, ObjectCanon } from './object-canon';\n\nexport type VariableMap = { [name: string]: any };\n\ninterface ReadContext extends ReadMergeModifyContext {\n  query: DocumentNode;\n  policies: Policies;\n  canonizeResults: boolean;\n  fragmentMap: FragmentMap;\n  path: (string | number)[];\n};\n\nexport type ExecResult<R = any> = {\n  result: R;\n  missing?: MissingFieldError[];\n};\n\nfunction missingFromInvariant(\n  err: InvariantError,\n  context: ReadContext,\n) {\n  return new MissingFieldError(\n    err.message,\n    context.path.slice(),\n    context.query,\n    context.variables,\n  );\n}\n\ntype ExecSelectionSetOptions = {\n  selectionSet: SelectionSetNode;\n  objectOrReference: StoreObject | Reference;\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\ntype ExecSubSelectedArrayOptions = {\n  field: FieldNode;\n  array: any[];\n  enclosingRef: Reference;\n  context: ReadContext;\n};\n\nexport interface StoreReaderConfig {\n  cache: InMemoryCache,\n  addTypename?: boolean;\n  resultCacheMaxSize?: number;\n  canon?: ObjectCanon;\n}\n\n// Arguments type after keyArgs translation.\ntype ExecSelectionSetKeyArgs = [\n  SelectionSetNode,\n  StoreObject | Reference,\n  ReadMergeModifyContext,\n  boolean,\n];\n\nfunction execSelectionSetKeyArgs(\n  options: ExecSelectionSetOptions,\n): ExecSelectionSetKeyArgs {\n  return [\n    options.selectionSet,\n    options.objectOrReference,\n    options.context,\n    // We split out this property so we can pass different values\n    // independently without modifying options.context itself.\n    options.context.canonizeResults,\n  ];\n}\n\nexport class StoreReader {\n  // cached version of executeSelectionset\n  private executeSelectionSet: OptimisticWrapperFunction<\n    [ExecSelectionSetOptions], // Actual arguments tuple type.\n    ExecResult, // Actual return type.\n    ExecSelectionSetKeyArgs\n  >;\n\n  // cached version of executeSubSelectedArray\n  private executeSubSelectedArray: OptimisticWrapperFunction<\n    [ExecSubSelectedArrayOptions],\n    ExecResult<any>,\n    [ExecSubSelectedArrayOptions]>;\n\n  private config: {\n    cache: InMemoryCache,\n    addTypename: boolean;\n    resultCacheMaxSize?: number;\n  };\n\n  private knownResults = new (\n    canUseWeakMap ? WeakMap : Map\n  )<Record<string, any>, SelectionSetNode>();\n\n  public canon: ObjectCanon;\n  public resetCanon() {\n    this.canon = new ObjectCanon;\n  }\n\n  constructor(config: StoreReaderConfig) {\n    this.config = {\n      ...config,\n      addTypename: config.addTypename !== false,\n    };\n\n    this.canon = config.canon || new ObjectCanon;\n\n    this.executeSelectionSet = wrap(options => {\n      const { canonizeResults } = options.context;\n\n      const peekArgs = execSelectionSetKeyArgs(options);\n\n      // Negate this boolean option so we can find out if we've already read\n      // this result using the other boolean value.\n      peekArgs[3] = !canonizeResults;\n\n      const other = this.executeSelectionSet.peek(...peekArgs);\n\n      if (other) {\n        if (canonizeResults) {\n          return {\n            ...other,\n            // If we previously read this result without canonizing it, we can\n            // reuse that result simply by canonizing it now.\n            result: this.canon.admit(other.result),\n          };\n        }\n        // If we previously read this result with canonization enabled, we can\n        // return that canonized result as-is.\n        return other;\n      }\n\n      maybeDependOnExistenceOfEntity(\n        options.context.store,\n        options.enclosingRef.__ref,\n      );\n\n      // Finally, if we didn't find any useful previous results, run the real\n      // execSelectionSetImpl method with the given options.\n      return this.execSelectionSetImpl(options);\n\n    }, {\n      max: this.config.resultCacheMaxSize,\n      keyArgs: execSelectionSetKeyArgs,\n      // Note that the parameters of makeCacheKey are determined by the\n      // array returned by keyArgs.\n      makeCacheKey(selectionSet, parent, context, canonizeResults) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(\n            selectionSet,\n            isReference(parent) ? parent.__ref : parent,\n            context.varString,\n            canonizeResults,\n          );\n        }\n      }\n    });\n\n    this.executeSubSelectedArray = wrap((options: ExecSubSelectedArrayOptions) => {\n      maybeDependOnExistenceOfEntity(\n        options.context.store,\n        options.enclosingRef.__ref,\n      );\n      return this.execSubSelectedArrayImpl(options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey({ field, array, context }) {\n        if (supportsResultCaching(context.store)) {\n          return context.store.makeCacheKey(\n            field,\n            array,\n            context.varString,\n          );\n        }\n      }\n    });\n  }\n\n  /**\n   * Given a store and a query, return as much of the result as possible and\n   * identify if any data was missing from the store.\n   * @param  {DocumentNode} query A parsed GraphQL query document\n   * @param  {Store} store The Apollo Client store object\n   * @return {result: Object, complete: [boolean]}\n   */\n  public diffQueryAgainstStore<T>({\n    store,\n    query,\n    rootId = 'ROOT_QUERY',\n    variables,\n    returnPartialData = true,\n    canonizeResults = true,\n  }: DiffQueryAgainstStoreOptions): Cache.DiffResult<T> {\n    const policies = this.config.cache.policies;\n\n    variables = {\n      ...getDefaultValues(getQueryDefinition(query)),\n      ...variables!,\n    };\n\n    const rootRef = makeReference(rootId);\n    const execResult = this.executeSelectionSet({\n      selectionSet: getMainDefinition(query).selectionSet,\n      objectOrReference: rootRef,\n      enclosingRef: rootRef,\n      context: {\n        store,\n        query,\n        policies,\n        variables,\n        varString: canonicalStringify(variables),\n        canonizeResults,\n        fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n        path: [],\n      },\n    });\n\n    const hasMissingFields =\n      execResult.missing && execResult.missing.length > 0;\n    if (hasMissingFields && !returnPartialData) {\n      throw execResult.missing![0];\n    }\n\n    return {\n      result: execResult.result,\n      missing: execResult.missing,\n      complete: !hasMissingFields,\n    };\n  }\n\n  public isFresh(\n    result: Record<string, any>,\n    parent: StoreObject | Reference,\n    selectionSet: SelectionSetNode,\n    context: ReadMergeModifyContext,\n  ): boolean {\n    if (supportsResultCaching(context.store) &&\n        this.knownResults.get(result) === selectionSet) {\n      const latest = this.executeSelectionSet.peek(\n        selectionSet,\n        parent,\n        context,\n        // If result is canonical, then it could only have been previously\n        // cached by the canonizing version of executeSelectionSet, so we can\n        // avoid checking both possibilities here.\n        this.canon.isKnown(result),\n      );\n      if (latest && result === latest.result) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // Uncached version of executeSelectionSet.\n  private execSelectionSetImpl({\n    selectionSet,\n    objectOrReference,\n    enclosingRef,\n    context,\n  }: ExecSelectionSetOptions): ExecResult {\n    if (isReference(objectOrReference) &&\n        !context.policies.rootTypenamesById[objectOrReference.__ref] &&\n        !context.store.has(objectOrReference.__ref)) {\n      return {\n        result: this.canon.empty,\n        missing: [missingFromInvariant(\n          new InvariantError(\n            `Dangling reference to missing ${objectOrReference.__ref} object`\n          ),\n          context,\n        )],\n      };\n    }\n\n    const { variables, policies, store } = context;\n    const objectsToMerge: { [key: string]: any }[] = [];\n    const finalResult: ExecResult = { result: null };\n    const typename = store.getFieldValue<string>(objectOrReference, \"__typename\");\n\n    if (this.config.addTypename &&\n        typeof typename === \"string\" &&\n        !policies.rootIdsByTypename[typename]) {\n      // Ensure we always include a default value for the __typename\n      // field, if we have one, and this.config.addTypename is true. Note\n      // that this field can be overridden by other merged objects.\n      objectsToMerge.push({ __typename: typename });\n    }\n\n    function getMissing() {\n      return finalResult.missing || (finalResult.missing = []);\n    }\n\n    function handleMissing<T>(result: ExecResult<T>): T {\n      if (result.missing) getMissing().push(...result.missing);\n      return result.result;\n    }\n\n    const workSet = new Set(selectionSet.selections);\n\n    workSet.forEach(selection => {\n      // Omit fields with directives @skip(if: <truthy value>) or\n      // @include(if: <falsy value>).\n      if (!shouldInclude(selection, variables)) return;\n\n      if (isField(selection)) {\n        let fieldValue = policies.readField({\n          fieldName: selection.name.value,\n          field: selection,\n          variables: context.variables,\n          from: objectOrReference,\n        }, context);\n\n        const resultName = resultKeyNameFromField(selection);\n        context.path.push(resultName);\n\n        if (fieldValue === void 0) {\n          if (!addTypenameToDocument.added(selection)) {\n            getMissing().push(\n              missingFromInvariant(\n                new InvariantError(`Can't find field '${\n                  selection.name.value\n                }' on ${\n                  isReference(objectOrReference)\n                    ? objectOrReference.__ref + \" object\"\n                    : \"object \" + JSON.stringify(objectOrReference, null, 2)\n                }`),\n                context,\n              ),\n            );\n          }\n\n        } else if (Array.isArray(fieldValue)) {\n          fieldValue = handleMissing(this.executeSubSelectedArray({\n            field: selection,\n            array: fieldValue,\n            enclosingRef,\n            context,\n          }));\n\n        } else if (!selection.selectionSet) {\n          // If the field does not have a selection set, then we handle it\n          // as a scalar value. To keep this.canon from canonicalizing\n          // this value, we use this.canon.pass to wrap fieldValue in a\n          // Pass object that this.canon.admit will later unwrap as-is.\n          if (context.canonizeResults) {\n            fieldValue = this.canon.pass(fieldValue);\n          }\n\n        } else if (fieldValue != null) {\n          // In this case, because we know the field has a selection set,\n          // it must be trying to query a GraphQLObjectType, which is why\n          // fieldValue must be != null.\n          fieldValue = handleMissing(this.executeSelectionSet({\n            selectionSet: selection.selectionSet,\n            objectOrReference: fieldValue as StoreObject | Reference,\n            enclosingRef: isReference(fieldValue) ? fieldValue : enclosingRef,\n            context,\n          }));\n        }\n\n        if (fieldValue !== void 0) {\n          objectsToMerge.push({ [resultName]: fieldValue });\n        }\n\n        invariant(context.path.pop() === resultName);\n\n      } else {\n        const fragment = getFragmentFromSelection(\n          selection,\n          context.fragmentMap,\n        );\n\n        if (fragment && policies.fragmentMatches(fragment, typename)) {\n          fragment.selectionSet.selections.forEach(workSet.add, workSet);\n        }\n      }\n    });\n\n    // Perform a single merge at the end so that we can avoid making more\n    // defensive shallow copies than necessary.\n    const merged = mergeDeepArray(objectsToMerge);\n    finalResult.result = context.canonizeResults\n      ? this.canon.admit(merged)\n      // Since this.canon is normally responsible for freezing results (only in\n      // development), freeze them manually if canonization is disabled.\n      : maybeDeepFreeze(merged);\n\n    // Store this result with its selection set so that we can quickly\n    // recognize it again in the StoreReader#isFresh method.\n    this.knownResults.set(finalResult.result, selectionSet);\n\n    return finalResult;\n  }\n\n  // Uncached version of executeSubSelectedArray.\n  private execSubSelectedArrayImpl({\n    field,\n    array,\n    enclosingRef,\n    context,\n  }: ExecSubSelectedArrayOptions): ExecResult {\n    let missing: MissingFieldError[] | undefined;\n\n    function handleMissing<T>(childResult: ExecResult<T>, i: number): T {\n      if (childResult.missing) {\n        missing = missing || [];\n        missing.push(...childResult.missing);\n      }\n\n      invariant(context.path.pop() === i);\n\n      return childResult.result;\n    }\n\n    if (field.selectionSet) {\n      array = array.filter(context.store.canRead);\n    }\n\n    array = array.map((item, i) => {\n      // null value in array\n      if (item === null) {\n        return null;\n      }\n\n      context.path.push(i);\n\n      // This is a nested array, recurse\n      if (Array.isArray(item)) {\n        return handleMissing(this.executeSubSelectedArray({\n          field,\n          array: item,\n          enclosingRef,\n          context,\n        }), i);\n      }\n\n      // This is an object, run the selection set on it\n      if (field.selectionSet) {\n        return handleMissing(this.executeSelectionSet({\n          selectionSet: field.selectionSet,\n          objectOrReference: item,\n          enclosingRef: isReference(item) ? item : enclosingRef,\n          context,\n        }), i);\n      }\n\n      if (__DEV__) {\n        assertSelectionSetForIdValue(context.store, field, item);\n      }\n\n      invariant(context.path.pop() === i);\n\n      return item;\n    });\n\n    return {\n      result: context.canonizeResults ? this.canon.admit(array) : array,\n      missing,\n    };\n  }\n}\n\nfunction assertSelectionSetForIdValue(\n  store: NormalizedCache,\n  field: FieldNode,\n  fieldValue: any,\n) {\n  if (!field.selectionSet) {\n    const workSet = new Set([fieldValue]);\n    workSet.forEach(value => {\n      if (isNonNullObject(value)) {\n        invariant(\n          !isReference(value),\n          `Missing selection set for object of type ${\n            getTypenameFromStoreObject(store, value)\n          } returned for query field ${field.name.value}`,\n        );\n        Object.values(value).forEach(workSet.add, workSet);\n      }\n    });\n  }\n}\n", "import { SelectionSetNode, FieldNode, SelectionNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { equal } from '@wry/equality';\n\nimport {\n  createFragmentMap,\n  FragmentMap,\n  getFragmentFromSelection,\n  getDefaultValues,\n  getFragmentDefinitions,\n  getOperationDefinition,\n  getTypenameFromResult,\n  makeReference,\n  isField,\n  resultKeyNameFromField,\n  StoreValue,\n  StoreObject,\n  Reference,\n  isReference,\n  shouldInclude,\n  cloneDeep,\n  addTypenameToDocument,\n} from '../../utilities';\n\nimport { NormalizedCache, ReadMergeModifyContext, MergeTree } from './types';\nimport { makeProcessedFieldsMerger, fieldNameFromStoreName, storeValueIsStoreObject } from './helpers';\nimport { StoreReader } from './readFromStore';\nimport { InMemoryCache } from './inMemoryCache';\nimport { EntityStore } from './entityStore';\nimport { Cache } from '../../core';\nimport { canonicalStringify } from './object-canon';\n\nexport interface WriteContext extends ReadMergeModifyContext {\n  readonly written: {\n    [dataId: string]: SelectionSetNode[];\n  };\n  readonly fragmentMap?: FragmentMap;\n  // General-purpose deep-merge function for use during writes.\n  merge<T>(existing: T, incoming: T): T;\n  // If true, merge functions will be called with undefined existing data.\n  overwrite: boolean;\n  incomingById: Map<string, {\n    fields: StoreObject;\n    mergeTree?: MergeTree;\n    selections: Set<SelectionNode>;\n  }>;\n  clientOnly: boolean;\n};\n\ninterface ProcessSelectionSetOptions {\n  dataId?: string,\n  result: Record<string, any>;\n  selectionSet: SelectionSetNode;\n  context: WriteContext;\n  mergeTree: MergeTree;\n}\n\nexport class StoreWriter {\n  constructor(\n    public readonly cache: InMemoryCache,\n    private reader?: StoreReader,\n  ) {}\n\n  public writeToStore(store: NormalizedCache, {\n    query,\n    result,\n    dataId,\n    variables,\n    overwrite,\n  }: Cache.WriteOptions): Reference | undefined {\n    const operationDefinition = getOperationDefinition(query)!;\n    const merger = makeProcessedFieldsMerger();\n\n    variables = {\n      ...getDefaultValues(operationDefinition),\n      ...variables!,\n    };\n\n    const context: WriteContext = {\n      store,\n      written: Object.create(null),\n      merge<T>(existing: T, incoming: T) {\n        return merger.merge(existing, incoming) as T;\n      },\n      variables,\n      varString: canonicalStringify(variables),\n      fragmentMap: createFragmentMap(getFragmentDefinitions(query)),\n      overwrite: !!overwrite,\n      incomingById: new Map,\n      clientOnly: false,\n    };\n\n    const ref = this.processSelectionSet({\n      result: result || Object.create(null),\n      dataId,\n      selectionSet: operationDefinition.selectionSet,\n      mergeTree: { map: new Map },\n      context,\n    });\n\n    if (!isReference(ref)) {\n      throw new InvariantError(`Could not identify object ${JSON.stringify(result)}`);\n    }\n\n    // So far, the store has not been modified, so now it's time to process\n    // context.incomingById and merge those incoming fields into context.store.\n    context.incomingById.forEach(({ fields, mergeTree, selections }, dataId) => {\n      const entityRef = makeReference(dataId);\n\n      if (mergeTree && mergeTree.map.size) {\n        const applied = this.applyMerges(mergeTree, entityRef, fields, context);\n        if (isReference(applied)) {\n          // Assume References returned by applyMerges have already been merged\n          // into the store. See makeMergeObjectsFunction in policies.ts for an\n          // example of how this can happen.\n          return;\n        }\n        // Otherwise, applyMerges returned a StoreObject, whose fields we should\n        // merge into the store (see store.merge statement below).\n        fields = applied;\n      }\n\n      if (__DEV__ && !context.overwrite) {\n        const hasSelectionSet = (storeFieldName: string) =>\n          fieldsWithSelectionSets.has(fieldNameFromStoreName(storeFieldName));\n        const fieldsWithSelectionSets = new Set<string>();\n        selections.forEach(selection => {\n          if (isField(selection) && selection.selectionSet) {\n            fieldsWithSelectionSets.add(selection.name.value);\n          }\n        });\n\n        const hasMergeFunction = (storeFieldName: string) => {\n          const childTree = mergeTree && mergeTree.map.get(storeFieldName);\n          return Boolean(childTree && childTree.info && childTree.info.merge);\n        };\n\n        Object.keys(fields).forEach(storeFieldName => {\n          // If a merge function was defined for this field, trust that it\n          // did the right thing about (not) clobbering data. If the field\n          // has no selection set, it's a scalar field, so it doesn't need\n          // a merge function (even if it's an object, like JSON data).\n          if (hasSelectionSet(storeFieldName) &&\n              !hasMergeFunction(storeFieldName)) {\n            warnAboutDataLoss(\n              entityRef,\n              fields,\n              storeFieldName,\n              context.store,\n            );\n          }\n        });\n      }\n\n      store.merge(dataId, fields);\n    });\n\n    // Any IDs written explicitly to the cache will be retained as\n    // reachable root IDs for garbage collection purposes. Although this\n    // logic includes root IDs like ROOT_QUERY and ROOT_MUTATION, their\n    // retainment counts are effectively ignored because cache.gc() always\n    // includes them in its root ID set.\n    store.retain(ref.__ref);\n\n    return ref;\n  }\n\n  private processSelectionSet({\n    dataId,\n    result,\n    selectionSet,\n    context,\n    // This object allows processSelectionSet to report useful information\n    // to its callers without explicitly returning that information.\n    mergeTree,\n  }: ProcessSelectionSetOptions): StoreObject | Reference {\n    const { policies } = this.cache;\n\n    // Identify the result object, even if dataId was already provided,\n    // since we always need keyObject below.\n    const [id, keyObject] = policies.identify(\n      result, selectionSet, context.fragmentMap);\n\n    // If dataId was not provided, fall back to the id just generated by\n    // policies.identify.\n    dataId = dataId || id;\n\n    if (\"string\" === typeof dataId) {\n      // Avoid processing the same entity object using the same selection\n      // set more than once. We use an array instead of a Set since most\n      // entity IDs will be written using only one selection set, so the\n      // size of this array is likely to be very small, meaning indexOf is\n      // likely to be faster than Set.prototype.has.\n      const sets = context.written[dataId] || (context.written[dataId] = []);\n      const ref = makeReference(dataId);\n      if (sets.indexOf(selectionSet) >= 0) return ref;\n      sets.push(selectionSet);\n\n      // If we're about to write a result object into the store, but we\n      // happen to know that the exact same (===) result object would be\n      // returned if we were to reread the result with the same inputs,\n      // then we can skip the rest of the processSelectionSet work for\n      // this object, and immediately return a Reference to it.\n      if (this.reader && this.reader.isFresh(\n        result,\n        ref,\n        selectionSet,\n        context,\n      )) {\n        return ref;\n      }\n    }\n\n    // This variable will be repeatedly updated using context.merge to\n    // accumulate all fields that need to be written into the store.\n    let incomingFields: StoreObject = Object.create(null);\n\n    // Write any key fields that were used during identification, even if\n    // they were not mentioned in the original query.\n    if (keyObject) {\n      incomingFields = context.merge(incomingFields, keyObject);\n    }\n\n    // If typename was not passed in, infer it. Note that typename is\n    // always passed in for tricky-to-infer cases such as \"Query\" for\n    // ROOT_QUERY.\n    const typename: string | undefined =\n      (dataId && policies.rootTypenamesById[dataId]) ||\n      getTypenameFromResult(result, selectionSet, context.fragmentMap) ||\n      (dataId && context.store.get(dataId, \"__typename\") as string);\n\n    if (\"string\" === typeof typename) {\n      incomingFields.__typename = typename;\n    }\n\n    const selections = new Set(selectionSet.selections);\n\n    selections.forEach(selection => {\n      if (!shouldInclude(selection, context.variables)) return;\n\n      if (isField(selection)) {\n        const resultFieldKey = resultKeyNameFromField(selection);\n        const value = result[resultFieldKey];\n\n        const wasClientOnly = context.clientOnly;\n        context.clientOnly = wasClientOnly || !!(\n          selection.directives &&\n          selection.directives.some(d => d.name.value === \"client\")\n        );\n\n        if (value !== void 0) {\n          const storeFieldName = policies.getStoreFieldName({\n            typename,\n            fieldName: selection.name.value,\n            field: selection,\n            variables: context.variables,\n          });\n\n          const childTree = getChildMergeTree(mergeTree, storeFieldName);\n\n          let incomingValue =\n            this.processFieldValue(value, selection, context, childTree);\n\n          // To determine if this field holds a child object with a merge\n          // function defined in its type policy (see PR #7070), we need to\n          // figure out the child object's __typename.\n          let childTypename: string | undefined;\n\n          // The field's value can be an object that has a __typename only if\n          // the field has a selection set. Otherwise incomingValue is scalar.\n          if (selection.selectionSet) {\n            // We attempt to find the child __typename first in context.store,\n            // but the child object may not exist in the store yet, likely\n            // because it's being written for the first time, during this very\n            // call to writeToStore. Note: if incomingValue is a non-normalized\n            // StoreObject (not a Reference), getFieldValue will read from that\n            // object's properties to find its __typename.\n            childTypename = context.store.getFieldValue<string>(\n              incomingValue as StoreObject | Reference,\n              \"__typename\",\n            );\n\n            // If the child object is being written for the first time, but\n            // incomingValue is a Reference, then the entity that Reference\n            // identifies should have an entry in context.incomingById, which\n            // likely contains a __typename field we can use. After all, how\n            // could we know the object's ID if it had no __typename? If we\n            // wrote data into context.store as each processSelectionSet call\n            // finished processing an entity object, the child object would\n            // already be in context.store, so we wouldn't need this extra\n            // check, but holding all context.store.merge calls until after\n            // we've finished all processSelectionSet work is cleaner and solves\n            // other problems, such as issue #8370.\n            if (!childTypename && isReference(incomingValue)) {\n              const info = context.incomingById.get(incomingValue.__ref);\n              childTypename = info && info.fields.__typename;\n            }\n          }\n\n          const merge = policies.getMergeFunction(\n            typename,\n            selection.name.value,\n            childTypename,\n          );\n\n          if (merge) {\n            childTree.info = {\n              // TODO Check compatibility against any existing\n              // childTree.field?\n              field: selection,\n              typename,\n              merge,\n            };\n          } else {\n            maybeRecycleChildMergeTree(mergeTree, storeFieldName);\n          }\n\n          incomingFields = context.merge(incomingFields, {\n            [storeFieldName]: incomingValue,\n          });\n\n        } else if (\n          !context.clientOnly &&\n          !addTypenameToDocument.added(selection)\n        ) {\n          invariant.error(`Missing field '${\n            resultKeyNameFromField(selection)\n          }' while writing result ${\n            JSON.stringify(result, null, 2)\n          }`.substring(0, 1000));\n        }\n\n        context.clientOnly = wasClientOnly;\n\n      } else {\n        // This is not a field, so it must be a fragment, either inline or named\n        const fragment = getFragmentFromSelection(\n          selection,\n          context.fragmentMap,\n        );\n\n        if (fragment &&\n            // By passing result and context.variables, we enable\n            // policies.fragmentMatches to bend the rules when typename is\n            // not a known subtype of the fragment type condition, but the\n            // result object contains all the keys requested by the\n            // fragment, which strongly suggests the fragment probably\n            // matched. This fuzzy matching behavior must be enabled by\n            // including a regular expression string (such as \".*\" or\n            // \"Prefix.*\" or \".*Suffix\") in the possibleTypes array for\n            // specific supertypes; otherwise, all matching remains exact.\n            // Fuzzy matches are remembered by the Policies object and\n            // later used when reading from the cache. Since there is no\n            // incoming result object to check when reading, reading does\n            // not involve the same fuzzy inference, so the StoreReader\n            // class calls policies.fragmentMatches without passing result\n            // or context.variables. The flexibility of fuzzy matching\n            // allows existing clients to accommodate previously unknown\n            // __typename strings produced by server/schema changes, which\n            // would otherwise be breaking changes.\n            policies.fragmentMatches(fragment, typename, result, context.variables)) {\n          fragment.selectionSet.selections.forEach(selections.add, selections);\n        }\n      }\n    });\n\n    if (\"string\" === typeof dataId) {\n      const previous = context.incomingById.get(dataId);\n      if (previous) {\n        previous.fields = context.merge(previous.fields, incomingFields);\n        previous.mergeTree = mergeMergeTrees(previous.mergeTree, mergeTree);\n        // Add all previous SelectionNode objects, rather than creating a new\n        // Set, since the original unmerged selections Set is not going to be\n        // needed again (only the merged Set).\n        previous.selections.forEach(selections.add, selections);\n        previous.selections = selections;\n      } else {\n        context.incomingById.set(dataId, {\n          fields: incomingFields,\n          // Save a reference to mergeTree only if it is not empty, because\n          // empty MergeTrees may be recycled by maybeRecycleChildMergeTree and\n          // reused for entirely different parts of the result tree.\n          mergeTree: mergeTreeIsEmpty(mergeTree) ? void 0 : mergeTree,\n          selections,\n        });\n      }\n      return makeReference(dataId);\n    }\n\n    return incomingFields;\n  }\n\n  private processFieldValue(\n    value: any,\n    field: FieldNode,\n    context: WriteContext,\n    mergeTree: MergeTree,\n  ): StoreValue {\n    if (!field.selectionSet || value === null) {\n      // In development, we need to clone scalar values so that they can be\n      // safely frozen with maybeDeepFreeze in readFromStore.ts. In production,\n      // it's cheaper to store the scalar values directly in the cache.\n      return __DEV__ ? cloneDeep(value) : value;\n    }\n\n    if (Array.isArray(value)) {\n      return value.map((item, i) => {\n        const value = this.processFieldValue(\n          item, field, context, getChildMergeTree(mergeTree, i));\n        maybeRecycleChildMergeTree(mergeTree, i);\n        return value;\n      });\n    }\n\n    return this.processSelectionSet({\n      result: value,\n      selectionSet: field.selectionSet,\n      context,\n      mergeTree,\n    });\n  }\n\n  private applyMerges<T extends StoreValue>(\n    mergeTree: MergeTree,\n    existing: StoreValue,\n    incoming: T,\n    context: WriteContext,\n    getStorageArgs?: Parameters<EntityStore[\"getStorage\"]>,\n  ): T | Reference {\n    if (mergeTree.map.size && !isReference(incoming)) {\n      const e: StoreObject | Reference | undefined = (\n        // Items in the same position in different arrays are not\n        // necessarily related to each other, so when incoming is an array\n        // we process its elements as if there was no existing data.\n        !Array.isArray(incoming) &&\n        // Likewise, existing must be either a Reference or a StoreObject\n        // in order for its fields to be safe to merge with the fields of\n        // the incoming object.\n        (isReference(existing) || storeValueIsStoreObject(existing))\n      ) ? existing : void 0;\n\n      // This narrowing is implied by mergeTree.map.size > 0 and\n      // !isReference(incoming), though TypeScript understandably cannot\n      // hope to infer this type.\n      const i = incoming as StoreObject | StoreValue[];\n\n      // The options.storage objects provided to read and merge functions\n      // are derived from the identity of the parent object plus a\n      // sequence of storeFieldName strings/numbers identifying the nested\n      // field name path of each field value to be merged.\n      if (e && !getStorageArgs) {\n        getStorageArgs = [isReference(e) ? e.__ref : e];\n      }\n\n      // It's possible that applying merge functions to this subtree will\n      // not change the incoming data, so this variable tracks the fields\n      // that did change, so we can create a new incoming object when (and\n      // only when) at least one incoming field has changed. We use a Map\n      // to preserve the type of numeric keys.\n      let changedFields: Map<string | number, StoreValue> | undefined;\n\n      const getValue = (\n        from: typeof e | typeof i,\n        name: string | number,\n      ): StoreValue => {\n        return Array.isArray(from)\n          ? (typeof name === \"number\" ? from[name] : void 0)\n          : context.store.getFieldValue(from, String(name))\n      };\n\n      mergeTree.map.forEach((childTree, storeFieldName) => {\n        const eVal = getValue(e, storeFieldName);\n        const iVal = getValue(i, storeFieldName);\n        // If we have no incoming data, leave any existing data untouched.\n        if (void 0 === iVal) return;\n        if (getStorageArgs) {\n          getStorageArgs.push(storeFieldName);\n        }\n        const aVal = this.applyMerges(\n          childTree,\n          eVal,\n          iVal,\n          context,\n          getStorageArgs,\n        );\n        if (aVal !== iVal) {\n          changedFields = changedFields || new Map;\n          changedFields.set(storeFieldName, aVal);\n        }\n        if (getStorageArgs) {\n          invariant(getStorageArgs.pop() === storeFieldName);\n        }\n      });\n\n      if (changedFields) {\n        // Shallow clone i so we can add changed fields to it.\n        incoming = (Array.isArray(i) ? i.slice(0) : { ...i }) as T;\n        changedFields.forEach((value, name) => {\n          (incoming as any)[name] = value;\n        });\n      }\n    }\n\n    if (mergeTree.info) {\n      return this.cache.policies.runMergeFunction(\n        existing,\n        incoming,\n        mergeTree.info,\n        context,\n        getStorageArgs && context.store.getStorage(...getStorageArgs),\n      );\n    }\n\n    return incoming;\n  }\n}\n\nconst emptyMergeTreePool: MergeTree[] = [];\n\nfunction getChildMergeTree(\n  { map }: MergeTree,\n  name: string | number,\n): MergeTree {\n  if (!map.has(name)) {\n    map.set(name, emptyMergeTreePool.pop() || { map: new Map });\n  }\n  return map.get(name)!;\n}\n\nfunction mergeMergeTrees(\n  left: MergeTree | undefined,\n  right: MergeTree | undefined,\n): MergeTree {\n  if (left === right || !right || mergeTreeIsEmpty(right)) return left!;\n  if (!left || mergeTreeIsEmpty(left)) return right;\n\n  const info = left.info && right.info ? {\n    ...left.info,\n    ...right.info,\n  } : left.info || right.info;\n\n  const needToMergeMaps = left.map.size && right.map.size;\n  const map = needToMergeMaps ? new Map :\n    left.map.size ? left.map : right.map;\n\n  const merged = { info, map };\n\n  if (needToMergeMaps) {\n    const remainingRightKeys = new Set(right.map.keys());\n\n    left.map.forEach((leftTree, key) => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(leftTree, right.map.get(key)),\n      );\n      remainingRightKeys.delete(key);\n    });\n\n    remainingRightKeys.forEach(key => {\n      merged.map.set(\n        key,\n        mergeMergeTrees(\n          right.map.get(key),\n          left.map.get(key),\n        ),\n      );\n    });\n  }\n\n  return merged;\n}\n\nfunction mergeTreeIsEmpty(tree: MergeTree | undefined): boolean {\n  return !tree || !(tree.info || tree.map.size);\n}\n\nfunction maybeRecycleChildMergeTree(\n  { map }: MergeTree,\n  name: string | number,\n) {\n  const childTree = map.get(name);\n  if (childTree && mergeTreeIsEmpty(childTree)) {\n    emptyMergeTreePool.push(childTree);\n    map.delete(name);\n  }\n}\n\nconst warnings = new Set<string>();\n\n// Note that this function is unused in production, and thus should be\n// pruned by any well-configured minifier.\nfunction warnAboutDataLoss(\n  existingRef: Reference,\n  incomingObj: StoreObject,\n  storeFieldName: string,\n  store: NormalizedCache,\n) {\n  const getChild = (objOrRef: StoreObject | Reference): StoreObject | false => {\n    const child = store.getFieldValue<StoreObject>(objOrRef, storeFieldName);\n    return typeof child === \"object\" && child;\n  };\n\n  const existing = getChild(existingRef);\n  if (!existing) return;\n\n  const incoming = getChild(incomingObj);\n  if (!incoming) return;\n\n  // It's always safe to replace a reference, since it refers to data\n  // safely stored elsewhere.\n  if (isReference(existing)) return;\n\n  // If the values are structurally equivalent, we do not need to worry\n  // about incoming replacing existing.\n  if (equal(existing, incoming)) return;\n\n  // If we're replacing every key of the existing object, then the\n  // existing data would be overwritten even if the objects were\n  // normalized, so warning would not be helpful here.\n  if (Object.keys(existing).every(\n    key => store.getFieldValue(incoming, key) !== void 0)) {\n    return;\n  }\n\n  const parentType =\n    store.getFieldValue<string>(existingRef, \"__typename\") ||\n    store.getFieldValue<string>(incomingObj, \"__typename\");\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const typeDotName = `${parentType}.${fieldName}`;\n  // Avoid warning more than once for the same type and field name.\n  if (warnings.has(typeDotName)) return;\n  warnings.add(typeDotName);\n\n  const childTypenames: string[] = [];\n  // Arrays do not have __typename fields, and always need a custom merge\n  // function, even if their elements are normalized entities.\n  if (!Array.isArray(existing) &&\n      !Array.isArray(incoming)) {\n    [existing, incoming].forEach(child => {\n      const typename = store.getFieldValue(child, \"__typename\");\n      if (typeof typename === \"string\" &&\n          !childTypenames.includes(typename)) {\n        childTypenames.push(typename);\n      }\n    });\n  }\n\n  invariant.warn(\n`Cache data may be lost when replacing the ${fieldName} field of a ${parentType} object.\n\nTo address this problem (which is not a bug in Apollo Client), ${\n  childTypenames.length\n    ? \"either ensure all objects of type \" +\n        childTypenames.join(\" and \") + \" have an ID or a custom merge function, or \"\n    : \"\"\n}define a custom merge function for the ${\n  typeDotName\n} field, so InMemoryCache can safely merge these objects:\n\n  existing: ${JSON.stringify(existing).slice(0, 1000)}\n  incoming: ${JSON.stringify(incoming).slice(0, 1000)}\n\nFor more information about these options, please refer to the documentation:\n\n  * Ensuring entity objects have IDs: https://go.apollo.dev/c/generating-unique-identifiers\n  * Defining custom merge functions: https://go.apollo.dev/c/merging-non-normalized-objects\n`);\n}\n", "import { dep, OptimisticDependencyFunction } from \"optimism\";\nimport { Slot } from \"@wry/context\";\nimport { InMemoryCache } from \"./inMemoryCache\";\nimport { ApolloCache } from '../../core';\n\nexport interface ReactiveVar<T> {\n  (newValue?: T): T;\n  onNextChange(listener: ReactiveListener<T>): () => void;\n  attachCache(cache: ApolloCache<any>): this;\n  forgetCache(cache: ApolloCache<any>): boolean;\n}\n\nexport type ReactiveListener<T> = (value: T) => any;\n\n// Contextual Slot that acquires its value when custom read functions are\n// called in Policies#readField.\nexport const cacheSlot = new Slot<ApolloCache<any>>();\n\nconst cacheInfoMap = new WeakMap<ApolloCache<any>, {\n  vars: Set<ReactiveVar<any>>;\n  dep: OptimisticDependencyFunction<ReactiveVar<any>>;\n}>();\n\nfunction getCacheInfo(cache: ApolloCache<any>) {\n  let info = cacheInfoMap.get(cache)!;\n  if (!info) {\n    cacheInfoMap.set(cache, info = {\n      vars: new Set,\n      dep: dep(),\n    });\n  }\n  return info;\n}\n\nexport function forgetCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach(rv => rv.forgetCache(cache));\n}\n\n// Calling forgetCache(cache) serves to silence broadcasts and allows the\n// cache to be garbage collected. However, the varsByCache WeakMap\n// preserves the set of reactive variables that were previously associated\n// with this cache, which makes it possible to \"recall\" the cache at a\n// later time, by reattaching it to those variables. If the cache has been\n// garbage collected in the meantime, because it is no longer reachable,\n// you won't be able to call recallCache(cache), and the cache will\n// automatically disappear from the varsByCache WeakMap.\nexport function recallCache(cache: ApolloCache<any>) {\n  getCacheInfo(cache).vars.forEach(rv => rv.attachCache(cache));\n}\n\nexport function makeVar<T>(value: T): ReactiveVar<T> {\n  const caches = new Set<ApolloCache<any>>();\n  const listeners = new Set<ReactiveListener<T>>();\n\n  const rv: ReactiveVar<T> = function (newValue) {\n    if (arguments.length > 0) {\n      if (value !== newValue) {\n        value = newValue!;\n        caches.forEach(cache => {\n          // Invalidate any fields with custom read functions that\n          // consumed this variable, so query results involving those\n          // fields will be recomputed the next time we read them.\n          getCacheInfo(cache).dep.dirty(rv);\n          // Broadcast changes to any caches that have previously read\n          // from this variable.\n          broadcast(cache);\n        });\n        // Finally, notify any listeners added via rv.onNextChange.\n        const oldListeners = Array.from(listeners);\n        listeners.clear();\n        oldListeners.forEach(listener => listener(value));\n      }\n    } else {\n      // When reading from the variable, obtain the current cache from\n      // context via cacheSlot. This isn't entirely foolproof, but it's\n      // the same system that powers varDep.\n      const cache = cacheSlot.getValue();\n      if (cache) {\n        attach(cache);\n        getCacheInfo(cache).dep(rv);\n      }\n    }\n\n    return value;\n  };\n\n  rv.onNextChange = listener => {\n    listeners.add(listener);\n    return () => {\n      listeners.delete(listener);\n    };\n  };\n\n  const attach = rv.attachCache = cache => {\n    caches.add(cache);\n    getCacheInfo(cache).vars.add(rv);\n    return rv;\n  };\n\n  rv.forgetCache = cache => caches.delete(cache);\n\n  return rv;\n}\n\ntype Broadcastable = ApolloCache<any> & {\n  // This method is protected in InMemoryCache, which we are ignoring, but\n  // we still want some semblance of type safety when we call it.\n  broadcastWatches?: InMemoryCache[\"broadcastWatches\"];\n};\n\nfunction broadcast(cache: Broadcastable) {\n  if (cache.broadcastWatches) {\n    cache.broadcastWatches();\n  }\n}\n", "import {\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  SelectionSetNode,\n  FieldNode,\n} from 'graphql';\n\nimport { Trie } from '@wry/trie';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport {\n  FragmentMap,\n  getFragmentFromSelection,\n  isField,\n  getTypenameFromResult,\n  storeKeyNameFromField,\n  StoreValue,\n  StoreObject,\n  argumentsObjectFromField,\n  Reference,\n  isReference,\n  getStoreKeyName,\n  canUseWeakMap,\n  isNonNullObject,\n  stringifyForDisplay,\n} from '../../utilities';\nimport {\n  IdGetter,\n  MergeInfo,\n  NormalizedCache,\n  ReadMergeModifyContext,\n} from \"./types\";\nimport {\n  hasOwn,\n  fieldNameFromStoreName,\n  storeValueIsStoreObject,\n  selectionSetMatchesResult,\n  TypeOrFieldNameRegExp,\n} from './helpers';\nimport { cacheSlot } from './reactiveVars';\nimport { InMemoryCache } from './inMemoryCache';\nimport {\n  SafeReadonly,\n  FieldSpecifier,\n  ToReferenceFunction,\n  ReadFieldFunction,\n  ReadFieldOptions,\n  CanReadFunction,\n} from '../core/types/common';\nimport { WriteContext } from './writeToStore';\n\n// Upgrade to a faster version of the default stable JSON.stringify function\n// used by getStoreKeyName. This function is used when computing storeFieldName\n// strings (when no keyArgs has been configured for a field).\nimport { canonicalStringify } from './object-canon';\n\ngetStoreKeyName.setStringify(canonicalStringify);\n\nexport type TypePolicies = {\n  [__typename: string]: TypePolicy;\n}\n\n// TypeScript 3.7 will allow recursive type aliases, so this should work:\n// type KeySpecifier = (string | KeySpecifier)[]\ntype KeySpecifier = (string | any[])[];\n\ntype KeyFieldsContext = {\n  typename?: string;\n  selectionSet?: SelectionSetNode;\n  fragmentMap?: FragmentMap;\n  // May be set by the KeyFieldsFunction to report fields that were involved\n  // in computing the ID. Never passed in by the caller.\n  keyObject?: Record<string, any>;\n};\n\nexport type KeyFieldsFunction = (\n  object: Readonly<StoreObject>,\n  context: KeyFieldsContext,\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\ntype KeyFieldsResult = Exclude<ReturnType<KeyFieldsFunction>, KeySpecifier>;\n\n// TODO Should TypePolicy be a generic type, with a TObject or TEntity\n// type parameter?\nexport type TypePolicy = {\n  // Allows defining the primary key fields for this type, either using an\n  // array of field names or a function that returns an arbitrary string.\n  keyFields?: KeySpecifier | KeyFieldsFunction | false;\n\n  // Allows defining a merge function (or merge:true/false shorthand) to\n  // be used for merging objects of this type wherever they appear, unless\n  // the parent field also defines a merge function/boolean (that is,\n  // parent field merge functions take precedence over type policy merge\n  // functions). In many cases, defining merge:true for a given type\n  // policy can save you from specifying merge:true for all the field\n  // policies where that type might be encountered.\n  merge?: FieldMergeFunction | boolean;\n\n  // In the rare event that your schema happens to use a different\n  // __typename for the root Query, Mutation, and/or Schema types, you can\n  // express your deviant preferences by enabling one of these options.\n  queryType?: true,\n  mutationType?: true,\n  subscriptionType?: true,\n\n  fields?: {\n    [fieldName: string]:\n      | FieldPolicy<any>\n      | FieldReadFunction<any>;\n  }\n};\n\nexport type KeyArgsFunction = (\n  args: Record<string, any> | null,\n  context: {\n    typename: string;\n    fieldName: string;\n    field: FieldNode | null;\n    variables?: Record<string, any>;\n  },\n) => KeySpecifier | false | ReturnType<IdGetter>;\n\ntype KeyArgsResult = Exclude<ReturnType<KeyArgsFunction>, KeySpecifier>;\n\nexport type FieldPolicy<\n  // The internal representation used to store the field's data in the\n  // cache. Must be JSON-serializable if you plan to serialize the result\n  // of cache.extract() using JSON.\n  TExisting = any,\n  // The type of the incoming parameter passed to the merge function,\n  // typically matching the GraphQL response format, but with Reference\n  // objects substituted for any identifiable child objects. Often the\n  // same as TExisting, but not necessarily.\n  TIncoming = TExisting,\n  // The type that the read function actually returns, using TExisting\n  // data and options.args as input. Usually the same as TIncoming.\n  TReadResult = TIncoming,\n> = {\n  keyArgs?: KeySpecifier | KeyArgsFunction | false;\n  read?: FieldReadFunction<TExisting, TReadResult>;\n  merge?: FieldMergeFunction<TExisting, TIncoming> | boolean;\n};\n\nexport type StorageType = Record<string, any>;\n\nfunction argsFromFieldSpecifier(spec: FieldSpecifier) {\n  return spec.args !== void 0 ? spec.args :\n    spec.field ? argumentsObjectFromField(spec.field, spec.variables) : null;\n}\n\nexport interface FieldFunctionOptions<\n  TArgs = Record<string, any>,\n  TVars = Record<string, any>,\n> {\n  args: TArgs | null;\n\n  // The name of the field, equal to options.field.name.value when\n  // options.field is available. Useful if you reuse the same function for\n  // multiple fields, and you need to know which field you're currently\n  // processing. Always a string, even when options.field is null.\n  fieldName: string;\n\n  // The full field key used internally, including serialized key arguments.\n  storeFieldName: string;\n\n  // The FieldNode object used to read this field. Useful if you need to\n  // know about other attributes of the field, such as its directives. This\n  // option will be null when a string was passed to options.readField.\n  field: FieldNode | null;\n\n  variables?: TVars;\n\n  // Utilities for dealing with { __ref } objects.\n  isReference: typeof isReference;\n  toReference: ToReferenceFunction;\n\n  // A handy place to put field-specific data that you want to survive\n  // across multiple read function calls. Useful for field-level caching,\n  // if your read function does any expensive work.\n  storage: StorageType;\n\n  cache: InMemoryCache;\n\n  // Helper function for reading other fields within the current object.\n  // If a foreign object or reference is provided, the field will be read\n  // from that object instead of the current object, so this function can\n  // be used (together with isReference) to examine the cache outside the\n  // current object. If a FieldNode is passed instead of a string, and\n  // that FieldNode has arguments, the same options.variables will be used\n  // to compute the argument values. Note that this function will invoke\n  // custom read functions for other fields, if defined. Always returns\n  // immutable data (enforced with Object.freeze in development).\n  readField: ReadFieldFunction;\n\n  // Returns true for non-normalized StoreObjects and non-dangling\n  // References, indicating that readField(name, objOrRef) has a chance of\n  // working. Useful for filtering out dangling references from lists.\n  canRead: CanReadFunction;\n\n  // Instead of just merging objects with { ...existing, ...incoming }, this\n  // helper function can be used to merge objects in a way that respects any\n  // custom merge functions defined for their fields.\n  mergeObjects: MergeObjectsFunction;\n}\n\ntype MergeObjectsFunction = <T extends StoreObject | Reference>(\n  existing: T,\n  incoming: T,\n) => T;\n\nexport type FieldReadFunction<TExisting = any, TReadResult = TExisting> = (\n  // When reading a field, one often needs to know about any existing\n  // value stored for that field. If the field is read before any value\n  // has been written to the cache, this existing parameter will be\n  // undefined, which makes it easy to use a default parameter expression\n  // to supply the initial value. This parameter is positional (rather\n  // than one of the named options) because that makes it possible for the\n  // developer to annotate it with a type, without also having to provide\n  // a whole new type for the options object.\n  existing: SafeReadonly<TExisting> | undefined,\n  options: FieldFunctionOptions,\n) => TReadResult | undefined;\n\nexport type FieldMergeFunction<TExisting = any, TIncoming = TExisting> = (\n  existing: SafeReadonly<TExisting> | undefined,\n  // The incoming parameter needs to be positional as well, for the same\n  // reasons discussed in FieldReadFunction above.\n  incoming: SafeReadonly<TIncoming>,\n  options: FieldFunctionOptions,\n) => SafeReadonly<TExisting>;\n\nexport const defaultDataIdFromObject = (\n  { __typename, id, _id }: Readonly<StoreObject>,\n  context?: KeyFieldsContext,\n) => {\n  if (typeof __typename === \"string\") {\n    if (context) {\n      context.keyObject =\n         id !== void 0 ? {  id } :\n        _id !== void 0 ? { _id } :\n        void 0;\n    }\n    // If there is no object.id, fall back to object._id.\n    if (id === void 0) id = _id;\n    if (id !== void 0) {\n      return `${__typename}:${(\n        typeof id === \"number\" ||\n        typeof id === \"string\"\n      ) ? id : JSON.stringify(id)}`;\n    }\n  }\n};\n\nconst nullKeyFieldsFn: KeyFieldsFunction = () => void 0;\nconst simpleKeyArgsFn: KeyArgsFunction = (_args, context) => context.fieldName;\n\n// These merge functions can be selected by specifying merge:true or\n// merge:false in a field policy.\nconst mergeTrueFn: FieldMergeFunction<any> =\n  (existing, incoming, { mergeObjects }) => mergeObjects(existing, incoming);\nconst mergeFalseFn: FieldMergeFunction<any> = (_, incoming) => incoming;\n\nexport type PossibleTypesMap = {\n  [supertype: string]: string[];\n};\n\nexport class Policies {\n  private typePolicies: {\n    [__typename: string]: {\n      keyFn?: KeyFieldsFunction;\n      merge?: FieldMergeFunction<any>;\n      fields: {\n        [fieldName: string]: {\n          keyFn?: KeyArgsFunction;\n          read?: FieldReadFunction<any>;\n          merge?: FieldMergeFunction<any>;\n        };\n      };\n    };\n  } = Object.create(null);\n\n  private toBeAdded: {\n    [__typename: string]: TypePolicy[];\n  } = Object.create(null);\n\n  // Map from subtype names to sets of supertype names. Note that this\n  // representation inverts the structure of possibleTypes (whose keys are\n  // supertypes and whose values are arrays of subtypes) because it tends\n  // to be much more efficient to search upwards than downwards.\n  private supertypeMap = new Map<string, Set<string>>();\n\n  // Any fuzzy subtypes specified by possibleTypes will be converted to\n  // RegExp objects and recorded here. Every key of this map can also be\n  // found in supertypeMap. In many cases this Map will be empty, which\n  // means no fuzzy subtype checking will happen in fragmentMatches.\n  private fuzzySubtypes = new Map<string, RegExp>();\n\n  public readonly cache: InMemoryCache;\n\n  public readonly rootIdsByTypename: Record<string, string> = Object.create(null);\n  public readonly rootTypenamesById: Record<string, string> = Object.create(null);\n\n  public readonly usingPossibleTypes = false;\n\n  constructor(private config: {\n    cache: InMemoryCache;\n    dataIdFromObject?: KeyFieldsFunction;\n    possibleTypes?: PossibleTypesMap;\n    typePolicies?: TypePolicies;\n  }) {\n    this.config = {\n      dataIdFromObject: defaultDataIdFromObject,\n      ...config,\n    };\n\n    this.cache = this.config.cache;\n\n    this.setRootTypename(\"Query\");\n    this.setRootTypename(\"Mutation\");\n    this.setRootTypename(\"Subscription\");\n\n    if (config.possibleTypes) {\n      this.addPossibleTypes(config.possibleTypes);\n    }\n\n    if (config.typePolicies) {\n      this.addTypePolicies(config.typePolicies);\n    }\n  }\n\n  public identify(\n    object: StoreObject,\n    selectionSet?: SelectionSetNode,\n    fragmentMap?: FragmentMap,\n  ): [string?, StoreObject?] {\n    // TODO Use an AliasMap here?\n    const typename = selectionSet && fragmentMap\n      ? getTypenameFromResult(object, selectionSet, fragmentMap)\n      : object.__typename;\n\n    // It should be possible to write root Query fields with\n    // writeFragment, using { __typename: \"Query\", ... } as the data, but\n    // it does not make sense to allow the same identification behavior\n    // for the Mutation and Subscription types, since application code\n    // should never be writing directly to (or reading directly from)\n    // those root objects.\n    if (typename === this.rootTypenamesById.ROOT_QUERY) {\n      return [\"ROOT_QUERY\"];\n    }\n\n    const context: KeyFieldsContext = {\n      typename,\n      selectionSet,\n      fragmentMap,\n    };\n\n    let id: KeyFieldsResult;\n\n    const policy = typename && this.getTypePolicy(typename);\n    let keyFn = policy && policy.keyFn || this.config.dataIdFromObject;\n    while (keyFn) {\n      const specifierOrId = keyFn(object, context);\n      if (Array.isArray(specifierOrId)) {\n        keyFn = keyFieldsFnFromSpecifier(specifierOrId);\n      } else {\n        id = specifierOrId;\n        break;\n      }\n    }\n\n    id = id ? String(id) : void 0;\n    return context.keyObject ? [id, context.keyObject] : [id];\n  }\n\n  public addTypePolicies(typePolicies: TypePolicies) {\n    Object.keys(typePolicies).forEach(typename => {\n      const {\n        queryType,\n        mutationType,\n        subscriptionType,\n        ...incoming\n      } = typePolicies[typename];\n\n      // Though {query,mutation,subscription}Type configurations are rare,\n      // it's important to call setRootTypename as early as possible,\n      // since these configurations should apply consistently for the\n      // entire lifetime of the cache. Also, since only one __typename can\n      // qualify as one of these root types, these three properties cannot\n      // be inherited, unlike the rest of the incoming properties. That\n      // restriction is convenient, because the purpose of this.toBeAdded\n      // is to delay the processing of type/field policies until the first\n      // time they're used, allowing policies to be added in any order as\n      // long as all relevant policies (including policies for supertypes)\n      // have been added by the time a given policy is used for the first\n      // time. In other words, since inheritance doesn't matter for these\n      // properties, there's also no need to delay their processing using\n      // the this.toBeAdded queue.\n      if (queryType) this.setRootTypename(\"Query\", typename);\n      if (mutationType) this.setRootTypename(\"Mutation\", typename);\n      if (subscriptionType) this.setRootTypename(\"Subscription\", typename);\n\n      if (hasOwn.call(this.toBeAdded, typename)) {\n        this.toBeAdded[typename].push(incoming);\n      } else {\n        this.toBeAdded[typename] = [incoming];\n      }\n    });\n  }\n\n  private updateTypePolicy(typename: string, incoming: TypePolicy) {\n    const existing = this.getTypePolicy(typename);\n    const { keyFields, fields } = incoming;\n\n    function setMerge(\n      existing: { merge?: FieldMergeFunction | boolean; },\n      merge?: FieldMergeFunction | boolean,\n    ) {\n      existing.merge =\n        typeof merge === \"function\" ? merge :\n        // Pass merge:true as a shorthand for a merge implementation\n        // that returns options.mergeObjects(existing, incoming).\n        merge === true ? mergeTrueFn :\n        // Pass merge:false to make incoming always replace existing\n        // without any warnings about data clobbering.\n        merge === false ? mergeFalseFn :\n        existing.merge;\n    }\n\n    // Type policies can define merge functions, as an alternative to\n    // using field policies to merge child objects.\n    setMerge(existing, incoming.merge);\n\n    existing.keyFn =\n      // Pass false to disable normalization for this typename.\n      keyFields === false ? nullKeyFieldsFn :\n      // Pass an array of strings to use those fields to compute a\n      // composite ID for objects of this typename.\n      Array.isArray(keyFields) ? keyFieldsFnFromSpecifier(keyFields) :\n      // Pass a function to take full control over identification.\n      typeof keyFields === \"function\" ? keyFields :\n      // Leave existing.keyFn unchanged if above cases fail.\n      existing.keyFn;\n\n    if (fields) {\n      Object.keys(fields).forEach(fieldName => {\n        const existing = this.getFieldPolicy(typename, fieldName, true)!;\n        const incoming = fields[fieldName];\n\n        if (typeof incoming === \"function\") {\n          existing.read = incoming;\n        } else {\n          const { keyArgs, read, merge } = incoming;\n\n          existing.keyFn =\n            // Pass false to disable argument-based differentiation of\n            // field identities.\n            keyArgs === false ? simpleKeyArgsFn :\n            // Pass an array of strings to use named arguments to\n            // compute a composite identity for the field.\n            Array.isArray(keyArgs) ? keyArgsFnFromSpecifier(keyArgs) :\n            // Pass a function to take full control over field identity.\n            typeof keyArgs === \"function\" ? keyArgs :\n            // Leave existing.keyFn unchanged if above cases fail.\n            existing.keyFn;\n\n          if (typeof read === \"function\") {\n            existing.read = read;\n          }\n\n          setMerge(existing, merge);\n        }\n\n        if (existing.read && existing.merge) {\n          // If we have both a read and a merge function, assume\n          // keyArgs:false, because read and merge together can take\n          // responsibility for interpreting arguments in and out. This\n          // default assumption can always be overridden by specifying\n          // keyArgs explicitly in the FieldPolicy.\n          existing.keyFn = existing.keyFn || simpleKeyArgsFn;\n        }\n      });\n    }\n  }\n\n  private setRootTypename(\n    which: \"Query\" | \"Mutation\" | \"Subscription\",\n    typename: string = which,\n  ) {\n    const rootId = \"ROOT_\" + which.toUpperCase();\n    const old = this.rootTypenamesById[rootId];\n    if (typename !== old) {\n      invariant(!old || old === which, `Cannot change root ${which} __typename more than once`);\n      // First, delete any old __typename associated with this rootId from\n      // rootIdsByTypename.\n      if (old) delete this.rootIdsByTypename[old];\n      // Now make this the only __typename that maps to this rootId.\n      this.rootIdsByTypename[typename] = rootId;\n      // Finally, update the __typename associated with this rootId.\n      this.rootTypenamesById[rootId] = typename;\n    }\n  }\n\n  public addPossibleTypes(possibleTypes: PossibleTypesMap) {\n    (this.usingPossibleTypes as boolean) = true;\n    Object.keys(possibleTypes).forEach(supertype => {\n      // Make sure all types have an entry in this.supertypeMap, even if\n      // their supertype set is empty, so we can return false immediately\n      // from policies.fragmentMatches for unknown supertypes.\n      this.getSupertypeSet(supertype, true);\n\n      possibleTypes[supertype].forEach(subtype => {\n        this.getSupertypeSet(subtype, true)!.add(supertype);\n        const match = subtype.match(TypeOrFieldNameRegExp);\n        if (!match || match[0] !== subtype) {\n          // TODO Don't interpret just any invalid typename as a RegExp.\n          this.fuzzySubtypes.set(subtype, new RegExp(subtype));\n        }\n      });\n    });\n  }\n\n  private getTypePolicy(typename: string): Policies[\"typePolicies\"][string] {\n    if (!hasOwn.call(this.typePolicies, typename)) {\n      const policy: Policies[\"typePolicies\"][string] =\n        this.typePolicies[typename] = Object.create(null);\n      policy.fields = Object.create(null);\n\n      // When the TypePolicy for typename is first accessed, instead of\n      // starting with an empty policy object, inherit any properties or\n      // fields from the type policies of the supertypes of typename.\n      //\n      // Any properties or fields defined explicitly within the TypePolicy\n      // for typename will take precedence, and if there are multiple\n      // supertypes, the properties of policies whose types were added\n      // later via addPossibleTypes will take precedence over those of\n      // earlier supertypes. TODO Perhaps we should warn about these\n      // conflicts in development, and recommend defining the property\n      // explicitly in the subtype policy?\n      //\n      // Field policy inheritance is atomic/shallow: you can't inherit a\n      // field policy and then override just its read function, since read\n      // and merge functions often need to cooperate, so changing only one\n      // of them would be a recipe for inconsistency.\n      //\n      // Once the TypePolicy for typename has been accessed, its\n      // properties can still be updated directly using addTypePolicies,\n      // but future changes to supertype policies will not be reflected in\n      // this policy, because this code runs at most once per typename.\n      const supertypes = this.supertypeMap.get(typename);\n      if (supertypes && supertypes.size) {\n        supertypes.forEach(supertype => {\n          const { fields, ...rest } = this.getTypePolicy(supertype);\n          Object.assign(policy, rest);\n          Object.assign(policy.fields, fields);\n        });\n      }\n    }\n\n    const inbox = this.toBeAdded[typename];\n    if (inbox && inbox.length) {\n      // Merge the pending policies into this.typePolicies, in the order they\n      // were originally passed to addTypePolicy.\n      inbox.splice(0).forEach(policy => {\n        this.updateTypePolicy(typename, policy);\n      });\n    }\n\n    return this.typePolicies[typename];\n  }\n\n  private getFieldPolicy(\n    typename: string | undefined,\n    fieldName: string,\n    createIfMissing: boolean,\n  ): {\n    keyFn?: KeyArgsFunction;\n    read?: FieldReadFunction<any>;\n    merge?: FieldMergeFunction<any>;\n  } | undefined {\n    if (typename) {\n      const fieldPolicies = this.getTypePolicy(typename).fields;\n      return fieldPolicies[fieldName] || (\n        createIfMissing && (fieldPolicies[fieldName] = Object.create(null)));\n    }\n  }\n\n  private getSupertypeSet(\n    subtype: string,\n    createIfMissing: boolean,\n  ): Set<string> | undefined {\n    let supertypeSet = this.supertypeMap.get(subtype);\n    if (!supertypeSet && createIfMissing) {\n      this.supertypeMap.set(subtype, supertypeSet = new Set<string>());\n    }\n    return supertypeSet;\n  }\n\n  public fragmentMatches(\n    fragment: InlineFragmentNode | FragmentDefinitionNode,\n    typename: string | undefined,\n    result?: Record<string, any>,\n    variables?: Record<string, any>,\n  ): boolean {\n    if (!fragment.typeCondition) return true;\n\n    // If the fragment has a type condition but the object we're matching\n    // against does not have a __typename, the fragment cannot match.\n    if (!typename) return false;\n\n    const supertype = fragment.typeCondition.name.value;\n    // Common case: fragment type condition and __typename are the same.\n    if (typename === supertype) return true;\n\n    if (this.usingPossibleTypes &&\n        this.supertypeMap.has(supertype)) {\n      const typenameSupertypeSet = this.getSupertypeSet(typename, true)!;\n      const workQueue = [typenameSupertypeSet];\n      const maybeEnqueue = (subtype: string) => {\n        const supertypeSet = this.getSupertypeSet(subtype, false);\n        if (supertypeSet &&\n            supertypeSet.size &&\n            workQueue.indexOf(supertypeSet) < 0) {\n          workQueue.push(supertypeSet);\n        }\n      };\n\n      // We need to check fuzzy subtypes only if we encountered fuzzy\n      // subtype strings in addPossibleTypes, and only while writing to\n      // the cache, since that's when selectionSetMatchesResult gives a\n      // strong signal of fragment matching. The StoreReader class calls\n      // policies.fragmentMatches without passing a result object, so\n      // needToCheckFuzzySubtypes is always false while reading.\n      let needToCheckFuzzySubtypes = !!(result && this.fuzzySubtypes.size);\n      let checkingFuzzySubtypes = false;\n\n      // It's important to keep evaluating workQueue.length each time through\n      // the loop, because the queue can grow while we're iterating over it.\n      for (let i = 0; i < workQueue.length; ++i) {\n        const supertypeSet = workQueue[i];\n\n        if (supertypeSet.has(supertype)) {\n          if (!typenameSupertypeSet.has(supertype)) {\n            if (checkingFuzzySubtypes) {\n              invariant.warn(`Inferring subtype ${typename} of supertype ${supertype}`);\n            }\n            // Record positive results for faster future lookup.\n            // Unfortunately, we cannot safely cache negative results,\n            // because new possibleTypes data could always be added to the\n            // Policies class.\n            typenameSupertypeSet.add(supertype);\n          }\n          return true;\n        }\n\n        supertypeSet.forEach(maybeEnqueue);\n\n        if (needToCheckFuzzySubtypes &&\n            // Start checking fuzzy subtypes only after exhausting all\n            // non-fuzzy subtypes (after the final iteration of the loop).\n            i === workQueue.length - 1 &&\n            // We could wait to compare fragment.selectionSet to result\n            // after we verify the supertype, but this check is often less\n            // expensive than that search, and we will have to do the\n            // comparison anyway whenever we find a potential match.\n            selectionSetMatchesResult(fragment.selectionSet, result!, variables)) {\n          // We don't always need to check fuzzy subtypes (if no result\n          // was provided, or !this.fuzzySubtypes.size), but, when we do,\n          // we only want to check them once.\n          needToCheckFuzzySubtypes = false;\n          checkingFuzzySubtypes = true;\n\n          // If we find any fuzzy subtypes that match typename, extend the\n          // workQueue to search through the supertypes of those fuzzy\n          // subtypes. Otherwise the for-loop will terminate and we'll\n          // return false below.\n          this.fuzzySubtypes.forEach((regExp, fuzzyString) => {\n            const match = typename.match(regExp);\n            if (match && match[0] === typename) {\n              maybeEnqueue(fuzzyString);\n            }\n          });\n        }\n      }\n    }\n\n    return false;\n  }\n\n  public hasKeyArgs(typename: string | undefined, fieldName: string) {\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    return !!(policy && policy.keyFn);\n  }\n\n  public getStoreFieldName(fieldSpec: FieldSpecifier): string {\n    const { typename, fieldName } = fieldSpec;\n    const policy = this.getFieldPolicy(typename, fieldName, false);\n    let storeFieldName: KeyArgsResult;\n\n    let keyFn = policy && policy.keyFn;\n    if (keyFn && typename) {\n      const context: Parameters<KeyArgsFunction>[1] = {\n        typename,\n        fieldName,\n        field: fieldSpec.field || null,\n        variables: fieldSpec.variables,\n      };\n      const args = argsFromFieldSpecifier(fieldSpec);\n      while (keyFn) {\n        const specifierOrString = keyFn(args, context);\n        if (Array.isArray(specifierOrString)) {\n          keyFn = keyArgsFnFromSpecifier(specifierOrString);\n        } else {\n          // If the custom keyFn returns a falsy value, fall back to\n          // fieldName instead.\n          storeFieldName = specifierOrString || fieldName;\n          break;\n        }\n      }\n    }\n\n    if (storeFieldName === void 0) {\n      storeFieldName = fieldSpec.field\n        ? storeKeyNameFromField(fieldSpec.field, fieldSpec.variables)\n        : getStoreKeyName(fieldName, argsFromFieldSpecifier(fieldSpec));\n    }\n\n    // Returning false from a keyArgs function is like configuring\n    // keyArgs: false, but more dynamic.\n    if (storeFieldName === false) {\n      return fieldName;\n    }\n\n    // Make sure custom field names start with the actual field.name.value\n    // of the field, so we can always figure out which properties of a\n    // StoreObject correspond to which original field names.\n    return fieldName === fieldNameFromStoreName(storeFieldName)\n      ? storeFieldName\n      : fieldName + \":\" + storeFieldName;\n  }\n\n  public readField<V = StoreValue>(\n    options: ReadFieldOptions,\n    context: ReadMergeModifyContext,\n  ): SafeReadonly<V> | undefined {\n    const objectOrReference = options.from;\n    if (!objectOrReference) return;\n\n    const nameOrField = options.field || options.fieldName;\n    if (!nameOrField) return;\n\n    if (options.typename === void 0) {\n      const typename = context.store.getFieldValue<string>(objectOrReference, \"__typename\");\n      if (typename) options.typename = typename;\n    }\n\n    const storeFieldName = this.getStoreFieldName(options);\n    const fieldName = fieldNameFromStoreName(storeFieldName);\n    const existing = context.store.getFieldValue<V>(objectOrReference, storeFieldName);\n    const policy = this.getFieldPolicy(options.typename, fieldName, false);\n    const read = policy && policy.read;\n\n    if (read) {\n      const readOptions = makeFieldFunctionOptions(\n        this,\n        objectOrReference,\n        options,\n        context,\n        context.store.getStorage(\n          isReference(objectOrReference)\n            ? objectOrReference.__ref\n            : objectOrReference,\n          storeFieldName,\n        ),\n      );\n\n      // Call read(existing, readOptions) with cacheSlot holding this.cache.\n      return cacheSlot.withValue(\n        this.cache,\n        read,\n        [existing, readOptions],\n      ) as SafeReadonly<V>;\n    }\n\n    return existing;\n  }\n\n  public getMergeFunction(\n    parentTypename: string | undefined,\n    fieldName: string,\n    childTypename: string | undefined,\n  ): FieldMergeFunction | undefined {\n    let policy:\n      | Policies[\"typePolicies\"][string]\n      | Policies[\"typePolicies\"][string][\"fields\"][string]\n      | undefined =\n      this.getFieldPolicy(parentTypename, fieldName, false);\n    let merge = policy && policy.merge;\n    if (!merge && childTypename) {\n      policy = this.getTypePolicy(childTypename);\n      merge = policy && policy.merge;\n    }\n    return merge;\n  }\n\n  public runMergeFunction(\n    existing: StoreValue,\n    incoming: StoreValue,\n    { field, typename, merge }: MergeInfo,\n    context: WriteContext,\n    storage?: StorageType,\n  ) {\n    if (merge === mergeTrueFn) {\n      // Instead of going to the trouble of creating a full\n      // FieldFunctionOptions object and calling mergeTrueFn, we can\n      // simply call mergeObjects, as mergeTrueFn would.\n      return makeMergeObjectsFunction(\n        context.store,\n      )(existing as StoreObject,\n        incoming as StoreObject);\n    }\n\n    if (merge === mergeFalseFn) {\n      // Likewise for mergeFalseFn, whose implementation is even simpler.\n      return incoming;\n    }\n\n    // If cache.writeQuery or cache.writeFragment was called with\n    // options.overwrite set to true, we still call merge functions, but\n    // the existing data is always undefined, so the merge function will\n    // not attempt to combine the incoming data with the existing data.\n    if (context.overwrite) {\n      existing = void 0;\n    }\n\n    return merge(existing, incoming, makeFieldFunctionOptions(\n      this,\n      // Unlike options.readField for read functions, we do not fall\n      // back to the current object if no foreignObjOrRef is provided,\n      // because it's not clear what the current object should be for\n      // merge functions: the (possibly undefined) existing object, or\n      // the incoming object? If you think your merge function needs\n      // to read sibling fields in order to produce a new value for\n      // the current field, you might want to rethink your strategy,\n      // because that's a recipe for making merge behavior sensitive\n      // to the order in which fields are written into the cache.\n      // However, readField(name, ref) is useful for merge functions\n      // that need to deduplicate child objects and references.\n      void 0,\n      { typename,\n        fieldName: field.name.value,\n        field,\n        variables: context.variables },\n      context,\n      storage || Object.create(null),\n    ));\n  }\n}\n\nfunction makeFieldFunctionOptions(\n  policies: Policies,\n  objectOrReference: StoreObject | Reference | undefined,\n  fieldSpec: FieldSpecifier,\n  context: ReadMergeModifyContext,\n  storage: StorageType,\n): FieldFunctionOptions {\n  const storeFieldName = policies.getStoreFieldName(fieldSpec);\n  const fieldName = fieldNameFromStoreName(storeFieldName);\n  const variables = fieldSpec.variables || context.variables;\n  const { toReference, canRead } = context.store;\n\n  return {\n    args: argsFromFieldSpecifier(fieldSpec),\n    field: fieldSpec.field || null,\n    fieldName,\n    storeFieldName,\n    variables,\n    isReference,\n    toReference,\n    storage,\n    cache: policies.cache,\n    canRead,\n\n    readField<T>(\n      fieldNameOrOptions: string | ReadFieldOptions,\n      from?: StoreObject | Reference,\n    ) {\n      let options: ReadFieldOptions;\n      if (typeof fieldNameOrOptions === \"string\") {\n        options = {\n          fieldName: fieldNameOrOptions,\n          // Default to objectOrReference only when no second argument was\n          // passed for the from parameter, not when undefined is explicitly\n          // passed as the second argument.\n          from: arguments.length > 1 ? from : objectOrReference,\n        };\n      } else if (isNonNullObject(fieldNameOrOptions)) {\n        options = { ...fieldNameOrOptions };\n        // Default to objectOrReference only when fieldNameOrOptions.from is\n        // actually omitted, rather than just undefined.\n        if (!hasOwn.call(fieldNameOrOptions, \"from\")) {\n          options.from = objectOrReference;\n        }\n      } else {\n        invariant.warn(`Unexpected readField arguments: ${\n          stringifyForDisplay(Array.from(arguments))\n        }`);\n        // The readField helper function returns undefined for any missing\n        // fields, so it should also return undefined if the arguments were not\n        // of a type we expected.\n        return;\n      }\n\n      if (__DEV__ && options.from === void 0) {\n        invariant.warn(`Undefined 'from' passed to readField with arguments ${\n          stringifyForDisplay(Array.from(arguments))\n        }`);\n      }\n\n      if (void 0 === options.variables) {\n        options.variables = variables;\n      }\n\n      return policies.readField<T>(options, context);\n    },\n\n    mergeObjects: makeMergeObjectsFunction(context.store),\n  };\n}\n\nfunction makeMergeObjectsFunction(\n  store: NormalizedCache,\n): MergeObjectsFunction {\n  return function mergeObjects(existing, incoming) {\n    if (Array.isArray(existing) || Array.isArray(incoming)) {\n      throw new InvariantError(\"Cannot automatically merge arrays\");\n    }\n\n    // These dynamic checks are necessary because the parameters of a\n    // custom merge function can easily have the any type, so the type\n    // system cannot always enforce the StoreObject | Reference parameter\n    // types of options.mergeObjects.\n    if (isNonNullObject(existing) &&\n        isNonNullObject(incoming)) {\n      const eType = store.getFieldValue(existing, \"__typename\");\n      const iType = store.getFieldValue(incoming, \"__typename\");\n      const typesDiffer = eType && iType && eType !== iType;\n\n      if (typesDiffer) {\n        return incoming;\n      }\n\n      if (isReference(existing) &&\n          storeValueIsStoreObject(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // existing.__ref, preferring/overwriting any fields contributed by the\n        // newer incoming StoreObject.\n        store.merge(existing.__ref, incoming);\n        return existing;\n      }\n\n      if (storeValueIsStoreObject(existing) &&\n          isReference(incoming)) {\n        // Update the normalized EntityStore for the entity identified by\n        // incoming.__ref, taking fields from the older existing object only if\n        // those fields are not already present in the newer StoreObject\n        // identified by incoming.__ref.\n        store.merge(existing, incoming.__ref);\n        return incoming;\n      }\n\n      if (storeValueIsStoreObject(existing) &&\n          storeValueIsStoreObject(incoming)) {\n        return { ...existing, ...incoming };\n      }\n    }\n\n    return incoming;\n  };\n}\n\nfunction keyArgsFnFromSpecifier(\n  specifier: KeySpecifier,\n): KeyArgsFunction {\n  return (args, context) => {\n    return args ? `${context.fieldName}:${\n      JSON.stringify(computeKeyObject(args, specifier, false))\n    }` : context.fieldName;\n  };\n}\n\nfunction keyFieldsFnFromSpecifier(\n  specifier: KeySpecifier,\n): KeyFieldsFunction {\n  const trie = new Trie<{\n    aliasMap?: AliasMap;\n  }>(canUseWeakMap);\n\n  return (object, context) => {\n    let aliasMap: AliasMap | undefined;\n    if (context.selectionSet && context.fragmentMap) {\n      const info = trie.lookupArray([\n        context.selectionSet,\n        context.fragmentMap,\n      ]);\n      aliasMap = info.aliasMap || (\n        info.aliasMap = makeAliasMap(context.selectionSet, context.fragmentMap)\n      );\n    }\n\n    const keyObject = context.keyObject =\n      computeKeyObject(object, specifier, true, aliasMap);\n\n    return `${context.typename}:${JSON.stringify(keyObject)}`;\n  };\n}\n\ntype AliasMap = {\n  // Map from store key to corresponding response key. Undefined when there are\n  // no aliased fields in this selection set.\n  aliases?: Record<string, string>;\n  // Map from store key to AliasMap correponding to a child selection set.\n  // Undefined when there are no child selection sets.\n  subsets?: Record<string, AliasMap>;\n};\n\nfunction makeAliasMap(\n  selectionSet: SelectionSetNode,\n  fragmentMap: FragmentMap,\n): AliasMap {\n  let map: AliasMap = Object.create(null);\n  // TODO Cache this work, perhaps by storing selectionSet._aliasMap?\n  const workQueue = new Set([selectionSet]);\n  workQueue.forEach(selectionSet => {\n    selectionSet.selections.forEach(selection => {\n      if (isField(selection)) {\n        if (selection.alias) {\n          const responseKey = selection.alias.value;\n          const storeKey = selection.name.value;\n          if (storeKey !== responseKey) {\n            const aliases = map.aliases || (map.aliases = Object.create(null));\n            aliases[storeKey] = responseKey;\n          }\n        }\n        if (selection.selectionSet) {\n          const subsets = map.subsets || (map.subsets = Object.create(null));\n          subsets[selection.name.value] =\n            makeAliasMap(selection.selectionSet, fragmentMap);\n        }\n      } else {\n        const fragment = getFragmentFromSelection(selection, fragmentMap);\n        if (fragment) {\n          workQueue.add(fragment.selectionSet);\n        }\n      }\n    });\n  });\n  return map;\n}\n\nfunction computeKeyObject(\n  response: Record<string, any>,\n  specifier: KeySpecifier,\n  strict: boolean,\n  aliasMap?: AliasMap,\n): Record<string, any> {\n  // The order of adding properties to keyObj affects its JSON serialization,\n  // so we are careful to build keyObj in the order of keys given in\n  // specifier.\n  const keyObj = Object.create(null);\n\n  // The lastResponseKey variable tracks keys as seen in actual GraphQL response\n  // objects, potentially affected by aliasing. The lastActualKey variable\n  // tracks the corresponding key after removing aliases.\n  let lastResponseKey: string | undefined;\n  let lastActualKey: string | undefined;\n\n  specifier.forEach(s => {\n    if (Array.isArray(s)) {\n      if (typeof lastActualKey === \"string\" &&\n          typeof lastResponseKey === \"string\") {\n        const subsets = aliasMap && aliasMap.subsets;\n        const subset = subsets && subsets[lastActualKey];\n        keyObj[lastActualKey] =\n          computeKeyObject(response[lastResponseKey], s, strict, subset);\n      }\n    } else {\n      const aliases = aliasMap && aliasMap.aliases;\n      const responseName = aliases && aliases[s] || s;\n      if (hasOwn.call(response, responseName)) {\n        keyObj[lastActualKey = s] = response[lastResponseKey = responseName];\n      } else {\n        invariant(!strict, `Missing field '${responseName}' while computing key fields`);\n        lastResponseKey = lastActualKey = void 0;\n      }\n    }\n  });\n  return keyObj;\n}\n", "// Make builtins like Map and Set safe to use with non-extensible objects.\nimport './fixPolyfills';\n\nimport { DocumentNode } from 'graphql';\nimport { OptimisticWrapperFunction, wrap } from 'optimism';\nimport { equal } from '@wry/equality';\n\nimport { ApolloCache } from '../core/cache';\nimport { Cache } from '../core/types/Cache';\nimport { MissingFieldError } from '../core/types/common';\nimport {\n  addTypenameToDocument,\n  StoreObject,\n  Reference,\n  isReference,\n} from '../../utilities';\nimport {\n  ApolloReducerConfig,\n  NormalizedCacheObject,\n} from './types';\nimport { StoreReader } from './readFromStore';\nimport { StoreWriter } from './writeToStore';\nimport { EntityStore, supportsResultCaching } from './entityStore';\nimport { makeVar, forgetCache, recallCache } from './reactiveVars';\nimport {\n  defaultDataIdFromObject,\n  PossibleTypesMap,\n  Policies,\n  TypePolicies,\n} from './policies';\nimport { hasOwn } from './helpers';\nimport { canonicalStringify } from './object-canon';\n\nexport interface InMemoryCacheConfig extends ApolloReducerConfig {\n  resultCaching?: boolean;\n  possibleTypes?: PossibleTypesMap;\n  typePolicies?: TypePolicies;\n  resultCacheMaxSize?: number;\n}\n\ntype BroadcastOptions = Pick<\n  Cache.BatchOptions<InMemoryCache>,\n  | \"optimistic\"\n  | \"onWatchUpdated\"\n>\n\nconst defaultConfig: InMemoryCacheConfig = {\n  dataIdFromObject: defaultDataIdFromObject,\n  addTypename: true,\n  resultCaching: true,\n  typePolicies: {},\n};\n\nexport class InMemoryCache extends ApolloCache<NormalizedCacheObject> {\n  private data: EntityStore;\n  private optimisticData: EntityStore;\n\n  protected config: InMemoryCacheConfig;\n  private watches = new Set<Cache.WatchOptions>();\n  private addTypename: boolean;\n\n  private typenameDocumentCache = new Map<DocumentNode, DocumentNode>();\n  private storeReader: StoreReader;\n  private storeWriter: StoreWriter;\n\n  private maybeBroadcastWatch: OptimisticWrapperFunction<\n    [Cache.WatchOptions, BroadcastOptions?],\n    any,\n    [Cache.WatchOptions]>;\n\n  // Dynamically imported code can augment existing typePolicies or\n  // possibleTypes by calling cache.policies.addTypePolicies or\n  // cache.policies.addPossibletypes.\n  public readonly policies: Policies;\n\n  public readonly makeVar = makeVar;\n\n  constructor(config: InMemoryCacheConfig = {}) {\n    super();\n    this.config = { ...defaultConfig, ...config };\n    this.addTypename = !!this.config.addTypename;\n\n    this.policies = new Policies({\n      cache: this,\n      dataIdFromObject: this.config.dataIdFromObject,\n      possibleTypes: this.config.possibleTypes,\n      typePolicies: this.config.typePolicies,\n    });\n\n    this.init();\n  }\n\n  private init() {\n    // Passing { resultCaching: false } in the InMemoryCache constructor options\n    // will completely disable dependency tracking, which will improve memory\n    // usage but worsen the performance of repeated reads.\n    const rootStore = this.data = new EntityStore.Root({\n      policies: this.policies,\n      resultCaching: this.config.resultCaching,\n    });\n\n    // When no optimistic writes are currently active, cache.optimisticData ===\n    // cache.data, so there are no additional layers on top of the actual data.\n    // When an optimistic update happens, this.optimisticData will become a\n    // linked list of EntityStore Layer objects that terminates with the\n    // original this.data cache object.\n    this.optimisticData = rootStore.stump;\n\n    this.resetResultCache();\n  }\n\n  private resetResultCache(resetResultIdentities?: boolean) {\n    const previousReader = this.storeReader;\n\n    // The StoreWriter is mostly stateless and so doesn't really need to be\n    // reset, but it does need to have its writer.storeReader reference updated,\n    // so it's simpler to update this.storeWriter as well.\n    this.storeWriter = new StoreWriter(\n      this,\n      this.storeReader = new StoreReader({\n        cache: this,\n        addTypename: this.addTypename,\n        resultCacheMaxSize: this.config.resultCacheMaxSize,\n        canon: resetResultIdentities\n          ? void 0\n          : previousReader && previousReader.canon,\n      }),\n    );\n\n    this.maybeBroadcastWatch = wrap((\n      c: Cache.WatchOptions,\n      options?: BroadcastOptions,\n    ) => {\n      return this.broadcastWatch(c, options);\n    }, {\n      max: this.config.resultCacheMaxSize,\n      makeCacheKey: (c: Cache.WatchOptions) => {\n        // Return a cache key (thus enabling result caching) only if we're\n        // currently using a data store that can track cache dependencies.\n        const store = c.optimistic ? this.optimisticData : this.data;\n        if (supportsResultCaching(store)) {\n          const { optimistic, rootId, variables } = c;\n          return store.makeCacheKey(\n            c.query,\n            // Different watches can have the same query, optimistic\n            // status, rootId, and variables, but if their callbacks are\n            // different, the (identical) result needs to be delivered to\n            // each distinct callback. The easiest way to achieve that\n            // separation is to include c.callback in the cache key for\n            // maybeBroadcastWatch calls. See issue #5733.\n            c.callback,\n            canonicalStringify({ optimistic, rootId, variables }),\n          );\n        }\n      }\n    });\n\n    // Since we have thrown away all the cached functions that depend on the\n    // CacheGroup dependencies maintained by EntityStore, we should also reset\n    // all CacheGroup dependency information.\n    new Set([\n      this.data.group,\n      this.optimisticData.group,\n    ]).forEach(group => group.resetCaching());\n  }\n\n  public restore(data: NormalizedCacheObject): this {\n    this.init();\n    // Since calling this.init() discards/replaces the entire StoreReader, along\n    // with the result caches it maintains, this.data.replace(data) won't have\n    // to bother deleting the old data.\n    if (data) this.data.replace(data);\n    return this;\n  }\n\n  public extract(optimistic: boolean = false): NormalizedCacheObject {\n    return (optimistic ? this.optimisticData : this.data).extract();\n  }\n\n  public read<T>(options: Cache.ReadOptions): T | null {\n    const {\n      // Since read returns data or null, without any additional metadata\n      // about whether/where there might have been missing fields, the\n      // default behavior cannot be returnPartialData = true (like it is\n      // for the diff method), since defaulting to true would violate the\n      // integrity of the T in the return type. However, partial data may\n      // be useful in some cases, so returnPartialData:true may be\n      // specified explicitly.\n      returnPartialData = false,\n    } = options;\n    try {\n      return this.storeReader.diffQueryAgainstStore<T>({\n        ...options,\n        store: options.optimistic ? this.optimisticData : this.data,\n        config: this.config,\n        returnPartialData,\n      }).result || null;\n    } catch (e) {\n      if (e instanceof MissingFieldError) {\n        // Swallow MissingFieldError and return null, so callers do not\n        // need to worry about catching \"normal\" exceptions resulting from\n        // incomplete cache data. Unexpected errors will be re-thrown. If\n        // you need more information about which fields were missing, use\n        // cache.diff instead, and examine diffResult.missing.\n        return null;\n      }\n      throw e;\n    }\n  }\n\n  public write(options: Cache.WriteOptions): Reference | undefined {\n    try {\n      ++this.txCount;\n      return this.storeWriter.writeToStore(this.data, options);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public modify(options: Cache.ModifyOptions): boolean {\n    if (hasOwn.call(options, \"id\") && !options.id) {\n      // To my knowledge, TypeScript does not currently provide a way to\n      // enforce that an optional property?:type must *not* be undefined\n      // when present. That ability would be useful here, because we want\n      // options.id to default to ROOT_QUERY only when no options.id was\n      // provided. If the caller attempts to pass options.id with a\n      // falsy/undefined value (perhaps because cache.identify failed), we\n      // should not assume the goal was to modify the ROOT_QUERY object.\n      // We could throw, but it seems natural to return false to indicate\n      // that nothing was modified.\n      return false;\n    }\n    const store = options.optimistic // Defaults to false.\n      ? this.optimisticData\n      : this.data;\n    try {\n      ++this.txCount;\n      return store.modify(options.id || \"ROOT_QUERY\", options.fields);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public diff<T>(options: Cache.DiffOptions): Cache.DiffResult<T> {\n    return this.storeReader.diffQueryAgainstStore({\n      ...options,\n      store: options.optimistic ? this.optimisticData : this.data,\n      rootId: options.id || \"ROOT_QUERY\",\n      config: this.config,\n    });\n  }\n\n  public watch(watch: Cache.WatchOptions): () => void {\n    if (!this.watches.size) {\n      // In case we previously called forgetCache(this) because\n      // this.watches became empty (see below), reattach this cache to any\n      // reactive variables on which it previously depended. It might seem\n      // paradoxical that we're able to recall something we supposedly\n      // forgot, but the point of calling forgetCache(this) is to silence\n      // useless broadcasts while this.watches is empty, and to allow the\n      // cache to be garbage collected. If, however, we manage to call\n      // recallCache(this) here, this cache object must not have been\n      // garbage collected yet, and should resume receiving updates from\n      // reactive variables, now that it has a watcher to notify.\n      recallCache(this);\n    }\n    this.watches.add(watch);\n    if (watch.immediate) {\n      this.maybeBroadcastWatch(watch);\n    }\n    return () => {\n      // Once we remove the last watch from this.watches, cache.broadcastWatches\n      // no longer does anything, so we preemptively tell the reactive variable\n      // system to exclude this cache from future broadcasts.\n      if (this.watches.delete(watch) && !this.watches.size) {\n        forgetCache(this);\n      }\n      // Remove this watch from the LRU cache managed by the\n      // maybeBroadcastWatch OptimisticWrapperFunction, to prevent memory\n      // leaks involving the closure of watch.callback.\n      this.maybeBroadcastWatch.forget(watch);\n    };\n  }\n\n  public gc(options?: {\n    // If true, also free non-essential result cache memory by bulk-releasing\n    // this.{store{Reader,Writer},maybeBroadcastWatch}. Defaults to false.\n    resetResultCache?: boolean;\n    // If resetResultCache is true, this.storeReader.canon will be preserved by\n    // default, but can also be discarded by passing resetResultIdentities:true.\n    // Defaults to false.\n    resetResultIdentities?: boolean;\n  }) {\n    canonicalStringify.reset();\n    const ids = this.optimisticData.gc();\n    if (options && !this.txCount) {\n      if (options.resetResultCache) {\n        this.resetResultCache(options.resetResultIdentities);\n      } else if (options.resetResultIdentities) {\n        this.storeReader.resetCanon();\n      }\n    }\n    return ids;\n  }\n\n  // Call this method to ensure the given root ID remains in the cache after\n  // garbage collection, along with its transitive child entities. Note that\n  // the cache automatically retains all directly written entities. By default,\n  // the retainment persists after optimistic updates are removed. Pass true\n  // for the optimistic argument if you would prefer for the retainment to be\n  // discarded when the top-most optimistic layer is removed. Returns the\n  // resulting (non-negative) retainment count.\n  public retain(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).retain(rootId);\n  }\n\n  // Call this method to undo the effect of the retain method, above. Once the\n  // retainment count falls to zero, the given ID will no longer be preserved\n  // during garbage collection, though it may still be preserved by other safe\n  // entities that refer to it. Returns the resulting (non-negative) retainment\n  // count, in case that's useful.\n  public release(rootId: string, optimistic?: boolean): number {\n    return (optimistic ? this.optimisticData : this.data).release(rootId);\n  }\n\n  // Returns the canonical ID for a given StoreObject, obeying typePolicies\n  // and keyFields (and dataIdFromObject, if you still use that). At minimum,\n  // the object must contain a __typename and any primary key fields required\n  // to identify entities of that type. If you pass a query result object, be\n  // sure that none of the primary key fields have been renamed by aliasing.\n  // If you pass a Reference object, its __ref ID string will be returned.\n  public identify(object: StoreObject | Reference): string | undefined {\n    return isReference(object) ? object.__ref :\n      this.policies.identify(object)[0];\n  }\n\n  public evict(options: Cache.EvictOptions): boolean {\n    if (!options.id) {\n      if (hasOwn.call(options, \"id\")) {\n        // See comment in modify method about why we return false when\n        // options.id exists but is falsy/undefined.\n        return false;\n      }\n      options = { ...options, id: \"ROOT_QUERY\" };\n    }\n    try {\n      // It's unlikely that the eviction will end up invoking any other\n      // cache update operations while it's running, but {in,de}crementing\n      // this.txCount still seems like a good idea, for uniformity with\n      // the other update methods.\n      ++this.txCount;\n      return this.optimisticData.evict(options);\n    } finally {\n      if (!--this.txCount && options.broadcast !== false) {\n        this.broadcastWatches();\n      }\n    }\n  }\n\n  public reset(): Promise<void> {\n    this.init();\n    this.broadcastWatches();\n    canonicalStringify.reset();\n    return Promise.resolve();\n  }\n\n  public removeOptimistic(idToRemove: string) {\n    const newOptimisticData = this.optimisticData.removeLayer(idToRemove);\n    if (newOptimisticData !== this.optimisticData) {\n      this.optimisticData = newOptimisticData;\n      this.broadcastWatches();\n    }\n  }\n\n  private txCount = 0;\n\n  public batch(options: Cache.BatchOptions<InMemoryCache>) {\n    const {\n      update,\n      optimistic = true,\n      removeOptimistic,\n      onWatchUpdated,\n    } = options;\n\n    const perform = (layer?: EntityStore) => {\n      const { data, optimisticData } = this;\n      ++this.txCount;\n      if (layer) {\n        this.data = this.optimisticData = layer;\n      }\n      try {\n        update(this);\n      } finally {\n        --this.txCount;\n        this.data = data;\n        this.optimisticData = optimisticData;\n      }\n    };\n\n    const alreadyDirty = new Set<Cache.WatchOptions>();\n\n    if (onWatchUpdated && !this.txCount) {\n      // If an options.onWatchUpdated callback is provided, we want to call it\n      // with only the Cache.WatchOptions objects affected by options.update,\n      // but there might be dirty watchers already waiting to be broadcast that\n      // have nothing to do with the update. To prevent including those watchers\n      // in the post-update broadcast, we perform this initial broadcast to\n      // collect the dirty watchers, so we can re-dirty them later, after the\n      // post-update broadcast, allowing them to receive their pending\n      // broadcasts the next time broadcastWatches is called, just as they would\n      // if we never called cache.batch.\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch) {\n          alreadyDirty.add(watch);\n          return false;\n        },\n      });\n    }\n\n    if (typeof optimistic === 'string') {\n      // Note that there can be multiple layers with the same optimistic ID.\n      // When removeOptimistic(id) is called for that id, all matching layers\n      // will be removed, and the remaining layers will be reapplied.\n      this.optimisticData = this.optimisticData.addLayer(optimistic, perform);\n    } else if (optimistic === false) {\n      // Ensure both this.data and this.optimisticData refer to the root\n      // (non-optimistic) layer of the cache during the update. Note that\n      // this.data could be a Layer if we are currently executing an optimistic\n      // update function, but otherwise will always be an EntityStore.Root\n      // instance.\n      perform(this.data);\n    } else {\n      // Otherwise, leave this.data and this.optimisticData unchanged and run\n      // the update with broadcast batching.\n      perform();\n    }\n\n    if (typeof removeOptimistic === \"string\") {\n      this.optimisticData = this.optimisticData.removeLayer(removeOptimistic);\n    }\n\n    // Note: if this.txCount > 0, then alreadyDirty.size === 0, so this code\n    // takes the else branch and calls this.broadcastWatches(options), which\n    // does nothing when this.txCount > 0.\n    if (onWatchUpdated && alreadyDirty.size) {\n      this.broadcastWatches({\n        ...options,\n        onWatchUpdated(watch, diff) {\n          const result = onWatchUpdated.call(this, watch, diff);\n          if (result !== false) {\n            // Since onWatchUpdated did not return false, this diff is\n            // about to be broadcast to watch.callback, so we don't need\n            // to re-dirty it with the other alreadyDirty watches below.\n            alreadyDirty.delete(watch);\n          }\n          return result;\n        }\n      });\n      // Silently re-dirty any watches that were already dirty before the update\n      // was performed, and were not broadcast just now.\n      if (alreadyDirty.size) {\n        alreadyDirty.forEach(watch => this.maybeBroadcastWatch.dirty(watch));\n      }\n    } else {\n      // If alreadyDirty is empty or we don't have an onWatchUpdated\n      // function, we don't need to go to the trouble of wrapping\n      // options.onWatchUpdated.\n      this.broadcastWatches(options);\n    }\n  }\n\n  public performTransaction(\n    update: (cache: InMemoryCache) => any,\n    optimisticId?: string | null,\n  ) {\n    return this.batch({\n      update,\n      optimistic: optimisticId || (optimisticId !== null),\n    });\n  }\n\n  public transformDocument(document: DocumentNode): DocumentNode {\n    if (this.addTypename) {\n      let result = this.typenameDocumentCache.get(document);\n      if (!result) {\n        result = addTypenameToDocument(document);\n        this.typenameDocumentCache.set(document, result);\n        // If someone calls transformDocument and then mistakenly passes the\n        // result back into an API that also calls transformDocument, make sure\n        // we don't keep creating new query documents.\n        this.typenameDocumentCache.set(result, result);\n      }\n      return result;\n    }\n    return document;\n  }\n\n  protected broadcastWatches(options?: BroadcastOptions) {\n    if (!this.txCount) {\n      this.watches.forEach(c => this.maybeBroadcastWatch(c, options));\n    }\n  }\n\n  // This method is wrapped by maybeBroadcastWatch, which is called by\n  // broadcastWatches, so that we compute and broadcast results only when\n  // the data that would be broadcast might have changed. It would be\n  // simpler to check for changes after recomputing a result but before\n  // broadcasting it, but this wrapping approach allows us to skip both\n  // the recomputation and the broadcast, in most cases.\n  private broadcastWatch(\n    c: Cache.WatchOptions,\n    options?: BroadcastOptions,\n  ) {\n    const { lastDiff } = c;\n    const diff = this.diff<any>({\n      query: c.query,\n      variables: c.variables,\n      optimistic: c.optimistic,\n    });\n\n    if (options) {\n      if (c.optimistic &&\n          typeof options.optimistic === \"string\") {\n        diff.fromOptimisticTransaction = true;\n      }\n\n      if (options.onWatchUpdated &&\n          options.onWatchUpdated.call(this, c, diff, lastDiff) === false) {\n        // Returning false from the onWatchUpdated callback will prevent\n        // calling c.callback(diff) for this watcher.\n        return;\n      }\n    }\n\n    if (!lastDiff || !equal(lastDiff.result, diff.result)) {\n      c.callback(c.lastDiff = diff, lastDiff);\n    }\n  }\n}\n", "import { invariant } from \"ts-invariant\";\nimport { DEV } from \"../utilities\";\ninvariant(\"boolean\" === typeof DEV, DEV);\n\nexport { Transaction, ApolloCache } from './core/cache';\nexport { Cache } from './core/types/Cache';\nexport { DataProxy } from './core/types/DataProxy';\nexport {\n  MissingFieldError,\n  ReadFieldOptions\n} from './core/types/common';\n\nexport {\n  Reference,\n  isReference,\n  makeReference,\n} from '../utilities';\n\nexport { EntityStore } from './inmemory/entityStore';\nexport { fieldNameFromStoreName } from './inmemory/helpers'\n\nexport {\n  InMemoryCache,\n  InMemoryCacheConfig,\n} from './inmemory/inMemoryCache';\n\nexport {\n  ReactiveVar,\n  makeVar,\n  cacheSlot,\n} from './inmemory/reactiveVars';\n\nexport {\n  defaultDataIdFromObject,\n  TypePolicies,\n  TypePolicy,\n  FieldPolicy,\n  FieldReadFunction,\n  FieldMergeFunction,\n  FieldFunctionOptions,\n  PossibleTypesMap,\n  Policies,\n} from './inmemory/policies';\n\nexport {\n  canonicalStringify,\n} from './inmemory/object-canon';\n\nexport * from './inmemory/types';\n", "import { invariant } from \"ts-invariant\";\nimport { DEV } from \"../utilities\";\ninvariant(\"boolean\" === typeof DEV, DEV);\n\nimport { GraphQLError } from 'graphql';\n\nimport { isNonEmptyArray } from '../utilities';\nimport { ServerParseError } from '../link/http';\nimport { ServerError } from '../link/utils';\n\nexport function isApolloError(err: Error): err is ApolloError {\n  return err.hasOwnProperty('graphQLErrors');\n}\n\n// Sets the error message on this error according to the\n// the GraphQL and network errors that are present.\n// If the error message has already been set through the\n// constructor or otherwise, this function is a nop.\nconst generateErrorMessage = (err: ApolloError) => {\n  let message = '';\n  // If we have GraphQL errors present, add that to the error message.\n  if (isNonEmptyArray(err.graphQLErrors) || isNonEmptyArray(err.clientErrors)) {\n    const errors = ((err.graphQLErrors || []) as readonly Error[])\n      .concat(err.clientErrors || []);\n    errors.forEach((error: Error) => {\n      const errorMessage = error\n        ? error.message\n        : 'Error message not found.';\n      message += `${errorMessage}\\n`;\n    });\n  }\n\n  if (err.networkError) {\n    message += `${err.networkError.message}\\n`;\n  }\n\n  // strip newline from the end of the message\n  message = message.replace(/\\n$/, '');\n  return message;\n};\n\nexport class ApolloError extends Error {\n  public message: string;\n  public graphQLErrors: ReadonlyArray<GraphQLError>;\n  public clientErrors: ReadonlyArray<Error>;\n  public networkError: Error | ServerParseError | ServerError | null;\n\n  // An object that can be used to provide some additional information\n  // about an error, e.g. specifying the type of error this is. Used\n  // internally within Apollo Client.\n  public extraInfo: any;\n\n  // Constructs an instance of ApolloError given a GraphQLError\n  // or a network error. Note that one of these has to be a valid\n  // value or the constructed error will be meaningless.\n  constructor({\n    graphQLErrors,\n    clientErrors,\n    networkError,\n    errorMessage,\n    extraInfo,\n  }: {\n    graphQLErrors?: ReadonlyArray<GraphQLError>;\n    clientErrors?: ReadonlyArray<Error>;\n    networkError?: Error | ServerParseError | ServerError | null;\n    errorMessage?: string;\n    extraInfo?: any;\n  }) {\n    super(errorMessage);\n    this.graphQLErrors = graphQLErrors || [];\n    this.clientErrors = clientErrors || [];\n    this.networkError = networkError || null;\n    this.message = errorMessage || generateErrorMessage(this);\n    this.extraInfo = extraInfo;\n\n    // We're not using `Object.setPrototypeOf` here as it isn't fully\n    // supported on Android (see issue #3236).\n    (this as any).__proto__ = ApolloError.prototype;\n  }\n}\n", "/**\n * The current status of a query\u2019s execution in our system.\n */\nexport enum NetworkStatus {\n  /**\n   * The query has never been run before and the query is now currently running. A query will still\n   * have this network status even if a partial data result was returned from the cache, but a\n   * query was dispatched anyway.\n   */\n  loading = 1,\n\n  /**\n   * If `setVariables` was called and a query was fired because of that then the network status\n   * will be `setVariables` until the result of that query comes back.\n   */\n  setVariables = 2,\n\n  /**\n   * Indicates that `fetchMore` was called on this query and that the query created is currently in\n   * flight.\n   */\n  fetchMore = 3,\n\n  /**\n   * Similar to the `setVariables` network status. It means that `refetch` was called on a query\n   * and the refetch request is currently in flight.\n   */\n  refetch = 4,\n\n  /**\n   * Indicates that a polling query is currently in flight. So for example if you are polling a\n   * query every 10 seconds then the network status will switch to `poll` every 10 seconds whenever\n   * a poll request has been sent but not resolved.\n   */\n  poll = 6,\n\n  /**\n   * No request is in flight for this query, and no errors happened. Everything is OK.\n   */\n  ready = 7,\n\n  /**\n   * No request is in flight for this query, but one or more errors were detected.\n   */\n  error = 8,\n}\n\n/**\n * Returns true if there is currently a network request in flight according to a given network\n * status.\n */\nexport function isNetworkRequestInFlight(\n  networkStatus?: NetworkStatus,\n): boolean {\n  return networkStatus ? networkStatus < 7 : false;\n}\n", "import { invariant } from 'ts-invariant';\nimport { equal } from '@wry/equality';\n\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  Concast,\n  compact,\n  cloneDeep,\n  getOperationDefinition,\n  Observable,\n  Observer,\n  ObservableSubscription,\n  iterateObserversSafely,\n  isNonEmptyArray,\n  fixObservableSubclass,\n} from '../utilities';\nimport { ApolloError } from '../errors';\nimport { QueryManager } from './QueryManager';\nimport { ApolloQueryResult, OperationVariables } from './types';\nimport {\n  WatchQueryOptions,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n  WatchQueryFetchPolicy,\n} from './watchQueryOptions';\nimport { QueryInfo } from './QueryInfo';\nimport { MissingFieldError } from '../cache';\n\nexport interface FetchMoreOptions<\n  TData = any,\n  TVariables = OperationVariables\n> {\n  updateQuery?: (\n    previousQueryResult: TData,\n    options: {\n      fetchMoreResult?: TData;\n      variables?: TVariables;\n    },\n  ) => TData;\n}\n\nexport interface UpdateQueryOptions<TVariables> {\n  variables?: TVariables;\n}\n\nlet warnedAboutUpdateQuery = false;\n\ninterface Last<TData, TVariables> {\n  result: ApolloQueryResult<TData>;\n  variables?: TVariables;\n  error?: ApolloError;\n}\n\nexport class ObservableQuery<\n  TData = any,\n  TVariables = OperationVariables\n> extends Observable<ApolloQueryResult<TData>> {\n  public readonly options: WatchQueryOptions<TVariables, TData>;\n  public readonly queryId: string;\n  public readonly queryName?: string;\n\n  // Computed shorthand for this.options.variables, preserved for\n  // backwards compatibility.\n  public get variables(): TVariables | undefined {\n    return this.options.variables;\n  }\n\n  // Original value of this.options.fetchPolicy (defaulting to \"cache-first\"),\n  // from whenever the ObservableQuery was first created.\n  private initialFetchPolicy: WatchQueryFetchPolicy;\n\n  private isTornDown: boolean;\n  private queryManager: QueryManager<any>;\n  private observers = new Set<Observer<ApolloQueryResult<TData>>>();\n  private subscriptions = new Set<ObservableSubscription>();\n\n  private last?: Last<TData, TVariables>;\n\n  private queryInfo: QueryInfo;\n\n  // When this.concast is defined, this.observer is the Observer currently\n  // subscribed to that Concast.\n  private concast?: Concast<ApolloQueryResult<TData>>;\n  private observer?: Observer<ApolloQueryResult<TData>>;\n\n  private pollingInfo?: {\n    interval: number;\n    timeout: ReturnType<typeof setTimeout>;\n  };\n\n  constructor({\n    queryManager,\n    queryInfo,\n    options,\n  }: {\n    queryManager: QueryManager<any>;\n    queryInfo: QueryInfo;\n    options: WatchQueryOptions<TVariables, TData>;\n  }) {\n    super((observer: Observer<ApolloQueryResult<TData>>) => {\n      // Zen Observable has its own error function, so in order to log correctly\n      // we need to provide a custom error callback.\n      try {\n        var subObserver = (observer as any)._subscription._observer;\n        if (subObserver && !subObserver.error) {\n          subObserver.error = defaultSubscriptionObserverErrorCallback;\n        }\n      } catch {}\n\n      const first = !this.observers.size;\n      this.observers.add(observer);\n\n      // Deliver most recent error or result.\n      const last = this.last;\n      if (last && last.error) {\n        observer.error && observer.error(last.error);\n      } else if (last && last.result) {\n        observer.next && observer.next(last.result);\n      }\n\n      // Initiate observation of this query if it hasn't been reported to\n      // the QueryManager yet.\n      if (first) {\n        // Blindly catching here prevents unhandled promise rejections,\n        // and is safe because the ObservableQuery handles this error with\n        // this.observer.error, so we're not just swallowing the error by\n        // ignoring it here.\n        this.reobserve().catch(() => {});\n      }\n\n      return () => {\n        if (this.observers.delete(observer) && !this.observers.size) {\n          this.tearDownQuery();\n        }\n      };\n    });\n\n    // active state\n    this.isTornDown = false;\n\n    // query information\n    this.options = options;\n    this.queryId = queryInfo.queryId || queryManager.generateQueryId();\n\n    const opDef = getOperationDefinition(options.query);\n    this.queryName = opDef && opDef.name && opDef.name.value;\n\n    this.initialFetchPolicy = options.fetchPolicy || \"cache-first\";\n\n    // related classes\n    this.queryManager = queryManager;\n    this.queryInfo = queryInfo;\n  }\n\n  public result(): Promise<ApolloQueryResult<TData>> {\n    return new Promise((resolve, reject) => {\n      // TODO: this code doesn\u2019t actually make sense insofar as the observer\n      // will never exist in this.observers due how zen-observable wraps observables.\n      // https://github.com/zenparsing/zen-observable/blob/master/src/Observable.js#L169\n      const observer: Observer<ApolloQueryResult<TData>> = {\n        next: (result: ApolloQueryResult<TData>) => {\n          resolve(result);\n\n          // Stop the query within the QueryManager if we can before\n          // this function returns.\n          //\n          // We do this in order to prevent observers piling up within\n          // the QueryManager. Notice that we only fully unsubscribe\n          // from the subscription in a setTimeout(..., 0)  call. This call can\n          // actually be handled by the browser at a much later time. If queries\n          // are fired in the meantime, observers that should have been removed\n          // from the QueryManager will continue to fire, causing an unnecessary\n          // performance hit.\n          this.observers.delete(observer);\n          if (!this.observers.size) {\n            this.queryManager.removeQuery(this.queryId);\n          }\n\n          setTimeout(() => {\n            subscription.unsubscribe();\n          }, 0);\n        },\n        error: reject,\n      };\n      const subscription = this.subscribe(observer);\n    });\n  }\n\n  public getCurrentResult(saveAsLastResult = true): ApolloQueryResult<TData> {\n    // Use the last result as long as the variables match this.variables.\n    const lastResult = this.getLastResult(true);\n\n    const networkStatus =\n      this.queryInfo.networkStatus ||\n      (lastResult && lastResult.networkStatus) ||\n      NetworkStatus.ready;\n\n    const result = {\n      ...lastResult,\n      loading: isNetworkRequestInFlight(networkStatus),\n      networkStatus,\n    } as ApolloQueryResult<TData>;\n\n    // If this.options.query has @client(always: true) fields, we cannot trust\n    // diff.result, since it was read from the cache without running local\n    // resolvers (and it's too late to run resolvers now, since we must return a\n    // result synchronously).\n    if (!this.queryManager.transform(this.options.query).hasForcedResolvers) {\n      const diff = this.queryInfo.getDiff();\n\n      if (diff.complete || this.options.returnPartialData) {\n        result.data = diff.result;\n      }\n      if (equal(result.data, {})) {\n        result.data = void 0 as any;\n      }\n\n      const { fetchPolicy = \"cache-first\" } = this.options;\n      if (diff.complete) {\n        // If the diff is complete, and we're using a FetchPolicy that\n        // terminates after a complete cache read, we can assume the next\n        // result we receive will have NetworkStatus.ready and !loading.\n        if (result.networkStatus === NetworkStatus.loading &&\n            (fetchPolicy === 'cache-first' ||\n             fetchPolicy === 'cache-only')) {\n          result.networkStatus = NetworkStatus.ready;\n          result.loading = false;\n        }\n        delete result.partial;\n      } else if (fetchPolicy !== \"no-cache\") {\n        // Since result.partial comes from diff.complete, and we shouldn't be\n        // using cache data to provide a DiffResult when the fetchPolicy is\n        // \"no-cache\", avoid annotating result.partial for \"no-cache\" results.\n        result.partial = true;\n      }\n\n      if (\n        __DEV__ &&\n        !diff.complete &&\n        !this.options.partialRefetch &&\n        !result.loading &&\n        !result.data &&\n        !result.error\n      ) {\n        logMissingFieldErrors(diff.missing);\n      }\n    }\n\n    if (saveAsLastResult) {\n      this.updateLastResult(result);\n    }\n\n    return result;\n  }\n\n  // Compares newResult to the snapshot we took of this.lastResult when it was\n  // first received.\n  public isDifferentFromLastResult(newResult: ApolloQueryResult<TData>) {\n    return !this.last || !equal(this.last.result, newResult);\n  }\n\n  private getLast<K extends keyof Last<TData, TVariables>>(\n    key: K,\n    variablesMustMatch?: boolean,\n  ) {\n    const last = this.last;\n    if (last &&\n        last[key] &&\n        (!variablesMustMatch || equal(last!.variables, this.variables))) {\n      return last[key];\n    }\n  }\n\n  public getLastResult(variablesMustMatch?: boolean): ApolloQueryResult<TData> | undefined {\n    return this.getLast(\"result\", variablesMustMatch);\n  }\n\n  public getLastError(variablesMustMatch?: boolean): ApolloError | undefined {\n    return this.getLast(\"error\", variablesMustMatch);\n  }\n\n  public resetLastResults(): void {\n    delete this.last;\n    this.isTornDown = false;\n  }\n\n  public resetQueryStoreErrors() {\n    this.queryManager.resetErrors(this.queryId);\n  }\n\n  /**\n   * Update the variables of this observable query, and fetch the new results.\n   * This method should be preferred over `setVariables` in most use cases.\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public refetch(variables?: Partial<TVariables>): Promise<ApolloQueryResult<TData>> {\n    const reobserveOptions: Partial<WatchQueryOptions<TVariables, TData>> = {\n      // Always disable polling for refetches.\n      pollInterval: 0,\n    };\n\n    // Unless the provided fetchPolicy always consults the network\n    // (no-cache, network-only, or cache-and-network), override it with\n    // network-only to force the refetch for this fetchQuery call.\n    const { fetchPolicy } = this.options;\n    if (fetchPolicy === 'no-cache') {\n      reobserveOptions.fetchPolicy = 'no-cache';\n    } else if (fetchPolicy !== 'cache-and-network') {\n      reobserveOptions.fetchPolicy = 'network-only';\n    }\n\n    if (variables && !equal(this.options.variables, variables)) {\n      // Update the existing options with new variables\n      reobserveOptions.variables = this.options.variables = {\n        ...this.options.variables,\n        ...variables,\n      } as TVariables;\n    }\n\n    this.queryInfo.resetLastWrite();\n    return this.reobserve(reobserveOptions, NetworkStatus.refetch);\n  }\n\n  public fetchMore(\n    fetchMoreOptions: FetchMoreQueryOptions<TVariables, TData> &\n      FetchMoreOptions<TData, TVariables>,\n  ): Promise<ApolloQueryResult<TData>> {\n    const combinedOptions = {\n      ...(fetchMoreOptions.query ? fetchMoreOptions : {\n        ...this.options,\n        ...fetchMoreOptions,\n        variables: {\n          ...this.options.variables,\n          ...fetchMoreOptions.variables,\n        },\n      }),\n      // The fetchMore request goes immediately to the network and does\n      // not automatically write its result to the cache (hence no-cache\n      // instead of network-only), because we allow the caller of\n      // fetchMore to provide an updateQuery callback that determines how\n      // the data gets written to the cache.\n      fetchPolicy: \"no-cache\",\n    } as WatchQueryOptions;\n\n    const qid = this.queryManager.generateQueryId();\n\n    // Simulate a loading result for the original query with\n    // result.networkStatus === NetworkStatus.fetchMore.\n    if (combinedOptions.notifyOnNetworkStatusChange) {\n      this.queryInfo.networkStatus = NetworkStatus.fetchMore;\n      this.observe();\n    }\n\n    return this.queryManager.fetchQuery(\n      qid,\n      combinedOptions,\n      NetworkStatus.fetchMore,\n    ).then(fetchMoreResult => {\n      const data = fetchMoreResult.data as TData;\n      const { updateQuery } = fetchMoreOptions;\n\n      if (updateQuery) {\n        if (__DEV__ &&\n            !warnedAboutUpdateQuery) {\n          invariant.warn(\n`The updateQuery callback for fetchMore is deprecated, and will be removed\nin the next major version of Apollo Client.\n\nPlease convert updateQuery functions to field policies with appropriate\nread and merge functions, or use/adapt a helper function (such as\nconcatPagination, offsetLimitPagination, or relayStylePagination) from\n@apollo/client/utilities.\n\nThe field policy system handles pagination more effectively than a\nhand-written updateQuery function, and you only need to define the policy\nonce, rather than every time you call fetchMore.`);\n          warnedAboutUpdateQuery = true;\n        }\n        this.updateQuery(previous => updateQuery(previous, {\n          fetchMoreResult: data,\n          variables: combinedOptions.variables as TVariables,\n        }));\n      } else {\n        // If we're using a field policy instead of updateQuery, the only\n        // thing we need to do is write the new data to the cache using\n        // combinedOptions.variables (instead of this.variables, which is\n        // what this.updateQuery uses, because it works by abusing the\n        // original field value, keyed by the original variables).\n        this.queryManager.cache.writeQuery({\n          query: combinedOptions.query,\n          variables: combinedOptions.variables,\n          data,\n        });\n      }\n\n      return fetchMoreResult as ApolloQueryResult<TData>;\n\n    }).finally(() => {\n      this.queryManager.stopQuery(qid);\n      this.reobserve();\n    });\n  }\n\n  // XXX the subscription variables are separate from the query variables.\n  // if you want to update subscription variables, right now you have to do that separately,\n  // and you can only do it by stopping the subscription and then subscribing again with new variables.\n  public subscribeToMore<\n    TSubscriptionData = TData,\n    TSubscriptionVariables = TVariables\n  >(\n    options: SubscribeToMoreOptions<\n      TData,\n      TSubscriptionVariables,\n      TSubscriptionData\n    >,\n  ) {\n    const subscription = this.queryManager\n      .startGraphQLSubscription({\n        query: options.document,\n        variables: options.variables,\n        context: options.context,\n      })\n      .subscribe({\n        next: (subscriptionData: { data: TSubscriptionData }) => {\n          const { updateQuery } = options;\n          if (updateQuery) {\n            this.updateQuery<TSubscriptionVariables>(\n              (previous, { variables }) =>\n                updateQuery(previous, {\n                  subscriptionData,\n                  variables,\n                }),\n            );\n          }\n        },\n        error: (err: any) => {\n          if (options.onError) {\n            options.onError(err);\n            return;\n          }\n          invariant.error('Unhandled GraphQL subscription error', err);\n        },\n      });\n\n    this.subscriptions.add(subscription);\n\n    return () => {\n      if (this.subscriptions.delete(subscription)) {\n        subscription.unsubscribe();\n      }\n    };\n  }\n\n  public setOptions(\n    newOptions: Partial<WatchQueryOptions<TVariables, TData>>,\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.reobserve(newOptions);\n  }\n\n  /**\n   * This is for *internal* use only. Most users should instead use `refetch`\n   * in order to be properly notified of results even when they come from cache.\n   *\n   * Update the variables of this observable query, and fetch the new results\n   * if they've changed. If you want to force new results, use `refetch`.\n   *\n   * Note: the `next` callback will *not* fire if the variables have not changed\n   * or if the result is coming from cache.\n   *\n   * Note: the promise will return the old results immediately if the variables\n   * have not changed.\n   *\n   * Note: the promise will return null immediately if the query is not active\n   * (there are no subscribers).\n   *\n   * @private\n   *\n   * @param variables: The new set of variables. If there are missing variables,\n   * the previous values of those variables will be used.\n   */\n  public setVariables(\n    variables: TVariables,\n  ): Promise<ApolloQueryResult<TData> | void> {\n    if (equal(this.variables, variables)) {\n      // If we have no observers, then we don't actually want to make a network\n      // request. As soon as someone observes the query, the request will kick\n      // off. For now, we just store any changes. (See #1077)\n      return this.observers.size\n        ? this.result()\n        : Promise.resolve();\n    }\n\n    this.options.variables = variables;\n\n    // See comment above\n    if (!this.observers.size) {\n      return Promise.resolve();\n    }\n\n    return this.reobserve({\n      // Reset options.fetchPolicy to its original value.\n      fetchPolicy: this.initialFetchPolicy,\n      variables,\n    }, NetworkStatus.setVariables);\n  }\n\n  public updateQuery<TVars = TVariables>(\n    mapFn: (\n      previousQueryResult: TData,\n      options: Pick<WatchQueryOptions<TVars, TData>, \"variables\">,\n    ) => TData,\n  ): void {\n    const { queryManager } = this;\n    const { result } = queryManager.cache.diff<TData>({\n      query: this.options.query,\n      variables: this.variables,\n      returnPartialData: true,\n      optimistic: false,\n    });\n\n    const newResult = mapFn(result!, {\n      variables: (this as any).variables,\n    });\n\n    if (newResult) {\n      queryManager.cache.writeQuery({\n        query: this.options.query,\n        data: newResult,\n        variables: this.variables,\n      });\n\n      queryManager.broadcastQueries();\n    }\n  }\n\n  public startPolling(pollInterval: number) {\n    this.options.pollInterval = pollInterval;\n    this.updatePolling();\n  }\n\n  public stopPolling() {\n    this.options.pollInterval = 0;\n    this.updatePolling();\n  }\n\n  private fetch(\n    options: WatchQueryOptions<TVariables, TData>,\n    newNetworkStatus?: NetworkStatus,\n  ): Concast<ApolloQueryResult<TData>> {\n    this.queryManager.setObservableQuery(this);\n    return this.queryManager.fetchQueryObservable(\n      this.queryId,\n      options,\n      newNetworkStatus,\n    );\n  }\n\n  // Turns polling on or off based on this.options.pollInterval.\n  private updatePolling() {\n    // Avoid polling in SSR mode\n    if (this.queryManager.ssrMode) {\n      return;\n    }\n\n    const {\n      pollingInfo,\n      options: {\n        pollInterval,\n      },\n    } = this;\n\n    if (!pollInterval) {\n      if (pollingInfo) {\n        clearTimeout(pollingInfo.timeout);\n        delete this.pollingInfo;\n      }\n      return;\n    }\n\n    if (pollingInfo &&\n        pollingInfo.interval === pollInterval) {\n      return;\n    }\n\n    invariant(\n      pollInterval,\n      'Attempted to start a polling query without a polling interval.',\n    );\n\n    const info = pollingInfo || (this.pollingInfo = {} as any);\n    info.interval = pollInterval;\n\n    const maybeFetch = () => {\n      if (this.pollingInfo) {\n        if (!isNetworkRequestInFlight(this.queryInfo.networkStatus)) {\n          this.reobserve({\n            fetchPolicy: \"network-only\",\n          }, NetworkStatus.poll).then(poll, poll);\n        } else {\n          poll();\n        }\n      };\n    };\n\n    const poll = () => {\n      const info = this.pollingInfo;\n      if (info) {\n        clearTimeout(info.timeout);\n        info.timeout = setTimeout(maybeFetch, info.interval);\n      }\n    };\n\n    poll();\n  }\n\n  private updateLastResult(\n    newResult: ApolloQueryResult<TData>,\n    variables = this.variables,\n  ) {\n    this.last = {\n      ...this.last,\n      result: this.queryManager.assumeImmutableResults\n        ? newResult\n        : cloneDeep(newResult),\n      variables,\n    };\n    if (!isNonEmptyArray(newResult.errors)) {\n      delete this.last.error;\n    }\n    return this.last;\n  }\n\n  public reobserve(\n    newOptions?: Partial<WatchQueryOptions<TVariables, TData>>,\n    newNetworkStatus?: NetworkStatus,\n  ): Promise<ApolloQueryResult<TData>> {\n    this.isTornDown = false;\n\n    const useDisposableConcast =\n      // Refetching uses a disposable Concast to allow refetches using different\n      // options/variables, without permanently altering the options of the\n      // original ObservableQuery.\n      newNetworkStatus === NetworkStatus.refetch ||\n      // The fetchMore method does not actually call the reobserve method, but,\n      // if it did, it would definitely use a disposable Concast.\n      newNetworkStatus === NetworkStatus.fetchMore ||\n      // Polling uses a disposable Concast so the polling options (which force\n      // fetchPolicy to be \"network-only\") won't override the original options.\n      newNetworkStatus === NetworkStatus.poll;\n\n    // Save the old variables, since Object.assign may modify them below.\n    const oldVariables = this.options.variables;\n\n    const options = useDisposableConcast\n      // Disposable Concast fetches receive a shallow copy of this.options\n      // (merged with newOptions), leaving this.options unmodified.\n      ? compact(this.options, newOptions)\n      : Object.assign(this.options, compact(newOptions));\n\n    if (!useDisposableConcast) {\n      // We can skip calling updatePolling if we're not changing this.options.\n      this.updatePolling();\n\n      // Reset options.fetchPolicy to its original value when variables change,\n      // unless a new fetchPolicy was provided by newOptions.\n      if (\n        newOptions &&\n        newOptions.variables &&\n        !newOptions.fetchPolicy &&\n        !equal(newOptions.variables, oldVariables)\n      ) {\n        options.fetchPolicy = this.initialFetchPolicy;\n        if (newNetworkStatus === void 0) {\n          newNetworkStatus = NetworkStatus.setVariables;\n        }\n      }\n    }\n\n    const variables = options.variables && { ...options.variables };\n    const concast = this.fetch(options, newNetworkStatus);\n    const observer: Observer<ApolloQueryResult<TData>> = {\n      next: result => {\n        this.reportResult(result, variables);\n      },\n      error: error => {\n        this.reportError(error, variables);\n      },\n    };\n\n    if (!useDisposableConcast) {\n      // We use the {add,remove}Observer methods directly to avoid wrapping\n      // observer with an unnecessary SubscriptionObserver object, in part so\n      // that we can remove it here without triggering any unsubscriptions,\n      // because we just want to ignore the old observable, not prematurely shut\n      // it down, since other consumers may be awaiting this.concast.promise.\n      if (this.concast && this.observer) {\n        this.concast.removeObserver(this.observer, true);\n      }\n\n      this.concast = concast;\n      this.observer = observer;\n    }\n\n    concast.addObserver(observer);\n\n    return concast.promise;\n  }\n\n  // Pass the current result to this.observer.next without applying any\n  // fetch policies.\n  private observe() {\n    // Passing false is important so that this.getCurrentResult doesn't\n    // save the fetchMore result as this.lastResult, causing it to be\n    // ignored due to the this.isDifferentFromLastResult check in\n    // this.observer.next.\n    this.reportResult(\n      this.getCurrentResult(false),\n      this.variables,\n    );\n  }\n\n  private reportResult(\n    result: ApolloQueryResult<TData>,\n    variables: TVariables | undefined,\n  ) {\n    if (this.getLastError() || this.isDifferentFromLastResult(result)) {\n      this.updateLastResult(result, variables);\n      iterateObserversSafely(this.observers, 'next', result);\n    }\n  }\n\n  private reportError(\n    error: ApolloError,\n    variables: TVariables | undefined,\n  ) {\n    // Since we don't get the current result on errors, only the error, we\n    // must mirror the updates that occur in QueryStore.markQueryError here\n    const errorResult = {\n      ...this.getLastResult(),\n      error,\n      errors: error.graphQLErrors,\n      networkStatus: NetworkStatus.error,\n      loading: false,\n    } as ApolloQueryResult<TData>;\n\n    this.updateLastResult(errorResult, variables);\n\n    iterateObserversSafely(this.observers, 'error', this.last!.error = error);\n  }\n\n  public hasObservers() {\n    return this.observers.size > 0;\n  }\n\n  private tearDownQuery() {\n    if (this.isTornDown) return;\n    if (this.concast && this.observer) {\n      this.concast.removeObserver(this.observer);\n      delete this.concast;\n      delete this.observer;\n    }\n\n    this.stopPolling();\n    // stop all active GraphQL subscriptions\n    this.subscriptions.forEach(sub => sub.unsubscribe());\n    this.subscriptions.clear();\n    this.queryManager.stopQuery(this.queryId);\n    this.observers.clear();\n    this.isTornDown = true;\n  }\n}\n\n// Necessary because the ObservableQuery constructor has a different\n// signature than the Observable constructor.\nfixObservableSubclass(ObservableQuery);\n\nfunction defaultSubscriptionObserverErrorCallback(error: ApolloError) {\n  invariant.error('Unhandled error', error.message, error.stack);\n}\n\nexport function logMissingFieldErrors(\n  missing: MissingFieldError[] | undefined,\n) {\n  if (__DEV__ && isNonEmptyArray(missing)) {\n    invariant.debug(`Missing cache result fields: ${\n      missing.map(m => m.path.join('.')).join(', ')\n    }`, missing);\n  }\n}\n\n// Adopt options.nextFetchPolicy (if defined) as a replacement for\n// options.fetchPolicy. Since this method also removes options.nextFetchPolicy\n// from options, the adoption tends to be idempotent, unless nextFetchPolicy\n// is a function that keeps setting options.nextFetchPolicy (uncommon).\nexport function applyNextFetchPolicy<TData, TVars>(\n  options: Pick<\n    WatchQueryOptions<TVars, TData>,\n    | \"fetchPolicy\"\n    | \"nextFetchPolicy\"\n  >,\n) {\n  const {\n    fetchPolicy = \"cache-first\",\n    nextFetchPolicy,\n  } = options;\n\n  if (nextFetchPolicy) {\n    // When someone chooses \"cache-and-network\" or \"network-only\" as their\n    // initial FetchPolicy, they often do not want future cache updates to\n    // trigger unconditional network requests, which is what repeatedly\n    // applying the \"cache-and-network\" or \"network-only\" policies would seem\n    // to imply. Instead, when the cache reports an update after the initial\n    // network request, it may be desirable for subsequent network requests to\n    // be triggered only if the cache result is incomplete. To that end, the\n    // options.nextFetchPolicy option provides an easy way to update\n    // options.fetchPolicy after the intial network request, without having to\n    // call observableQuery.setOptions.\n    options.fetchPolicy = typeof nextFetchPolicy === \"function\"\n      ? nextFetchPolicy.call(options, fetchPolicy)\n      : nextFetchPolicy;\n  }\n}\n", "import {\n  DocumentNode,\n  OperationDefinitionNode,\n  SelectionSetNode,\n  SelectionNode,\n  InlineFragmentNode,\n  FragmentDefinitionNode,\n  FieldNode,\n  ASTNode,\n  visit,\n  BREAK,\n} from 'graphql';\nimport { invariant } from 'ts-invariant';\n\nimport { ApolloCache } from '../cache';\nimport {\n  FragmentMap,\n  StoreObject,\n  argumentsObjectFromField,\n  buildQueryFromSelectionSet,\n  createFragmentMap,\n  getFragmentDefinitions,\n  getMainDefinition,\n  hasDirectives,\n  isField,\n  isInlineFragment,\n  mergeDeep,\n  mergeDeepArray,\n  removeClientSetsFromDocument,\n  resultKeyNameFromField,\n  shouldInclude,\n} from '../utilities';\nimport { ApolloClient } from './ApolloClient';\nimport { Resolvers, OperationVariables } from './types';\nimport { FetchResult } from '../link/core';\nimport { cacheSlot } from '../cache';\n\nexport type Resolver = (\n  rootValue?: any,\n  args?: any,\n  context?: any,\n  info?: {\n    field: FieldNode;\n    fragmentMap: FragmentMap;\n  },\n) => any;\n\nexport type VariableMap = { [name: string]: any };\n\nexport type FragmentMatcher = (\n  rootValue: any,\n  typeCondition: string,\n  context: any,\n) => boolean;\n\nexport type ExecContext = {\n  fragmentMap: FragmentMap;\n  context: any;\n  variables: VariableMap;\n  fragmentMatcher: FragmentMatcher;\n  defaultOperationType: string;\n  exportedVariables: Record<string, any>;\n  onlyRunForcedResolvers: boolean;\n};\n\nexport type LocalStateOptions<TCacheShape> = {\n  cache: ApolloCache<TCacheShape>;\n  client?: ApolloClient<TCacheShape>;\n  resolvers?: Resolvers | Resolvers[];\n  fragmentMatcher?: FragmentMatcher;\n};\n\nexport class LocalState<TCacheShape> {\n  private cache: ApolloCache<TCacheShape>;\n  private client: ApolloClient<TCacheShape>;\n  private resolvers?: Resolvers;\n  private fragmentMatcher: FragmentMatcher;\n\n  constructor({\n    cache,\n    client,\n    resolvers,\n    fragmentMatcher,\n  }: LocalStateOptions<TCacheShape>) {\n    this.cache = cache;\n\n    if (client) {\n      this.client = client;\n    }\n\n    if (resolvers) {\n      this.addResolvers(resolvers);\n    }\n\n    if (fragmentMatcher) {\n      this.setFragmentMatcher(fragmentMatcher);\n    }\n  }\n\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = this.resolvers || {};\n    if (Array.isArray(resolvers)) {\n      resolvers.forEach(resolverGroup => {\n        this.resolvers = mergeDeep(this.resolvers, resolverGroup);\n      });\n    } else {\n      this.resolvers = mergeDeep(this.resolvers, resolvers);\n    }\n  }\n\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.resolvers = {};\n    this.addResolvers(resolvers);\n  }\n\n  public getResolvers() {\n    return this.resolvers || {};\n  }\n\n  // Run local client resolvers against the incoming query and remote data.\n  // Locally resolved field values are merged with the incoming remote data,\n  // and returned. Note that locally resolved fields will overwrite\n  // remote data using the same field name.\n  public async runResolvers<TData>({\n    document,\n    remoteResult,\n    context,\n    variables,\n    onlyRunForcedResolvers = false,\n  }: {\n    document: DocumentNode | null;\n    remoteResult: FetchResult<TData>;\n    context?: Record<string, any>;\n    variables?: Record<string, any>;\n    onlyRunForcedResolvers?: boolean;\n  }): Promise<FetchResult<TData>> {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        remoteResult.data,\n        context,\n        variables,\n        this.fragmentMatcher,\n        onlyRunForcedResolvers,\n      ).then(localResult => ({\n        ...remoteResult,\n        data: localResult.result,\n      }));\n    }\n\n    return remoteResult;\n  }\n\n  public setFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.fragmentMatcher = fragmentMatcher;\n  }\n\n  public getFragmentMatcher(): FragmentMatcher {\n    return this.fragmentMatcher;\n  }\n\n  // Client queries contain everything in the incoming document (if a @client\n  // directive is found).\n  public clientQuery(document: DocumentNode) {\n    if (hasDirectives(['client'], document)) {\n      if (this.resolvers) {\n        return document;\n      }\n    }\n    return null;\n  }\n\n  // Server queries are stripped of all @client based selection sets.\n  public serverQuery(document: DocumentNode) {\n    return removeClientSetsFromDocument(document);\n  }\n\n  public prepareContext(context?: Record<string, any>) {\n    const { cache } = this;\n    return {\n      ...context,\n      cache,\n      // Getting an entry's cache key is useful for local state resolvers.\n      getCacheKey(obj: StoreObject) {\n        return cache.identify(obj);\n      },\n    };\n  }\n\n  // To support `@client @export(as: \"someVar\")` syntax, we'll first resolve\n  // @client @export fields locally, then pass the resolved values back to be\n  // used alongside the original operation variables.\n  public async addExportedVariables(\n    document: DocumentNode,\n    variables: OperationVariables = {},\n    context = {},\n  ) {\n    if (document) {\n      return this.resolveDocument(\n        document,\n        this.buildRootValueFromCache(document, variables) || {},\n        this.prepareContext(context),\n        variables,\n      ).then(data => ({\n        ...variables,\n        ...data.exportedVariables,\n      }));\n    }\n\n    return {\n      ...variables,\n    };\n  }\n\n  public shouldForceResolvers(document: ASTNode) {\n    let forceResolvers = false;\n    visit(document, {\n      Directive: {\n        enter(node) {\n          if (node.name.value === 'client' && node.arguments) {\n            forceResolvers = node.arguments.some(\n              arg =>\n                arg.name.value === 'always' &&\n                arg.value.kind === 'BooleanValue' &&\n                arg.value.value === true,\n            );\n            if (forceResolvers) {\n              return BREAK;\n            }\n          }\n        },\n      },\n    });\n    return forceResolvers;\n  }\n\n  // Query the cache and return matching data.\n  private buildRootValueFromCache(\n    document: DocumentNode,\n    variables?: Record<string, any>,\n  ) {\n    return this.cache.diff({\n      query: buildQueryFromSelectionSet(document),\n      variables,\n      returnPartialData: true,\n      optimistic: false,\n    }).result;\n  }\n\n  private async resolveDocument<TData>(\n    document: DocumentNode,\n    rootValue: TData,\n    context: any = {},\n    variables: VariableMap = {},\n    fragmentMatcher: FragmentMatcher = () => true,\n    onlyRunForcedResolvers: boolean = false,\n  ) {\n    const mainDefinition = getMainDefinition(document);\n    const fragments = getFragmentDefinitions(document);\n    const fragmentMap = createFragmentMap(fragments);\n\n    const definitionOperation = (mainDefinition as OperationDefinitionNode)\n      .operation;\n\n    const defaultOperationType = definitionOperation\n      ? definitionOperation.charAt(0).toUpperCase() +\n        definitionOperation.slice(1)\n      : 'Query';\n\n    const { cache, client } = this;\n    const execContext: ExecContext = {\n      fragmentMap,\n      context: {\n        ...context,\n        cache,\n        client,\n      },\n      variables,\n      fragmentMatcher,\n      defaultOperationType,\n      exportedVariables: {},\n      onlyRunForcedResolvers,\n    };\n\n    return this.resolveSelectionSet(\n      mainDefinition.selectionSet,\n      rootValue,\n      execContext,\n    ).then(result => ({\n      result,\n      exportedVariables: execContext.exportedVariables,\n    }));\n  }\n\n  private async resolveSelectionSet<TData>(\n    selectionSet: SelectionSetNode,\n    rootValue: TData,\n    execContext: ExecContext,\n  ) {\n    const { fragmentMap, context, variables } = execContext;\n    const resultsToMerge: TData[] = [rootValue];\n\n    const execute = async (selection: SelectionNode): Promise<void> => {\n      if (!shouldInclude(selection, variables)) {\n        // Skip this entirely.\n        return;\n      }\n\n      if (isField(selection)) {\n        return this.resolveField(selection, rootValue, execContext).then(\n          fieldResult => {\n            if (typeof fieldResult !== 'undefined') {\n              resultsToMerge.push({\n                [resultKeyNameFromField(selection)]: fieldResult,\n              } as TData);\n            }\n          },\n        );\n      }\n\n      let fragment: InlineFragmentNode | FragmentDefinitionNode;\n\n      if (isInlineFragment(selection)) {\n        fragment = selection;\n      } else {\n        // This is a named fragment.\n        fragment = fragmentMap[selection.name.value];\n        invariant(fragment, `No fragment named ${selection.name.value}`);\n      }\n\n      if (fragment && fragment.typeCondition) {\n        const typeCondition = fragment.typeCondition.name.value;\n        if (execContext.fragmentMatcher(rootValue, typeCondition, context)) {\n          return this.resolveSelectionSet(\n            fragment.selectionSet,\n            rootValue,\n            execContext,\n          ).then(fragmentResult => {\n            resultsToMerge.push(fragmentResult);\n          });\n        }\n      }\n    };\n\n    return Promise.all(selectionSet.selections.map(execute)).then(function() {\n      return mergeDeepArray(resultsToMerge);\n    });\n  }\n\n  private async resolveField(\n    field: FieldNode,\n    rootValue: any,\n    execContext: ExecContext,\n  ): Promise<any> {\n    const { variables } = execContext;\n    const fieldName = field.name.value;\n    const aliasedFieldName = resultKeyNameFromField(field);\n    const aliasUsed = fieldName !== aliasedFieldName;\n    const defaultResult = rootValue[aliasedFieldName] || rootValue[fieldName];\n    let resultPromise = Promise.resolve(defaultResult);\n\n    // Usually all local resolvers are run when passing through here, but\n    // if we've specifically identified that we only want to run forced\n    // resolvers (that is, resolvers for fields marked with\n    // `@client(always: true)`), then we'll skip running non-forced resolvers.\n    if (\n      !execContext.onlyRunForcedResolvers ||\n      this.shouldForceResolvers(field)\n    ) {\n      const resolverType =\n        rootValue.__typename || execContext.defaultOperationType;\n      const resolverMap = this.resolvers && this.resolvers[resolverType];\n      if (resolverMap) {\n        const resolve = resolverMap[aliasUsed ? fieldName : aliasedFieldName];\n        if (resolve) {\n          resultPromise = Promise.resolve(\n            // In case the resolve function accesses reactive variables,\n            // set cacheSlot to the current cache instance.\n            cacheSlot.withValue(this.cache, resolve, [\n              rootValue,\n              argumentsObjectFromField(field, variables),\n              execContext.context,\n              { field, fragmentMap: execContext.fragmentMap },\n            ])\n          );\n        }\n      }\n    }\n\n    return resultPromise.then((result = defaultResult) => {\n      // If an @export directive is associated with the current field, store\n      // the `as` export variable name and current result for later use.\n      if (field.directives) {\n        field.directives.forEach(directive => {\n          if (directive.name.value === 'export' && directive.arguments) {\n            directive.arguments.forEach(arg => {\n              if (arg.name.value === 'as' && arg.value.kind === 'StringValue') {\n                execContext.exportedVariables[arg.value.value] = result;\n              }\n            });\n          }\n        });\n      }\n\n      // Handle all scalar types here.\n      if (!field.selectionSet) {\n        return result;\n      }\n\n      // From here down, the field has a selection set, which means it's trying\n      // to query a GraphQLObjectType.\n      if (result == null) {\n        // Basically any field in a GraphQL response can be null, or missing\n        return result;\n      }\n\n      if (Array.isArray(result)) {\n        return this.resolveSubSelectedArray(field, result, execContext);\n      }\n\n      // Returned value is an object, and the query has a sub-selection. Recurse.\n      if (field.selectionSet) {\n        return this.resolveSelectionSet(\n          field.selectionSet,\n          result,\n          execContext,\n        );\n      }\n    });\n  }\n\n  private resolveSubSelectedArray(\n    field: FieldNode,\n    result: any[],\n    execContext: ExecContext,\n  ): any {\n    return Promise.all(\n      result.map(item => {\n        if (item === null) {\n          return null;\n        }\n\n        // This is a nested array, recurse.\n        if (Array.isArray(item)) {\n          return this.resolveSubSelectedArray(field, item, execContext);\n        }\n\n        // This is an object, run the selection set on it.\n        if (field.selectionSet) {\n          return this.resolveSelectionSet(field.selectionSet, item, execContext);\n        }\n      }),\n    );\n  }\n}\n", "import { DocumentNode, GraphQLError } from 'graphql';\nimport { equal } from \"@wry/equality\";\n\nimport { Cache, ApolloCache } from '../cache';\nimport { WatchQueryOptions, ErrorPolicy } from './watchQueryOptions';\nimport { ObservableQuery } from './ObservableQuery';\nimport { QueryListener } from './types';\nimport { FetchResult } from '../link/core';\nimport {\n  ObservableSubscription,\n  isNonEmptyArray,\n  graphQLResultHasError,\n  canUseWeakMap,\n} from '../utilities';\nimport {\n  NetworkStatus,\n  isNetworkRequestInFlight,\n} from './networkStatus';\nimport { ApolloError } from '../errors';\nimport { QueryManager } from './QueryManager';\n\nexport type QueryStoreValue = Pick<QueryInfo,\n  | \"variables\"\n  | \"networkStatus\"\n  | \"networkError\"\n  | \"graphQLErrors\"\n  >;\n\nexport const enum CacheWriteBehavior {\n  FORBID,\n  OVERWRITE,\n  MERGE,\n};\n\nconst destructiveMethodCounts = new (\n  canUseWeakMap ? WeakMap : Map\n)<ApolloCache<any>, number>();\n\nfunction wrapDestructiveCacheMethod(\n  cache: ApolloCache<any>,\n  methodName: keyof ApolloCache<any>,\n) {\n  const original = cache[methodName];\n  if (typeof original === \"function\") {\n    cache[methodName] = function () {\n      destructiveMethodCounts.set(\n        cache,\n        // The %1e15 allows the count to wrap around to 0 safely every\n        // quadrillion evictions, so there's no risk of overflow. To be\n        // clear, this is more of a pedantic principle than something\n        // that matters in any conceivable practical scenario.\n        (destructiveMethodCounts.get(cache)! + 1) % 1e15,\n      );\n      return original.apply(this, arguments);\n    };\n  }\n}\n\nfunction cancelNotifyTimeout(info: QueryInfo) {\n  if (info[\"notifyTimeout\"]) {\n    clearTimeout(info[\"notifyTimeout\"]);\n    info[\"notifyTimeout\"] = void 0;\n  }\n}\n\n// A QueryInfo object represents a single query managed by the\n// QueryManager, which tracks all QueryInfo objects by queryId in its\n// this.queries Map. QueryInfo objects store the latest results and errors\n// for the given query, and are responsible for reporting those results to\n// the corresponding ObservableQuery, via the QueryInfo.notify method.\n// Results are reported asynchronously whenever setDiff marks the\n// QueryInfo object as dirty, though a call to the QueryManager's\n// broadcastQueries method may trigger the notification before it happens\n// automatically. This class used to be a simple interface type without\n// any field privacy or meaningful methods, which is why it still has so\n// many public fields. The effort to lock down and simplify the QueryInfo\n// interface is ongoing, and further improvements are welcome.\nexport class QueryInfo {\n  listeners = new Set<QueryListener>();\n  document: DocumentNode | null = null;\n  lastRequestId = 1;\n  subscriptions = new Set<ObservableSubscription>();\n  variables?: Record<string, any>;\n  networkStatus?: NetworkStatus;\n  networkError?: Error | null;\n  graphQLErrors?: ReadonlyArray<GraphQLError>;\n  stopped = false;\n\n  private cache: ApolloCache<any>;\n\n  constructor(\n    queryManager: QueryManager<any>,\n    public readonly queryId = queryManager.generateQueryId(),\n  ) {\n    const cache = this.cache = queryManager.cache;\n\n    // Track how often cache.evict is called, since we want eviction to\n    // override the feud-stopping logic in the markResult method, by\n    // causing shouldWrite to return true. Wrapping the cache.evict method\n    // is a bit of a hack, but it saves us from having to make eviction\n    // counting an official part of the ApolloCache API.\n    if (!destructiveMethodCounts.has(cache)) {\n      destructiveMethodCounts.set(cache, 0);\n      wrapDestructiveCacheMethod(cache, \"evict\");\n      wrapDestructiveCacheMethod(cache, \"modify\");\n      wrapDestructiveCacheMethod(cache, \"reset\");\n    }\n  }\n\n  public init(query: {\n    document: DocumentNode;\n    variables: Record<string, any> | undefined,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus?: NetworkStatus,\n    observableQuery?: ObservableQuery<any>;\n    lastRequestId?: number;\n  }): this {\n    let networkStatus = query.networkStatus || NetworkStatus.loading;\n    if (this.variables &&\n        this.networkStatus !== NetworkStatus.loading &&\n        !equal(this.variables, query.variables)) {\n      networkStatus = NetworkStatus.setVariables;\n    }\n\n    if (!equal(query.variables, this.variables)) {\n      this.lastDiff = void 0;\n    }\n\n    Object.assign(this, {\n      document: query.document,\n      variables: query.variables,\n      networkError: null,\n      graphQLErrors: this.graphQLErrors || [],\n      networkStatus,\n    });\n\n    if (query.observableQuery) {\n      this.setObservableQuery(query.observableQuery);\n    }\n\n    if (query.lastRequestId) {\n      this.lastRequestId = query.lastRequestId;\n    }\n\n    return this;\n  }\n\n  private dirty: boolean = false;\n\n  private notifyTimeout?: ReturnType<typeof setTimeout>;\n\n  reset() {\n    cancelNotifyTimeout(this);\n    this.lastDiff = void 0;\n    this.dirty = false;\n  }\n\n  getDiff(variables = this.variables): Cache.DiffResult<any> {\n    const options = this.getDiffOptions(variables);\n\n    if (this.lastDiff && equal(options, this.lastDiff.options)) {\n      return this.lastDiff.diff;\n    }\n\n    this.updateWatch(this.variables = variables);\n\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return { complete: false };\n    }\n\n    const diff = this.cache.diff(options);\n    this.updateLastDiff(diff, options);\n    return diff;\n  }\n\n  private lastDiff?: {\n    diff: Cache.DiffResult<any>,\n    options: Cache.DiffOptions,\n  };\n\n  private updateLastDiff(\n    diff: Cache.DiffResult<any> | null,\n    options?: Cache.DiffOptions,\n  ) {\n    this.lastDiff = diff ? {\n      diff,\n      options: options || this.getDiffOptions(),\n    } : void 0;\n  }\n\n  private getDiffOptions(variables = this.variables): Cache.DiffOptions {\n    const oq = this.observableQuery;\n    return {\n      query: this.document!,\n      variables,\n      returnPartialData: true,\n      optimistic: true,\n      canonizeResults: !oq || oq.options.canonizeResults !== false,\n    };\n  }\n\n  setDiff(diff: Cache.DiffResult<any> | null) {\n    const oldDiff = this.lastDiff && this.lastDiff.diff;\n    this.updateLastDiff(diff);\n    if (!this.dirty &&\n        !equal(oldDiff && oldDiff.result,\n               diff && diff.result)) {\n      this.dirty = true;\n      if (!this.notifyTimeout) {\n        this.notifyTimeout = setTimeout(() => this.notify(), 0);\n      }\n    }\n  }\n\n  public readonly observableQuery: ObservableQuery<any> | null = null;\n  private oqListener?: QueryListener;\n\n  setObservableQuery(oq: ObservableQuery<any> | null) {\n    if (oq === this.observableQuery) return;\n\n    if (this.oqListener) {\n      this.listeners.delete(this.oqListener);\n    }\n\n    (this as any).observableQuery = oq;\n\n    if (oq) {\n      oq[\"queryInfo\"] = this;\n      this.listeners.add(this.oqListener = () => {\n        // If this.diff came from an optimistic transaction, deliver the\n        // current cache data to the ObservableQuery, but don't perform a\n        // full reobservation, since oq.reobserve might make a network\n        // request, and we don't want to trigger network requests for\n        // optimistic updates.\n        if (this.getDiff().fromOptimisticTransaction) {\n          oq[\"observe\"]();\n        } else {\n          oq.reobserve();\n        }\n      });\n    } else {\n      delete this.oqListener;\n    }\n  }\n\n  notify() {\n    cancelNotifyTimeout(this);\n\n    if (this.shouldNotify()) {\n      this.listeners.forEach(listener => listener(this));\n    }\n\n    this.dirty = false;\n  }\n\n  private shouldNotify() {\n    if (!this.dirty || !this.listeners.size) {\n      return false;\n    }\n\n    if (isNetworkRequestInFlight(this.networkStatus) &&\n        this.observableQuery) {\n      const { fetchPolicy } = this.observableQuery.options;\n      if (fetchPolicy !== \"cache-only\" &&\n          fetchPolicy !== \"cache-and-network\") {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  public stop() {\n    if (!this.stopped) {\n      this.stopped = true;\n\n      // Cancel the pending notify timeout\n      this.reset();\n\n      this.cancel();\n      // Revert back to the no-op version of cancel inherited from\n      // QueryInfo.prototype.\n      this.cancel = QueryInfo.prototype.cancel;\n\n      this.subscriptions.forEach(sub => sub.unsubscribe());\n\n      const oq = this.observableQuery;\n      if (oq) oq.stopPolling();\n    }\n  }\n\n  // This method is a no-op by default, until/unless overridden by the\n  // updateWatch method.\n  private cancel() {}\n\n  private lastWatch?: Cache.WatchOptions<QueryInfo>;\n\n  private updateWatch(variables = this.variables) {\n    const oq = this.observableQuery;\n    if (oq && oq.options.fetchPolicy === \"no-cache\") {\n      return;\n    }\n\n    const watchOptions: Cache.WatchOptions<QueryInfo> = {\n      // Although this.getDiffOptions returns Cache.DiffOptions instead of\n      // Cache.WatchOptions, all the overlapping options should be the same, so\n      // we can reuse getDiffOptions here, for consistency.\n      ...this.getDiffOptions(variables),\n      watcher: this,\n      callback: diff => this.setDiff(diff),\n    };\n\n    if (!this.lastWatch ||\n        !equal(watchOptions, this.lastWatch)) {\n      this.cancel();\n      this.cancel = this.cache.watch(this.lastWatch = watchOptions);\n    }\n  }\n\n  private lastWrite?: {\n    result: FetchResult<any>;\n    variables: WatchQueryOptions[\"variables\"];\n    dmCount: number | undefined;\n  };\n\n  public resetLastWrite() {\n    this.lastWrite = void 0;\n  }\n\n  private shouldWrite(\n    result: FetchResult<any>,\n    variables: WatchQueryOptions[\"variables\"],\n  ) {\n    const { lastWrite } = this;\n    return !(\n      lastWrite &&\n      // If cache.evict has been called since the last time we wrote this\n      // data into the cache, there's a chance writing this result into\n      // the cache will repair what was evicted.\n      lastWrite.dmCount === destructiveMethodCounts.get(this.cache) &&\n      equal(variables, lastWrite.variables) &&\n      equal(result.data, lastWrite.result.data)\n    );\n  }\n\n  public markResult<T>(\n    result: FetchResult<T>,\n    options: Pick<WatchQueryOptions,\n      | \"variables\"\n      | \"fetchPolicy\"\n      | \"errorPolicy\">,\n    cacheWriteBehavior: CacheWriteBehavior,\n  ) {\n    this.graphQLErrors = isNonEmptyArray(result.errors) ? result.errors : [];\n\n    // Cancel the pending notify timeout (if it exists) to prevent extraneous network\n    // requests. To allow future notify timeouts, diff and dirty are reset as well.\n    this.reset();\n\n    if (options.fetchPolicy === 'no-cache') {\n      this.updateLastDiff(\n        { result: result.data, complete: true },\n        this.getDiffOptions(options.variables),\n      );\n\n    } else if (cacheWriteBehavior !== CacheWriteBehavior.FORBID) {\n      if (shouldWriteResult(result, options.errorPolicy)) {\n        // Using a transaction here so we have a chance to read the result\n        // back from the cache before the watch callback fires as a result\n        // of writeQuery, so we can store the new diff quietly and ignore\n        // it when we receive it redundantly from the watch callback.\n        this.cache.performTransaction(cache => {\n          if (this.shouldWrite(result, options.variables)) {\n            cache.writeQuery({\n              query: this.document!,\n              data: result.data as T,\n              variables: options.variables,\n              overwrite: cacheWriteBehavior === CacheWriteBehavior.OVERWRITE,\n            });\n\n            this.lastWrite = {\n              result,\n              variables: options.variables,\n              dmCount: destructiveMethodCounts.get(this.cache),\n            };\n          } else {\n            // If result is the same as the last result we received from\n            // the network (and the variables match too), avoid writing\n            // result into the cache again. The wisdom of skipping this\n            // cache write is far from obvious, since any cache write\n            // could be the one that puts the cache back into a desired\n            // state, fixing corruption or missing data. However, if we\n            // always write every network result into the cache, we enable\n            // feuds between queries competing to update the same data in\n            // incompatible ways, which can lead to an endless cycle of\n            // cache broadcasts and useless network requests. As with any\n            // feud, eventually one side must step back from the brink,\n            // letting the other side(s) have the last word(s). There may\n            // be other points where we could break this cycle, such as\n            // silencing the broadcast for cache.writeQuery (not a good\n            // idea, since it just delays the feud a bit) or somehow\n            // avoiding the network request that just happened (also bad,\n            // because the server could return useful new data). All\n            // options considered, skipping this cache write seems to be\n            // the least damaging place to break the cycle, because it\n            // reflects the intuition that we recently wrote this exact\n            // result into the cache, so the cache *should* already/still\n            // contain this data. If some other query has clobbered that\n            // data in the meantime, that's too bad, but there will be no\n            // winners if every query blindly reverts to its own version\n            // of the data. This approach also gives the network a chance\n            // to return new data, which will be written into the cache as\n            // usual, notifying only those queries that are directly\n            // affected by the cache updates, as usual. In the future, an\n            // even more sophisticated cache could perhaps prevent or\n            // mitigate the clobbering somehow, but that would make this\n            // particular cache write even less important, and thus\n            // skipping it would be even safer than it is today.\n            if (this.lastDiff &&\n                this.lastDiff.diff.complete) {\n              // Reuse data from the last good (complete) diff that we\n              // received, when possible.\n              result.data = this.lastDiff.diff.result;\n              return;\n            }\n            // If the previous this.diff was incomplete, fall through to\n            // re-reading the latest data with cache.diff, below.\n          }\n\n          const diffOptions = this.getDiffOptions(options.variables);\n          const diff = cache.diff<T>(diffOptions);\n\n          // In case the QueryManager stops this QueryInfo before its\n          // results are delivered, it's important to avoid restarting the\n          // cache watch when markResult is called.\n          if (!this.stopped) {\n            // Any time we're about to update this.diff, we need to make\n            // sure we've started watching the cache.\n            this.updateWatch(options.variables);\n          }\n\n          // If we're allowed to write to the cache, and we can read a\n          // complete result from the cache, update result.data to be the\n          // result from the cache, rather than the raw network result.\n          // Set without setDiff to avoid triggering a notify call, since\n          // we have other ways of notifying for this result.\n          this.updateLastDiff(diff, diffOptions);\n          if (diff.complete) {\n            result.data = diff.result;\n          }\n        });\n      } else {\n        this.lastWrite = void 0;\n      }\n    }\n  }\n\n  public markReady() {\n    this.networkError = null;\n    return this.networkStatus = NetworkStatus.ready;\n  }\n\n  public markError(error: ApolloError) {\n    this.networkStatus = NetworkStatus.error;\n    this.lastWrite = void 0;\n\n    this.reset();\n\n    if (error.graphQLErrors) {\n      this.graphQLErrors = error.graphQLErrors;\n    }\n\n    if (error.networkError) {\n      this.networkError = error.networkError;\n    }\n\n    return error;\n  }\n}\n\nexport function shouldWriteResult<T>(\n  result: FetchResult<T>,\n  errorPolicy: ErrorPolicy = \"none\",\n) {\n  const ignoreErrors =\n    errorPolicy === \"ignore\" ||\n    errorPolicy === \"all\";\n  let writeWithErrors = !graphQLResultHasError(result);\n  if (!writeWithErrors && ignoreErrors && result.data) {\n    writeWithErrors = true;\n  }\n  return writeWithErrors;\n}\n", "import { DocumentNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\nimport { equal } from '@wry/equality';\n\nimport { ApolloLink, execute, FetchResult } from '../link/core';\nimport { Cache, ApolloCache, canonicalStringify } from '../cache';\n\nimport {\n  getDefaultValues,\n  getOperationDefinition,\n  getOperationName,\n  hasClientExports,\n  graphQLResultHasError,\n  removeConnectionDirectiveFromDocument,\n  canUseWeakMap,\n  ObservableSubscription,\n  Observable,\n  asyncMap,\n  isNonEmptyArray,\n  Concast,\n  ConcastSourcesIterable,\n  makeUniqueId,\n  isDocumentNode,\n  isNonNullObject,\n} from '../utilities';\nimport { ApolloError, isApolloError } from '../errors';\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  SubscriptionOptions,\n  MutationOptions,\n  WatchQueryFetchPolicy,\n  ErrorPolicy,\n  MutationFetchPolicy,\n} from './watchQueryOptions';\nimport { ObservableQuery, applyNextFetchPolicy, logMissingFieldErrors } from './ObservableQuery';\nimport { NetworkStatus, isNetworkRequestInFlight } from './networkStatus';\nimport {\n  ApolloQueryResult,\n  OperationVariables,\n  MutationUpdaterFunction,\n  OnQueryUpdated,\n  InternalRefetchQueriesInclude,\n  InternalRefetchQueriesOptions,\n  InternalRefetchQueriesResult,\n  InternalRefetchQueriesMap,\n} from './types';\nimport { LocalState } from './LocalState';\n\nimport {\n  QueryInfo,\n  QueryStoreValue,\n  shouldWriteResult,\n  CacheWriteBehavior,\n} from './QueryInfo';\n\nconst { hasOwnProperty } = Object.prototype;\n\ninterface MutationStoreValue {\n  mutation: DocumentNode;\n  variables: Record<string, any>;\n  loading: boolean;\n  error: Error | null;\n}\n\ntype UpdateQueries<TData> = MutationOptions<TData, any, any>[\"updateQueries\"];\n\ninterface TransformCacheEntry {\n  document: DocumentNode;\n  hasClientExports: boolean;\n  hasForcedResolvers: boolean;\n  clientQuery: DocumentNode | null;\n  serverQuery: DocumentNode | null;\n  defaultVars: OperationVariables;\n  asQuery: DocumentNode;\n}\n\nexport class QueryManager<TStore> {\n  public cache: ApolloCache<TStore>;\n  public link: ApolloLink;\n  public readonly assumeImmutableResults: boolean;\n  public readonly ssrMode: boolean;\n\n  private queryDeduplication: boolean;\n  private clientAwareness: Record<string, string> = {};\n  private localState: LocalState<TStore>;\n\n  private onBroadcast?: () => void;\n  public mutationStore?: {\n    [mutationId: string]: MutationStoreValue;\n  };\n\n  // All the queries that the QueryManager is currently managing (not\n  // including mutations and subscriptions).\n  private queries = new Map<string, QueryInfo>();\n\n  // Maps from queryId strings to Promise rejection functions for\n  // currently active queries and fetches.\n  private fetchCancelFns = new Map<string, (error: any) => any>();\n\n  constructor({\n    cache,\n    link,\n    queryDeduplication = false,\n    onBroadcast,\n    ssrMode = false,\n    clientAwareness = {},\n    localState,\n    assumeImmutableResults,\n  }: {\n    cache: ApolloCache<TStore>;\n    link: ApolloLink;\n    queryDeduplication?: boolean;\n    onBroadcast?: () => void;\n    ssrMode?: boolean;\n    clientAwareness?: Record<string, string>;\n    localState?: LocalState<TStore>;\n    assumeImmutableResults?: boolean;\n  }) {\n    this.cache = cache;\n    this.link = link;\n    this.queryDeduplication = queryDeduplication;\n    this.clientAwareness = clientAwareness;\n    this.localState = localState || new LocalState({ cache });\n    this.ssrMode = ssrMode;\n    this.assumeImmutableResults = !!assumeImmutableResults;\n    if ((this.onBroadcast = onBroadcast)) {\n      this.mutationStore = Object.create(null);\n    }\n  }\n\n  /**\n   * Call this method to terminate any active query processes, making it safe\n   * to dispose of this QueryManager instance.\n   */\n  public stop() {\n    this.queries.forEach((_info, queryId) => {\n      this.stopQueryNoBroadcast(queryId);\n    });\n\n    this.cancelPendingFetches(\n      new InvariantError('QueryManager stopped while query was in flight'),\n    );\n  }\n\n  private cancelPendingFetches(error: Error) {\n    this.fetchCancelFns.forEach(cancel => cancel(error));\n    this.fetchCancelFns.clear();\n  }\n\n  public async mutate<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>\n  >({\n    mutation,\n    variables,\n    optimisticResponse,\n    updateQueries,\n    refetchQueries = [],\n    awaitRefetchQueries = false,\n    update: updateWithProxyFn,\n    onQueryUpdated,\n    errorPolicy = 'none',\n    fetchPolicy = 'network-only',\n    keepRootFields,\n    context,\n  }: MutationOptions<TData, TVariables, TContext>): Promise<FetchResult<TData>> {\n    invariant(\n      mutation,\n      'mutation option is required. You must specify your GraphQL document in the mutation option.',\n    );\n\n    invariant(\n      fetchPolicy === 'network-only' ||\n      fetchPolicy === 'no-cache',\n      \"Mutations support only 'network-only' or 'no-cache' fetchPolicy strings. The default `network-only` behavior automatically writes mutation results to the cache. Passing `no-cache` skips the cache write.\"\n    );\n\n    const mutationId = this.generateMutationId();\n    mutation = this.transform(mutation).document;\n\n    variables = this.getVariables(mutation, variables) as TVariables;\n\n    if (this.transform(mutation).hasClientExports) {\n      variables = await this.localState.addExportedVariables(mutation, variables, context) as TVariables;\n    }\n\n    const mutationStoreValue =\n      this.mutationStore &&\n      (this.mutationStore[mutationId] = {\n        mutation,\n        variables,\n        loading: true,\n        error: null,\n      } as MutationStoreValue);\n\n    if (optimisticResponse) {\n      this.markMutationOptimistic<\n        TData,\n        TVariables,\n        TContext,\n        TCache\n      >(optimisticResponse, {\n        mutationId,\n        document: mutation,\n        variables,\n        fetchPolicy,\n        errorPolicy,\n        context,\n        updateQueries,\n        update: updateWithProxyFn,\n        keepRootFields,\n      });\n    }\n\n    this.broadcastQueries();\n\n    const self = this;\n\n    return new Promise((resolve, reject) => {\n      return asyncMap(\n        self.getObservableFromLink(\n          mutation,\n          {\n            ...context,\n            optimisticResponse,\n          },\n          variables,\n          false,\n        ),\n\n        (result: FetchResult<TData>) => {\n          if (graphQLResultHasError(result) && errorPolicy === 'none') {\n            throw new ApolloError({\n              graphQLErrors: result.errors,\n            });\n          }\n\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = null;\n          }\n\n          const storeResult: typeof result = { ...result };\n\n          if (typeof refetchQueries === \"function\") {\n            refetchQueries = refetchQueries(storeResult);\n          }\n\n          if (errorPolicy === 'ignore' &&\n              graphQLResultHasError(storeResult)) {\n            delete storeResult.errors;\n          }\n\n          return self.markMutationResult<\n            TData,\n            TVariables,\n            TContext,\n            TCache\n          >({\n            mutationId,\n            result: storeResult,\n            document: mutation,\n            variables,\n            fetchPolicy,\n            errorPolicy,\n            context,\n            update: updateWithProxyFn,\n            updateQueries,\n            awaitRefetchQueries,\n            refetchQueries,\n            removeOptimistic: optimisticResponse ? mutationId : void 0,\n            onQueryUpdated,\n            keepRootFields,\n          });\n        },\n\n      ).subscribe({\n        next(storeResult) {\n          self.broadcastQueries();\n\n          // At the moment, a mutation can have only one result, so we can\n          // immediately resolve upon receiving the first result. In the future,\n          // mutations containing @defer or @stream directives might receive\n          // multiple FetchResult payloads from the ApolloLink chain, so we will\n          // probably need to collect those results in this next method and call\n          // resolve only later, in an observer.complete function.\n          resolve(storeResult);\n        },\n\n        error(err: Error) {\n          if (mutationStoreValue) {\n            mutationStoreValue.loading = false;\n            mutationStoreValue.error = err;\n          }\n\n          if (optimisticResponse) {\n            self.cache.removeOptimistic(mutationId);\n          }\n\n          self.broadcastQueries();\n\n          reject(\n            err instanceof ApolloError ? err : new ApolloError({\n              networkError: err,\n            }),\n          );\n        },\n      });\n    });\n  }\n\n  public markMutationResult<\n    TData,\n    TVariables,\n    TContext,\n    TCache extends ApolloCache<any>\n  >(\n    mutation: {\n      mutationId: string;\n      result: FetchResult<TData>;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>;\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      awaitRefetchQueries?: boolean;\n      refetchQueries?: InternalRefetchQueriesInclude;\n      removeOptimistic?: string;\n      onQueryUpdated?: OnQueryUpdated<any>;\n      keepRootFields?: boolean;\n    },\n    cache = this.cache,\n  ): Promise<FetchResult<TData>> {\n    let { result } = mutation;\n    const cacheWrites: Cache.WriteOptions[] = [];\n    const skipCache = mutation.fetchPolicy === \"no-cache\";\n\n    if (!skipCache && shouldWriteResult(result, mutation.errorPolicy)) {\n      cacheWrites.push({\n        result: result.data,\n        dataId: 'ROOT_MUTATION',\n        query: mutation.document,\n        variables: mutation.variables,\n      });\n\n      const { updateQueries } = mutation;\n      if (updateQueries) {\n        this.queries.forEach(({ observableQuery }, queryId) => {\n          const queryName = observableQuery && observableQuery.queryName;\n          if (!queryName || !hasOwnProperty.call(updateQueries, queryName)) {\n            return;\n          }\n          const updater = updateQueries[queryName];\n          const { document, variables } = this.queries.get(queryId)!;\n\n          // Read the current query result from the store.\n          const { result: currentQueryResult, complete } = cache.diff<TData>({\n            query: document!,\n            variables,\n            returnPartialData: true,\n            optimistic: false,\n          });\n\n          if (complete && currentQueryResult) {\n            // Run our reducer using the current query result and the mutation result.\n            const nextQueryResult = updater(currentQueryResult, {\n              mutationResult: result,\n              queryName: document && getOperationName(document) || void 0,\n              queryVariables: variables!,\n            });\n\n            // Write the modified result back into the store if we got a new result.\n            if (nextQueryResult) {\n              cacheWrites.push({\n                result: nextQueryResult,\n                dataId: 'ROOT_QUERY',\n                query: document!,\n                variables,\n              });\n            }\n          }\n        });\n      }\n    }\n\n    if (\n      cacheWrites.length > 0 ||\n      mutation.refetchQueries ||\n      mutation.update ||\n      mutation.onQueryUpdated ||\n      mutation.removeOptimistic\n    ) {\n      const results: any[] = [];\n\n      this.refetchQueries({\n        updateCache: (cache: TCache) => {\n          if (!skipCache) {\n            cacheWrites.forEach(write => cache.write(write));\n          }\n\n          // If the mutation has some writes associated with it then we need to\n          // apply those writes to the store by running this reducer again with\n          // a write action.\n          const { update } = mutation;\n          if (update) {\n            if (!skipCache) {\n              // Re-read the ROOT_MUTATION data we just wrote into the cache\n              // (the first cache.write call in the cacheWrites.forEach loop\n              // above), so field read functions have a chance to run for\n              // fields within mutation result objects.\n              const diff = cache.diff<TData>({\n                id: \"ROOT_MUTATION\",\n                // The cache complains if passed a mutation where it expects a\n                // query, so we transform mutations and subscriptions to queries\n                // (only once, thanks to this.transformCache).\n                query: this.transform(mutation.document).asQuery,\n                variables: mutation.variables,\n                optimistic: false,\n                returnPartialData: true,\n              });\n\n              if (diff.complete) {\n                result = { ...result, data: diff.result };\n              }\n            }\n\n            update(cache, result, {\n              context: mutation.context,\n              variables: mutation.variables,\n            });\n          }\n\n          // TODO Do this with cache.evict({ id: 'ROOT_MUTATION' }) but make it\n          // shallow to allow rolling back optimistic evictions.\n          if (!skipCache && !mutation.keepRootFields) {\n            cache.modify({\n              id: 'ROOT_MUTATION',\n              fields(value, { fieldName, DELETE }) {\n                return fieldName === \"__typename\" ? value : DELETE;\n              },\n            });\n          }\n        },\n\n        include: mutation.refetchQueries,\n\n        // Write the final mutation.result to the root layer of the cache.\n        optimistic: false,\n\n        // Remove the corresponding optimistic layer at the same time as we\n        // write the final non-optimistic result.\n        removeOptimistic: mutation.removeOptimistic,\n\n        // Let the caller of client.mutate optionally determine the refetching\n        // behavior for watched queries after the mutation.update function runs.\n        // If no onQueryUpdated function was provided for this mutation, pass\n        // null instead of undefined to disable the default refetching behavior.\n        onQueryUpdated: mutation.onQueryUpdated || null,\n\n      }).forEach(result => results.push(result));\n\n      if (mutation.awaitRefetchQueries || mutation.onQueryUpdated) {\n        // Returning a promise here makes the mutation await that promise, so we\n        // include results in that promise's work if awaitRefetchQueries or an\n        // onQueryUpdated function was specified.\n        return Promise.all(results).then(() => result);\n      }\n    }\n\n    return Promise.resolve(result);\n  }\n\n  public markMutationOptimistic<TData, TVariables, TContext, TCache extends ApolloCache<any>>(\n    optimisticResponse: any,\n    mutation: {\n      mutationId: string;\n      document: DocumentNode;\n      variables?: TVariables;\n      fetchPolicy?: MutationFetchPolicy;\n      errorPolicy: ErrorPolicy;\n      context?: TContext;\n      updateQueries: UpdateQueries<TData>,\n      update?: MutationUpdaterFunction<TData, TVariables, TContext, TCache>;\n      keepRootFields?: boolean,\n    },\n  ) {\n    const data = typeof optimisticResponse === \"function\"\n      ? optimisticResponse(mutation.variables)\n      : optimisticResponse;\n\n    return this.cache.recordOptimisticTransaction(cache => {\n      try {\n        this.markMutationResult<TData, TVariables, TContext, TCache>({\n          ...mutation,\n          result: { data },\n        }, cache);\n      } catch (error) {\n        invariant.error(error);\n      }\n    }, mutation.mutationId);\n  }\n\n  public fetchQuery<TData, TVars>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    networkStatus?: NetworkStatus,\n  ): Promise<ApolloQueryResult<TData>> {\n    return this.fetchQueryObservable<TData, TVars>(\n      queryId,\n      options,\n      networkStatus,\n    ).promise;\n  }\n\n  public getQueryStore() {\n    const store: Record<string, QueryStoreValue> = Object.create(null);\n    this.queries.forEach((info, queryId) => {\n      store[queryId] = {\n        variables: info.variables,\n        networkStatus: info.networkStatus,\n        networkError: info.networkError,\n        graphQLErrors: info.graphQLErrors,\n      };\n    });\n    return store;\n  }\n\n  public resetErrors(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) {\n      queryInfo.networkError = undefined;\n      queryInfo.graphQLErrors = [];\n    }\n  }\n\n  private transformCache = new (\n    canUseWeakMap ? WeakMap : Map\n  )<DocumentNode, TransformCacheEntry>();\n\n  public transform(document: DocumentNode) {\n    const { transformCache } = this;\n\n    if (!transformCache.has(document)) {\n      const transformed = this.cache.transformDocument(document);\n      const forLink = removeConnectionDirectiveFromDocument(\n        this.cache.transformForLink(transformed));\n\n      const clientQuery = this.localState.clientQuery(transformed);\n      const serverQuery = forLink && this.localState.serverQuery(forLink);\n\n      const cacheEntry: TransformCacheEntry = {\n        document: transformed,\n        // TODO These two calls (hasClientExports and shouldForceResolvers)\n        // could probably be merged into a single traversal.\n        hasClientExports: hasClientExports(transformed),\n        hasForcedResolvers: this.localState.shouldForceResolvers(transformed),\n        clientQuery,\n        serverQuery,\n        defaultVars: getDefaultValues(\n          getOperationDefinition(transformed)\n        ) as OperationVariables,\n        // Transform any mutation or subscription operations to query operations\n        // so we can read/write them from/to the cache.\n        asQuery: {\n          ...transformed,\n          definitions: transformed.definitions.map(def => {\n            if (def.kind === \"OperationDefinition\" &&\n                def.operation !== \"query\") {\n              return { ...def, operation: \"query\" };\n            }\n            return def;\n          }),\n        }\n      };\n\n      const add = (doc: DocumentNode | null) => {\n        if (doc && !transformCache.has(doc)) {\n          transformCache.set(doc, cacheEntry);\n        }\n      }\n      // Add cacheEntry to the transformCache using several different keys,\n      // since any one of these documents could end up getting passed to the\n      // transform method again in the future.\n      add(document);\n      add(transformed);\n      add(clientQuery);\n      add(serverQuery);\n    }\n\n    return transformCache.get(document)!;\n  }\n\n  private getVariables<TVariables>(\n    document: DocumentNode,\n    variables?: TVariables,\n  ): OperationVariables {\n    return {\n      ...this.transform(document).defaultVars,\n      ...variables,\n    };\n  }\n\n  public watchQuery<T, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables, T>,\n  ): ObservableQuery<T, TVariables> {\n    // assign variable default values if supplied\n    options = {\n      ...options,\n      variables: this.getVariables(\n        options.query,\n        options.variables,\n      ) as TVariables,\n    };\n\n    if (typeof options.notifyOnNetworkStatusChange === 'undefined') {\n      options.notifyOnNetworkStatusChange = false;\n    }\n\n    const queryInfo = new QueryInfo(this);\n    const observable = new ObservableQuery<T, TVariables>({\n      queryManager: this,\n      queryInfo,\n      options,\n    });\n\n    this.queries.set(observable.queryId, queryInfo);\n\n    queryInfo.init({\n      document: options.query,\n      observableQuery: observable,\n      variables: options.variables,\n    });\n\n    return observable;\n  }\n\n  public query<TData, TVars = OperationVariables>(\n    options: QueryOptions<TVars, TData>,\n    queryId = this.generateQueryId(),\n  ): Promise<ApolloQueryResult<TData>> {\n    invariant(\n      options.query,\n      'query option is required. You must specify your GraphQL document ' +\n        'in the query option.',\n    );\n\n    invariant(\n      options.query.kind === 'Document',\n      'You must wrap the query string in a \"gql\" tag.',\n    );\n\n    invariant(\n      !(options as any).returnPartialData,\n      'returnPartialData option only supported on watchQuery.',\n    );\n\n    invariant(\n      !(options as any).pollInterval,\n      'pollInterval option only supported on watchQuery.',\n    );\n\n    return this.fetchQuery<TData, TVars>(\n      queryId,\n      options,\n    ).finally(() => this.stopQuery(queryId));\n  }\n\n  private queryIdCounter = 1;\n  public generateQueryId() {\n    return String(this.queryIdCounter++);\n  }\n\n  private requestIdCounter = 1;\n  public generateRequestId() {\n    return this.requestIdCounter++;\n  }\n\n  private mutationIdCounter = 1;\n  public generateMutationId() {\n    return String(this.mutationIdCounter++);\n  }\n\n  public stopQueryInStore(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryInStoreNoBroadcast(queryId: string) {\n    const queryInfo = this.queries.get(queryId);\n    if (queryInfo) queryInfo.stop();\n  }\n\n  public clearStore(): Promise<void> {\n    // Before we have sent the reset action to the store, we can no longer\n    // rely on the results returned by in-flight requests since these may\n    // depend on values that previously existed in the data portion of the\n    // store. So, we cancel the promises and observers that we have issued\n    // so far and not yet resolved (in the case of queries).\n    this.cancelPendingFetches(new InvariantError(\n      'Store reset while query was in flight (not completed in link chain)',\n    ));\n\n    this.queries.forEach(queryInfo => {\n      if (queryInfo.observableQuery) {\n        // Set loading to true so listeners don't trigger unless they want\n        // results with partial data.\n        queryInfo.networkStatus = NetworkStatus.loading;\n      } else {\n        queryInfo.stop();\n      }\n    });\n\n    if (this.mutationStore) {\n      this.mutationStore = Object.create(null);\n    }\n\n    // begin removing data from the store\n    return this.cache.reset();\n  }\n\n  public resetStore(): Promise<ApolloQueryResult<any>[]> {\n    // Similarly, we have to have to refetch each of the queries currently being\n    // observed. We refetch instead of error'ing on these since the assumption is that\n    // resetting the store doesn't eliminate the need for the queries currently being\n    // watched. If there is an existing query in flight when the store is reset,\n    // the promise for it will be rejected and its results will not be written to the\n    // store.\n    return this.clearStore().then(() => {\n      return this.reFetchObservableQueries();\n    });\n  }\n\n  public getObservableQueries(\n    include: InternalRefetchQueriesInclude = \"active\",\n  ) {\n    const queries = new Map<string, ObservableQuery<any>>();\n    const queryNamesAndDocs = new Map<string | DocumentNode, boolean>();\n    const legacyQueryOptions = new Set<QueryOptions>();\n\n    if (Array.isArray(include)) {\n      include.forEach(desc => {\n        if (typeof desc === \"string\") {\n          queryNamesAndDocs.set(desc, false);\n        } else if (isDocumentNode(desc)) {\n          queryNamesAndDocs.set(this.transform(desc).document, false);\n        } else if (isNonNullObject(desc) && desc.query) {\n          legacyQueryOptions.add(desc);\n        }\n      });\n    }\n\n    this.queries.forEach(({ observableQuery: oq, document }, queryId) => {\n      if (oq) {\n        if (include === \"all\") {\n          queries.set(queryId, oq);\n          return;\n        }\n\n        const {\n          queryName,\n          options: { fetchPolicy },\n        } = oq;\n\n        if (fetchPolicy === \"standby\" || !oq.hasObservers()) {\n          // Skip inactive queries unless include === \"all\".\n          return;\n        }\n\n        if (\n          include === \"active\" ||\n          (queryName && queryNamesAndDocs.has(queryName)) ||\n          (document && queryNamesAndDocs.has(document))\n        ) {\n          queries.set(queryId, oq);\n          if (queryName) queryNamesAndDocs.set(queryName, true);\n          if (document) queryNamesAndDocs.set(document, true);\n        }\n      }\n    });\n\n    if (legacyQueryOptions.size) {\n      legacyQueryOptions.forEach((options: QueryOptions) => {\n        // We will be issuing a fresh network request for this query, so we\n        // pre-allocate a new query ID here, using a special prefix to enable\n        // cleaning up these temporary queries later, after fetching.\n        const queryId = makeUniqueId(\"legacyOneTimeQuery\");\n        const queryInfo = this.getQuery(queryId).init({\n          document: options.query,\n          variables: options.variables,\n        });\n        const oq = new ObservableQuery({\n          queryManager: this,\n          queryInfo,\n          options: {\n            ...options,\n            fetchPolicy: \"network-only\",\n          },\n        });\n        invariant(oq.queryId === queryId);\n        queryInfo.setObservableQuery(oq);\n        queries.set(queryId, oq);\n      });\n    }\n\n    if (__DEV__ && queryNamesAndDocs.size) {\n      queryNamesAndDocs.forEach((included, nameOrDoc) => {\n        if (!included) {\n          invariant.warn(`Unknown query ${\n            typeof nameOrDoc === \"string\" ? \"named \" : \"\"\n          }${\n            JSON.stringify(nameOrDoc, null, 2)\n          } requested in refetchQueries options.include array`);\n        }\n      });\n    }\n\n    return queries;\n  }\n\n  public reFetchObservableQueries(\n    includeStandby: boolean = false,\n  ): Promise<ApolloQueryResult<any>[]> {\n    const observableQueryPromises: Promise<ApolloQueryResult<any>>[] = [];\n\n    this.getObservableQueries(\n      includeStandby ? \"all\" : \"active\"\n    ).forEach((observableQuery, queryId) => {\n      const { fetchPolicy } = observableQuery.options;\n      observableQuery.resetLastResults();\n      if (includeStandby ||\n          (fetchPolicy !== \"standby\" &&\n           fetchPolicy !== \"cache-only\")) {\n        observableQueryPromises.push(observableQuery.refetch());\n      }\n      this.getQuery(queryId).setDiff(null);\n    });\n\n    this.broadcastQueries();\n\n    return Promise.all(observableQueryPromises);\n  }\n\n  public setObservableQuery(observableQuery: ObservableQuery<any, any>) {\n    this.getQuery(observableQuery.queryId).setObservableQuery(observableQuery);\n  }\n\n  public startGraphQLSubscription<T = any>({\n    query,\n    fetchPolicy,\n    errorPolicy,\n    variables,\n    context = {},\n  }: SubscriptionOptions): Observable<FetchResult<T>> {\n    query = this.transform(query).document;\n    variables = this.getVariables(query, variables);\n\n    const makeObservable = (variables: OperationVariables) =>\n      this.getObservableFromLink<T>(\n        query,\n        context,\n        variables,\n      ).map(result => {\n        if (fetchPolicy !== 'no-cache') {\n          // the subscription interface should handle not sending us results we no longer subscribe to.\n          // XXX I don't think we ever send in an object with errors, but we might in the future...\n          if (shouldWriteResult(result, errorPolicy)) {\n            this.cache.write({\n              query,\n              result: result.data,\n              dataId: 'ROOT_SUBSCRIPTION',\n              variables: variables,\n            });\n          }\n\n          this.broadcastQueries();\n        }\n\n        if (graphQLResultHasError(result)) {\n          throw new ApolloError({\n            graphQLErrors: result.errors,\n          });\n        }\n\n        return result;\n      });\n\n    if (this.transform(query).hasClientExports) {\n      const observablePromise = this.localState.addExportedVariables(\n        query,\n        variables,\n        context,\n      ).then(makeObservable);\n\n      return new Observable<FetchResult<T>>(observer => {\n        let sub: ObservableSubscription | null = null;\n        observablePromise.then(\n          observable => sub = observable.subscribe(observer),\n          observer.error,\n        );\n        return () => sub && sub.unsubscribe();\n      });\n    }\n\n    return makeObservable(variables);\n  }\n\n  public stopQuery(queryId: string) {\n    this.stopQueryNoBroadcast(queryId);\n    this.broadcastQueries();\n  }\n\n  private stopQueryNoBroadcast(queryId: string) {\n    this.stopQueryInStoreNoBroadcast(queryId);\n    this.removeQuery(queryId);\n  }\n\n  public removeQuery(queryId: string) {\n    // teardown all links\n    // Both `QueryManager.fetchRequest` and `QueryManager.query` create separate promises\n    // that each add their reject functions to fetchCancelFns.\n    // A query created with `QueryManager.query()` could trigger a `QueryManager.fetchRequest`.\n    // The same queryId could have two rejection fns for two promises\n    this.fetchCancelFns.delete(queryId);\n    this.getQuery(queryId).stop();\n    this.queries.delete(queryId);\n  }\n\n  public broadcastQueries() {\n    if (this.onBroadcast) this.onBroadcast();\n    this.queries.forEach(info => info.notify());\n  }\n\n  public getLocalState(): LocalState<TStore> {\n    return this.localState;\n  }\n\n  private inFlightLinkObservables = new Map<\n    DocumentNode,\n    Map<string, Observable<FetchResult>>\n  >();\n\n  private getObservableFromLink<T = any>(\n    query: DocumentNode,\n    context: any,\n    variables?: OperationVariables,\n    deduplication: boolean =\n      // Prefer context.queryDeduplication if specified.\n      context?.queryDeduplication ??\n      this.queryDeduplication,\n  ): Observable<FetchResult<T>> {\n    let observable: Observable<FetchResult<T>>;\n\n    const { serverQuery } = this.transform(query);\n    if (serverQuery) {\n      const { inFlightLinkObservables, link } = this;\n\n      const operation = {\n        query: serverQuery,\n        variables,\n        operationName: getOperationName(serverQuery) || void 0,\n        context: this.prepareContext({\n          ...context,\n          forceFetch: !deduplication\n        }),\n      };\n\n      context = operation.context;\n\n      if (deduplication) {\n        const byVariables = inFlightLinkObservables.get(serverQuery) || new Map();\n        inFlightLinkObservables.set(serverQuery, byVariables);\n\n        const varJson = canonicalStringify(variables);\n        observable = byVariables.get(varJson);\n\n        if (!observable) {\n          const concast = new Concast([\n            execute(link, operation) as Observable<FetchResult<T>>\n          ]);\n\n          byVariables.set(varJson, observable = concast);\n\n          concast.cleanup(() => {\n            if (byVariables.delete(varJson) &&\n                byVariables.size < 1) {\n              inFlightLinkObservables.delete(serverQuery);\n            }\n          });\n        }\n\n      } else {\n        observable = new Concast([\n          execute(link, operation) as Observable<FetchResult<T>>\n        ]);\n      }\n    } else {\n      observable = new Concast([\n        Observable.of({ data: {} } as FetchResult<T>)\n      ]);\n      context = this.prepareContext(context);\n    }\n\n    const { clientQuery } = this.transform(query);\n    if (clientQuery) {\n      observable = asyncMap(observable, result => {\n        return this.localState.runResolvers({\n          document: clientQuery,\n          remoteResult: result,\n          context,\n          variables,\n        });\n      });\n    }\n\n    return observable;\n  }\n\n  private getResultsFromLink<TData, TVars>(\n    queryInfo: QueryInfo,\n    cacheWriteBehavior: CacheWriteBehavior,\n    options: Pick<WatchQueryOptions<TVars, TData>,\n      | \"variables\"\n      | \"context\"\n      | \"fetchPolicy\"\n      | \"errorPolicy\">,\n  ): Observable<ApolloQueryResult<TData>> {\n    const requestId = queryInfo.lastRequestId = this.generateRequestId();\n\n    return asyncMap(\n      this.getObservableFromLink(\n        queryInfo.document!,\n        options.context,\n        options.variables,\n      ),\n\n      result => {\n        const hasErrors = isNonEmptyArray(result.errors);\n\n        // If we interrupted this request by calling getResultsFromLink again\n        // with the same QueryInfo object, we ignore the old results.\n        if (requestId >= queryInfo.lastRequestId) {\n          if (hasErrors && options.errorPolicy === \"none\") {\n            // Throwing here effectively calls observer.error.\n            throw queryInfo.markError(new ApolloError({\n              graphQLErrors: result.errors,\n            }));\n          }\n          queryInfo.markResult(result, options, cacheWriteBehavior);\n          queryInfo.markReady();\n        }\n\n        const aqr: ApolloQueryResult<TData> = {\n          data: result.data,\n          loading: false,\n          networkStatus: queryInfo.networkStatus || NetworkStatus.ready,\n        };\n\n        if (hasErrors && options.errorPolicy !== \"ignore\") {\n          aqr.errors = result.errors;\n        }\n\n        return aqr;\n      },\n\n      networkError => {\n        const error = isApolloError(networkError)\n          ? networkError\n          : new ApolloError({ networkError });\n\n        // Avoid storing errors from older interrupted queries.\n        if (requestId >= queryInfo.lastRequestId) {\n          queryInfo.markError(error);\n        }\n\n        throw error;\n      },\n    );\n  }\n\n  public fetchQueryObservable<TData, TVars>(\n    queryId: string,\n    options: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus = NetworkStatus.loading,\n  ): Concast<ApolloQueryResult<TData>> {\n    const query = this.transform(options.query).document;\n    const variables = this.getVariables(query, options.variables) as TVars;\n    const queryInfo = this.getQuery(queryId);\n\n    let {\n      fetchPolicy = \"cache-first\" as WatchQueryFetchPolicy,\n      errorPolicy = \"none\" as ErrorPolicy,\n      returnPartialData = false,\n      notifyOnNetworkStatusChange = false,\n      context = {},\n    } = options;\n\n    const normalized = Object.assign({}, options, {\n      query,\n      variables,\n      fetchPolicy,\n      errorPolicy,\n      returnPartialData,\n      notifyOnNetworkStatusChange,\n      context,\n    });\n\n    const fromVariables = (variables: TVars) => {\n      // Since normalized is always a fresh copy of options, it's safe to\n      // modify its properties here, rather than creating yet another new\n      // WatchQueryOptions object.\n      normalized.variables = variables;\n      return this.fetchQueryByPolicy<TData, TVars>(\n        queryInfo,\n        normalized,\n        networkStatus,\n      );\n    };\n\n    // This cancel function needs to be set before the concast is created,\n    // in case concast creation synchronously cancels the request.\n    this.fetchCancelFns.set(queryId, reason => {\n      // Delaying the cancellation using a Promise ensures that the\n      // concast variable has been initialized.\n      Promise.resolve().then(() => concast.cancel(reason));\n    });\n\n    // A Concast<T> can be created either from an Iterable<Observable<T>>\n    // or from a PromiseLike<Iterable<Observable<T>>>, where T in this\n    // case is ApolloQueryResult<TData>.\n    const concast = new Concast(\n      // If the query has @export(as: ...) directives, then we need to\n      // process those directives asynchronously. When there are no\n      // @export directives (the common case), we deliberately avoid\n      // wrapping the result of this.fetchQueryByPolicy in a Promise,\n      // since the timing of result delivery is (unfortunately) important\n      // for backwards compatibility. TODO This code could be simpler if\n      // we deprecated and removed LocalState.\n      this.transform(normalized.query).hasClientExports\n        ? this.localState.addExportedVariables(\n          normalized.query,\n          normalized.variables,\n          normalized.context,\n        ).then(fromVariables)\n        : fromVariables(normalized.variables!)\n    );\n\n    concast.cleanup(() => {\n      this.fetchCancelFns.delete(queryId);\n      applyNextFetchPolicy(options);\n    });\n\n    return concast;\n  }\n\n  public refetchQueries<TResult>({\n    updateCache,\n    include,\n    optimistic = false,\n    removeOptimistic = optimistic ? makeUniqueId(\"refetchQueries\") : void 0,\n    onQueryUpdated,\n  }: InternalRefetchQueriesOptions<ApolloCache<TStore>, TResult>\n  ): InternalRefetchQueriesMap<TResult> {\n    const includedQueriesById = new Map<string, {\n      oq: ObservableQuery<any>;\n      lastDiff?: Cache.DiffResult<any>;\n      diff?: Cache.DiffResult<any>;\n    }>();\n\n    if (include) {\n      this.getObservableQueries(include).forEach((oq, queryId) => {\n        includedQueriesById.set(queryId, {\n          oq,\n          lastDiff: this.getQuery(queryId).getDiff(),\n        });\n      });\n    }\n\n    const results: InternalRefetchQueriesMap<TResult> = new Map;\n\n    if (updateCache) {\n      this.cache.batch({\n        update: updateCache,\n\n        // Since you can perform any combination of cache reads and/or writes in\n        // the cache.batch update function, its optimistic option can be either\n        // a boolean or a string, representing three distinct modes of\n        // operation:\n        //\n        // * false: read/write only the root layer\n        // * true: read/write the topmost layer\n        // * string: read/write a fresh optimistic layer with that ID string\n        //\n        // When typeof optimistic === \"string\", a new optimistic layer will be\n        // temporarily created within cache.batch with that string as its ID. If\n        // we then pass that same string as the removeOptimistic option, we can\n        // make cache.batch immediately remove the optimistic layer after\n        // running the updateCache function, triggering only one broadcast.\n        //\n        // However, the refetchQueries method accepts only true or false for its\n        // optimistic option (not string). We interpret true to mean a temporary\n        // optimistic layer should be created, to allow efficiently rolling back\n        // the effect of the updateCache function, which involves passing a\n        // string instead of true as the optimistic option to cache.batch, when\n        // refetchQueries receives optimistic: true.\n        //\n        // In other words, we are deliberately not supporting the use case of\n        // writing to an *existing* optimistic layer (using the refetchQueries\n        // updateCache function), since that would potentially interfere with\n        // other optimistic updates in progress. Instead, you can read/write\n        // only the root layer by passing optimistic: false to refetchQueries,\n        // or you can read/write a brand new optimistic layer that will be\n        // automatically removed by passing optimistic: true.\n        optimistic: optimistic && removeOptimistic || false,\n\n        // The removeOptimistic option can also be provided by itself, even if\n        // optimistic === false, to remove some previously-added optimistic\n        // layer safely and efficiently, like we do in markMutationResult.\n        //\n        // If an explicit removeOptimistic string is provided with optimistic:\n        // true, the removeOptimistic string will determine the ID of the\n        // temporary optimistic layer, in case that ever matters.\n        removeOptimistic,\n\n        onWatchUpdated(watch, diff, lastDiff) {\n          const oq =\n            watch.watcher instanceof QueryInfo &&\n            watch.watcher.observableQuery;\n\n          if (oq) {\n            if (onQueryUpdated) {\n              // Since we're about to handle this query now, remove it from\n              // includedQueriesById, in case it was added earlier because of\n              // options.include.\n              includedQueriesById.delete(oq.queryId);\n\n              let result: TResult | boolean | Promise<ApolloQueryResult<any>> =\n                onQueryUpdated(oq, diff, lastDiff);\n\n              if (result === true) {\n                // The onQueryUpdated function requested the default refetching\n                // behavior by returning true.\n                result = oq.refetch();\n              }\n\n              // Record the result in the results Map, as long as onQueryUpdated\n              // did not return false to skip/ignore this result.\n              if (result !== false) {\n                results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n              }\n\n              // Prevent the normal cache broadcast of this result, since we've\n              // already handled it.\n              return false;\n            }\n\n            if (onQueryUpdated !== null) {\n              // If we don't have an onQueryUpdated function, and onQueryUpdated\n              // was not disabled by passing null, make sure this query is\n              // \"included\" like any other options.include-specified query.\n              includedQueriesById.set(oq.queryId, { oq, lastDiff, diff });\n            }\n          }\n        },\n      });\n    }\n\n    if (includedQueriesById.size) {\n      includedQueriesById.forEach(({ oq, lastDiff, diff }, queryId) => {\n        let result: TResult | boolean | Promise<ApolloQueryResult<any>> | undefined;\n\n        // If onQueryUpdated is provided, we want to use it for all included\n        // queries, even the QueryOptions ones.\n        if (onQueryUpdated) {\n          if (!diff) {\n            const info = oq[\"queryInfo\"];\n            info.reset(); // Force info.getDiff() to read from cache.\n            diff = info.getDiff();\n          }\n          result = onQueryUpdated(oq, diff, lastDiff);\n        }\n\n        // Otherwise, we fall back to refetching.\n        if (!onQueryUpdated || result === true) {\n          result = oq.refetch();\n        }\n\n        if (result !== false) {\n          results.set(oq, result as InternalRefetchQueriesResult<TResult>);\n        }\n\n        if (queryId.indexOf(\"legacyOneTimeQuery\") >= 0) {\n          this.stopQueryNoBroadcast(queryId);\n        }\n      });\n    }\n\n    if (removeOptimistic) {\n      // In case no updateCache callback was provided (so cache.batch was not\n      // called above, and thus did not already remove the optimistic layer),\n      // remove it here. Since this is a no-op when the layer has already been\n      // removed, we do it even if we called cache.batch above, since it's\n      // possible this.cache is an instance of some ApolloCache subclass other\n      // than InMemoryCache, and does not fully support the removeOptimistic\n      // option for cache.batch.\n      this.cache.removeOptimistic(removeOptimistic);\n    }\n\n    return results;\n  }\n\n  private fetchQueryByPolicy<TData, TVars>(\n    queryInfo: QueryInfo,\n    { query,\n      variables,\n      fetchPolicy,\n      refetchWritePolicy,\n      errorPolicy,\n      returnPartialData,\n      context,\n      notifyOnNetworkStatusChange,\n    }: WatchQueryOptions<TVars, TData>,\n    // The initial networkStatus for this fetch, most often\n    // NetworkStatus.loading, but also possibly fetchMore, poll, refetch,\n    // or setVariables.\n    networkStatus: NetworkStatus,\n  ): ConcastSourcesIterable<ApolloQueryResult<TData>> {\n    const oldNetworkStatus = queryInfo.networkStatus;\n\n    queryInfo.init({\n      document: query,\n      variables,\n      networkStatus,\n    });\n\n    const readCache = () => queryInfo.getDiff(variables);\n\n    const resultsFromCache = (\n      diff: Cache.DiffResult<TData>,\n      networkStatus = queryInfo.networkStatus || NetworkStatus.loading,\n    ) => {\n      const data = diff.result;\n\n      if (__DEV__ &&\n          !returnPartialData &&\n          !equal(data, {})) {\n        logMissingFieldErrors(diff.missing);\n      }\n\n      const fromData = (data: TData | undefined) => Observable.of({\n        data,\n        loading: isNetworkRequestInFlight(networkStatus),\n        networkStatus,\n        ...(diff.complete ? null : { partial: true }),\n      } as ApolloQueryResult<TData>);\n\n      if (data && this.transform(query).hasForcedResolvers) {\n        return this.localState.runResolvers({\n          document: query,\n          remoteResult: { data },\n          context,\n          variables,\n          onlyRunForcedResolvers: true,\n        }).then(resolved => fromData(resolved.data || void 0));\n      }\n\n      return fromData(data);\n    };\n\n    const cacheWriteBehavior =\n      fetchPolicy === \"no-cache\" ? CacheWriteBehavior.FORBID :\n      ( // Watched queries must opt into overwriting existing data on refetch,\n        // by passing refetchWritePolicy: \"overwrite\" in their WatchQueryOptions.\n        networkStatus === NetworkStatus.refetch &&\n        refetchWritePolicy !== \"merge\"\n      ) ? CacheWriteBehavior.OVERWRITE\n        : CacheWriteBehavior.MERGE;\n\n    const resultsFromLink = () =>\n      this.getResultsFromLink<TData, TVars>(queryInfo, cacheWriteBehavior, {\n        variables,\n        context,\n        fetchPolicy,\n        errorPolicy,\n      });\n\n    const shouldNotify =\n      notifyOnNetworkStatusChange &&\n      typeof oldNetworkStatus === \"number\" &&\n      oldNetworkStatus !== networkStatus &&\n      isNetworkRequestInFlight(networkStatus);\n\n    switch (fetchPolicy) {\n    default: case \"cache-first\": {\n      const diff = readCache();\n\n      if (diff.complete) {\n        return [\n          resultsFromCache(diff, queryInfo.markReady()),\n        ];\n      }\n\n      if (returnPartialData || shouldNotify) {\n        return [\n          resultsFromCache(diff),\n          resultsFromLink(),\n        ];\n      }\n\n      return [\n        resultsFromLink(),\n      ];\n    }\n\n    case \"cache-and-network\": {\n      const diff = readCache();\n\n      if (diff.complete || returnPartialData || shouldNotify) {\n        return [\n          resultsFromCache(diff),\n          resultsFromLink(),\n        ];\n      }\n\n      return [\n        resultsFromLink(),\n      ];\n    }\n\n    case \"cache-only\":\n      return [\n        resultsFromCache(readCache(), queryInfo.markReady()),\n      ];\n\n    case \"network-only\":\n      if (shouldNotify) {\n        return [\n          resultsFromCache(readCache()),\n          resultsFromLink(),\n        ];\n      }\n\n      return [resultsFromLink()];\n\n    case \"no-cache\":\n      if (shouldNotify) {\n        return [\n          // Note that queryInfo.getDiff() for no-cache queries does not call\n          // cache.diff, but instead returns a { complete: false } stub result\n          // when there is no queryInfo.diff already defined.\n          resultsFromCache(queryInfo.getDiff()),\n          resultsFromLink(),\n        ];\n      }\n\n      return [resultsFromLink()];\n\n    case \"standby\":\n      return [];\n    }\n  }\n\n  private getQuery(queryId: string): QueryInfo {\n    if (queryId && !this.queries.has(queryId)) {\n      this.queries.set(queryId, new QueryInfo(this, queryId));\n    }\n    return this.queries.get(queryId)!;\n  }\n\n  private prepareContext(context = {}) {\n    const newContext = this.localState.prepareContext(context);\n    return {\n      ...newContext,\n      clientAwareness: this.clientAwareness,\n    };\n  }\n}\n", "import { ExecutionResult, DocumentNode } from 'graphql';\nimport { invariant, InvariantError } from 'ts-invariant';\n\nimport { ApolloLink, FetchResult, GraphQLRequest, execute } from '../link/core';\nimport { ApolloCache, DataProxy } from '../cache';\nimport { Observable, compact } from '../utilities';\nimport { version } from '../version';\nimport { HttpLink, UriFunction } from '../link/http';\n\nimport { QueryManager } from './QueryManager';\nimport { ObservableQuery } from './ObservableQuery';\n\nimport {\n  ApolloQueryResult,\n  DefaultContext,\n  OperationVariables,\n  Resolvers,\n  RefetchQueriesOptions,\n  RefetchQueriesResult,\n  InternalRefetchQueriesResult,\n  RefetchQueriesInclude,\n} from './types';\n\nimport {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  WatchQueryFetchPolicy,\n} from './watchQueryOptions';\n\nimport {\n  LocalState,\n  FragmentMatcher,\n} from './LocalState';\n\nexport interface DefaultOptions {\n  watchQuery?: Partial<WatchQueryOptions<any, any>>;\n  query?: Partial<QueryOptions<any, any>>;\n  mutate?: Partial<MutationOptions<any, any, any>>;\n}\n\nlet hasSuggestedDevtools = false;\n\nexport type ApolloClientOptions<TCacheShape> = {\n  uri?: string | UriFunction;\n  credentials?: string;\n  headers?: Record<string, string>;\n  link?: ApolloLink;\n  cache: ApolloCache<TCacheShape>;\n  ssrForceFetchDelay?: number;\n  ssrMode?: boolean;\n  connectToDevTools?: boolean;\n  queryDeduplication?: boolean;\n  defaultOptions?: DefaultOptions;\n  assumeImmutableResults?: boolean;\n  resolvers?: Resolvers | Resolvers[];\n  typeDefs?: string | string[] | DocumentNode | DocumentNode[];\n  fragmentMatcher?: FragmentMatcher;\n  name?: string;\n  version?: string;\n};\n\ntype OptionsUnion<TData, TVariables, TContext> =\n  | WatchQueryOptions<TVariables, TData>\n  | QueryOptions<TVariables, TData>\n  | MutationOptions<TData, TVariables, TContext>;\n\nexport function mergeOptions<\n  TOptions extends OptionsUnion<any, any, any>\n>(\n  defaults: Partial<TOptions>,\n  options: TOptions,\n): TOptions {\n  return compact(defaults, options, options.variables && {\n    variables: {\n      ...defaults.variables,\n      ...options.variables,\n    },\n  });\n}\n\n/**\n * This is the primary Apollo Client class. It is used to send GraphQL documents (i.e. queries\n * and mutations) to a GraphQL spec-compliant server over a {@link NetworkInterface} instance,\n * receive results from the server and cache the results in a store. It also delivers updates\n * to GraphQL queries through {@link Observable} instances.\n */\nexport class ApolloClient<TCacheShape> implements DataProxy {\n  public link: ApolloLink;\n  public cache: ApolloCache<TCacheShape>;\n  public disableNetworkFetches: boolean;\n  public version: string;\n  public queryDeduplication: boolean;\n  public defaultOptions: DefaultOptions = {};\n  public readonly typeDefs: ApolloClientOptions<TCacheShape>['typeDefs'];\n\n  private queryManager: QueryManager<TCacheShape>;\n  private devToolsHookCb: Function;\n  private resetStoreCallbacks: Array<() => Promise<any>> = [];\n  private clearStoreCallbacks: Array<() => Promise<any>> = [];\n  private localState: LocalState<TCacheShape>;\n\n  /**\n   * Constructs an instance of {@link ApolloClient}.\n   *\n   * @param uri The GraphQL endpoint that Apollo Client will connect to. If\n   *            `link` is configured, this option is ignored.\n   * @param link The {@link ApolloLink} over which GraphQL documents will be resolved into a response.\n   *\n   * @param cache The initial cache to use in the data store.\n   *\n   * @param ssrMode Determines whether this is being run in Server Side Rendering (SSR) mode.\n   *\n   * @param ssrForceFetchDelay Determines the time interval before we force fetch queries for a\n   * server side render.\n   *\n   * @param queryDeduplication If set to false, a query will still be sent to the server even if a query\n   * with identical parameters (query, variables, operationName) is already in flight.\n   *\n   * @param defaultOptions Used to set application wide defaults for the\n   *                       options supplied to `watchQuery`, `query`, or\n   *                       `mutate`.\n   *\n   * @param assumeImmutableResults When this option is true, the client will assume results\n   *                               read from the cache are never mutated by application code,\n   *                               which enables substantial performance optimizations. Passing\n   *                               `{ freezeResults: true }` to the `InMemoryCache` constructor\n   *                               can help enforce this immutability.\n   *\n   * @param name A custom name that can be used to identify this client, when\n   *             using Apollo client awareness features. E.g. \"iOS\".\n   *\n   * @param version A custom version that can be used to identify this client,\n   *                when using Apollo client awareness features. This is the\n   *                version of your client, which you may want to increment on\n   *                new builds. This is NOT the version of Apollo Client that\n   *                you are using.\n   */\n  constructor(options: ApolloClientOptions<TCacheShape>) {\n    const {\n      uri,\n      credentials,\n      headers,\n      cache,\n      ssrMode = false,\n      ssrForceFetchDelay = 0,\n      connectToDevTools =\n        // Expose the client instance as window.__APOLLO_CLIENT__ and call\n        // onBroadcast in queryManager.broadcastQueries to enable browser\n        // devtools, but disable them by default in production.\n        typeof window === 'object' &&\n        !(window as any).__APOLLO_CLIENT__ &&\n        __DEV__,\n      queryDeduplication = true,\n      defaultOptions,\n      assumeImmutableResults = false,\n      resolvers,\n      typeDefs,\n      fragmentMatcher,\n      name: clientAwarenessName,\n      version: clientAwarenessVersion,\n    } = options;\n\n    let { link } = options;\n\n    if (!link) {\n      link = uri\n        ? new HttpLink({ uri, credentials, headers })\n        : ApolloLink.empty();\n    }\n\n    if (!cache) {\n      throw new InvariantError(\n        \"To initialize Apollo Client, you must specify a 'cache' property \" +\n        \"in the options object. \\n\" +\n        \"For more information, please visit: https://go.apollo.dev/c/docs\"\n      );\n    }\n\n    this.link = link;\n    this.cache = cache;\n    this.disableNetworkFetches = ssrMode || ssrForceFetchDelay > 0;\n    this.queryDeduplication = queryDeduplication;\n    this.defaultOptions = defaultOptions || {};\n    this.typeDefs = typeDefs;\n\n    if (ssrForceFetchDelay) {\n      setTimeout(\n        () => (this.disableNetworkFetches = false),\n        ssrForceFetchDelay,\n      );\n    }\n\n    this.watchQuery = this.watchQuery.bind(this);\n    this.query = this.query.bind(this);\n    this.mutate = this.mutate.bind(this);\n    this.resetStore = this.resetStore.bind(this);\n    this.reFetchObservableQueries = this.reFetchObservableQueries.bind(this);\n\n    if (connectToDevTools && typeof window === 'object') {\n      (window as any).__APOLLO_CLIENT__ = this;\n    }\n\n    /**\n     * Suggest installing the devtools for developers who don't have them\n     */\n    if (!hasSuggestedDevtools && __DEV__) {\n      hasSuggestedDevtools = true;\n      if (\n        typeof window !== 'undefined' &&\n        window.document &&\n        window.top === window.self &&\n        !(window as any).__APOLLO_DEVTOOLS_GLOBAL_HOOK__\n      ) {\n        const nav = window.navigator;\n        const ua = nav && nav.userAgent;\n        let url: string | undefined;\n        if (typeof ua === \"string\") {\n          if (ua.indexOf(\"Chrome/\") > -1) {\n            url = \"https://chrome.google.com/webstore/detail/\" +\n              \"apollo-client-developer-t/jdkknkkbebbapilgoeccciglkfbmbnfm\";\n          } else if (ua.indexOf(\"Firefox/\") > -1) {\n            url = \"https://addons.mozilla.org/en-US/firefox/addon/apollo-developer-tools/\";\n          }\n        }\n        if (url) {\n          invariant.log(\n            \"Download the Apollo DevTools for a better development \" +\n              \"experience: \" + url\n          );\n        }\n      }\n    }\n\n    this.version = version;\n\n    this.localState = new LocalState({\n      cache,\n      client: this,\n      resolvers,\n      fragmentMatcher,\n    });\n\n    this.queryManager = new QueryManager({\n      cache: this.cache,\n      link: this.link,\n      queryDeduplication,\n      ssrMode,\n      clientAwareness: {\n        name: clientAwarenessName!,\n        version: clientAwarenessVersion!,\n      },\n      localState: this.localState,\n      assumeImmutableResults,\n      onBroadcast: connectToDevTools ? () => {\n        if (this.devToolsHookCb) {\n          this.devToolsHookCb({\n            action: {},\n            state: {\n              queries: this.queryManager.getQueryStore(),\n              mutations: this.queryManager.mutationStore || {},\n            },\n            dataWithOptimisticResults: this.cache.extract(true),\n          });\n        }\n      } : void 0,\n    });\n  }\n\n  /**\n   * Call this method to terminate any active client processes, making it safe\n   * to dispose of this `ApolloClient` instance.\n   */\n  public stop() {\n    this.queryManager.stop();\n  }\n\n  /**\n   * This watches the cache store of the query according to the options specified and\n   * returns an {@link ObservableQuery}. We can subscribe to this {@link ObservableQuery} and\n   * receive updated results through a GraphQL observer when the cache store changes.\n   * <p /><p />\n   * Note that this method is not an implementation of GraphQL subscriptions. Rather,\n   * it uses Apollo's store in order to reactively deliver updates to your query results.\n   * <p /><p />\n   * For example, suppose you call watchQuery on a GraphQL query that fetches a person's\n   * first and last name and this person has a particular object identifer, provided by\n   * dataIdFromObject. Later, a different query fetches that same person's\n   * first and last name and the first name has now changed. Then, any observers associated\n   * with the results of the first query will be updated with a new result object.\n   * <p /><p />\n   * Note that if the cache does not change, the subscriber will *not* be notified.\n   * <p /><p />\n   * See [here](https://medium.com/apollo-stack/the-concepts-of-graphql-bc68bd819be3#.3mb0cbcmc) for\n   * a description of store reactivity.\n   */\n  public watchQuery<T = any, TVariables = OperationVariables>(\n    options: WatchQueryOptions<TVariables, T>,\n  ): ObservableQuery<T, TVariables> {\n    if (this.defaultOptions.watchQuery) {\n      options = mergeOptions(this.defaultOptions.watchQuery, options);\n    }\n\n    // XXX Overwriting options is probably not the best way to do this long term...\n    if (\n      this.disableNetworkFetches &&\n      (options.fetchPolicy === 'network-only' ||\n        options.fetchPolicy === 'cache-and-network')\n    ) {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.watchQuery<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single query according to the options specified and\n   * returns a {@link Promise} which is either resolved with the resulting data\n   * or rejected with an error.\n   *\n   * @param options An object of type {@link QueryOptions} that allows us to\n   * describe how this query should be treated e.g. whether it should hit the\n   * server at all or just resolve from the cache, etc.\n   */\n  public query<T = any, TVariables = OperationVariables>(\n    options: QueryOptions<TVariables, T>,\n  ): Promise<ApolloQueryResult<T>> {\n    if (this.defaultOptions.query) {\n      options = mergeOptions(this.defaultOptions.query, options);\n    }\n\n    invariant(\n      (options.fetchPolicy as WatchQueryFetchPolicy) !== 'cache-and-network',\n      'The cache-and-network fetchPolicy does not work with client.query, because ' +\n      'client.query can only return a single result. Please use client.watchQuery ' +\n      'to receive multiple results from the cache and the network, or consider ' +\n      'using a different fetchPolicy, such as cache-first or network-only.'\n    );\n\n    if (this.disableNetworkFetches && options.fetchPolicy === 'network-only') {\n      options = { ...options, fetchPolicy: 'cache-first' };\n    }\n\n    return this.queryManager.query<T, TVariables>(options);\n  }\n\n  /**\n   * This resolves a single mutation according to the options specified and returns a\n   * {@link Promise} which is either resolved with the resulting data or rejected with an\n   * error.\n   *\n   * It takes options as an object with the following keys and values:\n   */\n  public mutate<\n    TData = any,\n    TVariables = OperationVariables,\n    TContext = DefaultContext,\n    TCache extends ApolloCache<any> = ApolloCache<any>\n  >(\n    options: MutationOptions<TData, TVariables, TContext>,\n  ): Promise<FetchResult<TData>> {\n    if (this.defaultOptions.mutate) {\n      options = mergeOptions(this.defaultOptions.mutate, options);\n    }\n    return this.queryManager.mutate<TData, TVariables, TContext, TCache>(options);\n  }\n\n  /**\n   * This subscribes to a graphql subscription according to the options specified and returns an\n   * {@link Observable} which either emits received data or an error.\n   */\n  public subscribe<T = any, TVariables = OperationVariables>(\n    options: SubscriptionOptions<TVariables, T>,\n  ): Observable<FetchResult<T>> {\n    return this.queryManager.startGraphQLSubscription<T>(options);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL query without making a network request. This method will start at\n   * the root query. To start at a specific id returned by `dataIdFromObject`\n   * use `readFragment`.\n   *\n   * @param optimistic Set to `true` to allow `readQuery` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readQuery<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Query<TVariables, T>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readQuery<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Tries to read some data from the store in the shape of the provided\n   * GraphQL fragment without making a network request. This method will read a\n   * GraphQL fragment from any arbitrary id that is currently cached, unlike\n   * `readQuery` which will only read from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are reading. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   *\n   * @param optimistic Set to `true` to allow `readFragment` to return\n   * optimistic results. Is `false` by default.\n   */\n  public readFragment<T = any, TVariables = OperationVariables>(\n    options: DataProxy.Fragment<TVariables, T>,\n    optimistic: boolean = false,\n  ): T | null {\n    return this.cache.readFragment<T, TVariables>(options, optimistic);\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL query directly to\n   * the store. This method will start at the root query. To start at a\n   * specific id returned by `dataIdFromObject` then use `writeFragment`.\n   */\n  public writeQuery<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteQueryOptions<TData, TVariables>,\n  ): void {\n    this.cache.writeQuery<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n  }\n\n  /**\n   * Writes some data in the shape of the provided GraphQL fragment directly to\n   * the store. This method will write to a GraphQL fragment from any arbitrary\n   * id that is currently cached, unlike `writeQuery` which will only write\n   * from the root query.\n   *\n   * You must pass in a GraphQL document with a single fragment or a document\n   * with multiple fragments that represent what you are writing. If you pass\n   * in a document with multiple fragments then you must also specify a\n   * `fragmentName`.\n   */\n  public writeFragment<TData = any, TVariables = OperationVariables>(\n    options: DataProxy.WriteFragmentOptions<TData, TVariables>,\n  ): void {\n    this.cache.writeFragment<TData, TVariables>(options);\n    this.queryManager.broadcastQueries();\n  }\n\n  public __actionHookForDevTools(cb: () => any) {\n    this.devToolsHookCb = cb;\n  }\n\n  public __requestRaw(payload: GraphQLRequest): Observable<ExecutionResult> {\n    return execute(this.link, payload);\n  }\n\n  /**\n   * Resets your entire store by clearing out your cache and then re-executing\n   * all of your active queries. This makes it so that you may guarantee that\n   * there is no data left in your store from a time before you called this\n   * method.\n   *\n   * `resetStore()` is useful when your user just logged out. You\u2019ve removed the\n   * user session, and you now want to make sure that any references to data you\n   * might have fetched while the user session was active is gone.\n   *\n   * It is important to remember that `resetStore()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public resetStore(): Promise<ApolloQueryResult<any>[] | null> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.resetStoreCallbacks.map(fn => fn())))\n      .then(() => this.reFetchObservableQueries());\n  }\n\n  /**\n   * Remove all data from the store. Unlike `resetStore`, `clearStore` will\n   * not refetch any active queries.\n   */\n  public clearStore(): Promise<any[]> {\n    return Promise.resolve()\n      .then(() => this.queryManager.clearStore())\n      .then(() => Promise.all(this.clearStoreCallbacks.map(fn => fn())));\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * reset. `onResetStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onResetStore(cb: () => Promise<any>): () => void {\n    this.resetStoreCallbacks.push(cb);\n    return () => {\n      this.resetStoreCallbacks = this.resetStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Allows callbacks to be registered that are executed when the store is\n   * cleared. `onClearStore` returns an unsubscribe function that can be used\n   * to remove registered callbacks.\n   */\n  public onClearStore(cb: () => Promise<any>): () => void {\n    this.clearStoreCallbacks.push(cb);\n    return () => {\n      this.clearStoreCallbacks = this.clearStoreCallbacks.filter(c => c !== cb);\n    };\n  }\n\n  /**\n   * Refetches all of your active queries.\n   *\n   * `reFetchObservableQueries()` is useful if you want to bring the client back to proper state in case of a network outage\n   *\n   * It is important to remember that `reFetchObservableQueries()` *will* refetch any active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   * Takes optional parameter `includeStandby` which will include queries in standby-mode when refetching.\n   */\n  public reFetchObservableQueries(\n    includeStandby?: boolean,\n  ): Promise<ApolloQueryResult<any>[]> {\n    return this.queryManager.reFetchObservableQueries(includeStandby);\n  }\n\n  /**\n   * Refetches specified active queries. Similar to \"reFetchObservableQueries()\" but with a specific list of queries.\n   *\n   * `refetchQueries()` is useful for use cases to imperatively refresh a selection of queries.\n   *\n   * It is important to remember that `refetchQueries()` *will* refetch specified active\n   * queries. This means that any components that might be mounted will execute\n   * their queries again using your network interface. If you do not want to\n   * re-execute any queries then you should make sure to stop watching any\n   * active queries.\n   */\n  public refetchQueries<\n    TCache extends ApolloCache<any> = ApolloCache<TCacheShape>,\n    TResult = Promise<ApolloQueryResult<any>>,\n  >(\n    options: RefetchQueriesOptions<TCache, TResult>,\n  ): RefetchQueriesResult<TResult> {\n    const map = this.queryManager.refetchQueries(options);\n    const queries: ObservableQuery<any>[] = [];\n    const results: InternalRefetchQueriesResult<TResult>[] = [];\n\n    map.forEach((result, obsQuery) => {\n      queries.push(obsQuery);\n      results.push(result);\n    });\n\n    const result = Promise.all<TResult>(\n      results as TResult[]\n    ) as RefetchQueriesResult<TResult>;\n\n    // In case you need the raw results immediately, without awaiting\n    // Promise.all(results):\n    result.queries = queries;\n    result.results = results;\n\n    // If you decide to ignore the result Promise because you're using\n    // result.queries and result.results instead, you shouldn't have to worry\n    // about preventing uncaught rejections for the Promise.all result.\n    result.catch(error => {\n      invariant.debug(`In client.refetchQueries, Promise.all promise rejected with error ${error}`);\n    });\n\n    return result;\n  }\n\n  /**\n   * Get all currently active `ObservableQuery` objects, in a `Map` keyed by\n   * query ID strings. An \"active\" query is one that has observers and a\n   * `fetchPolicy` other than \"standby\" or \"cache-only\". You can include all\n   * `ObservableQuery` objects (including the inactive ones) by passing \"all\"\n   * instead of \"active\", or you can include just a subset of active queries by\n   * passing an array of query names or DocumentNode objects.\n   */\n  public getObservableQueries(\n    include: RefetchQueriesInclude = \"active\",\n  ): Map<string, ObservableQuery<any>> {\n    return this.queryManager.getObservableQueries(include);\n  }\n\n  /**\n   * Exposes the cache's complete state, in a serializable format for later restoration.\n   */\n  public extract(optimistic?: boolean): TCacheShape {\n    return this.cache.extract(optimistic);\n  }\n\n  /**\n   * Replaces existing state in the cache (if any) with the values expressed by\n   * `serializedState`.\n   *\n   * Called when hydrating a cache (server side rendering, or offline storage),\n   * and also (potentially) during hot reloads.\n   */\n  public restore(serializedState: TCacheShape): ApolloCache<TCacheShape> {\n    return this.cache.restore(serializedState);\n  }\n\n  /**\n   * Add additional local resolvers.\n   */\n  public addResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.addResolvers(resolvers);\n  }\n\n  /**\n   * Set (override existing) local resolvers.\n   */\n  public setResolvers(resolvers: Resolvers | Resolvers[]) {\n    this.localState.setResolvers(resolvers);\n  }\n\n  /**\n   * Get all registered local resolvers.\n   */\n  public getResolvers() {\n    return this.localState.getResolvers();\n  }\n\n  /**\n   * Set a custom local state fragment matcher.\n   */\n  public setLocalStateFragmentMatcher(fragmentMatcher: FragmentMatcher) {\n    this.localState.setFragmentMatcher(fragmentMatcher);\n  }\n\n  /**\n   * Define a new ApolloLink (or link chain) that Apollo Client will use.\n   */\n  public setLink(newLink: ApolloLink) {\n    this.link = this.queryManager.link = newLink;\n  }\n}\n", null, "/* Core */\n\nimport { DEV } from \"../utilities\";\n\nexport {\n  ApolloClient,\n  ApolloClientOptions,\n  DefaultOptions,\n  mergeOptions,\n} from './ApolloClient';\nexport {\n  ObservableQuery,\n  FetchMoreOptions,\n  UpdateQueryOptions,\n  applyNextFetchPolicy,\n} from './ObservableQuery';\nexport {\n  QueryOptions,\n  WatchQueryOptions,\n  MutationOptions,\n  SubscriptionOptions,\n  FetchPolicy,\n  WatchQueryFetchPolicy,\n  ErrorPolicy,\n  FetchMoreQueryOptions,\n  SubscribeToMoreOptions,\n} from './watchQueryOptions';\nexport { NetworkStatus } from './networkStatus';\nexport * from './types';\nexport {\n  Resolver,\n  FragmentMatcher,\n} from './LocalState';\nexport { isApolloError, ApolloError } from '../errors';\n\n/* Cache */\n\nexport {\n  // All the exports (types and values) from ../cache, minus cacheSlot,\n  // which we want to keep semi-private.\n  Cache,\n  ApolloCache,\n  Transaction,\n  DataProxy,\n  InMemoryCache,\n  InMemoryCacheConfig,\n  MissingFieldError,\n  defaultDataIdFromObject,\n  ReactiveVar,\n  makeVar,\n  TypePolicies,\n  TypePolicy,\n  FieldPolicy,\n  FieldReadFunction,\n  FieldMergeFunction,\n  FieldFunctionOptions,\n  PossibleTypesMap,\n} from '../cache';\n\nexport * from '../cache/inmemory/types';\n\n/* Link */\n\nexport * from '../link/core';\nexport * from '../link/http';\nexport {\n  fromError,\n  toPromise,\n  fromPromise,\n  ServerError,\n  throwServerError,\n} from '../link/utils';\n\n/* Utilities */\n\nexport {\n  Observable,\n  Observer,\n  ObservableSubscription,\n  Reference,\n  isReference,\n  makeReference,\n  StoreObject,\n} from '../utilities';\n\n/* Supporting */\n\n// The verbosity of invariant.{log,warn,error} can be controlled globally\n// (for anyone using the same ts-invariant package) by passing \"log\",\n// \"warn\", \"error\", or \"silent\" to setVerbosity (\"log\" is the default).\n// Note that all invariant.* logging is hidden in production.\nimport { setVerbosity } from \"ts-invariant\";\nexport { setVerbosity as setLogVerbosity }\nsetVerbosity(DEV ? \"log\" : \"silent\");\n\n// Note that importing `gql` by itself, then destructuring\n// additional properties separately before exporting, is intentional.\n// Due to the way the `graphql-tag` library is setup, certain bundlers\n// can't find the properties added to the exported `gql` function without\n// additional guidance (e.g. Rollup - see\n// https://rollupjs.org/guide/en/#error-name-is-not-exported-by-module).\n// Instead of having people that are using bundlers with `@apollo/client` add\n// extra bundler config to help `graphql-tag` exports be found (which would be\n// awkward since they aren't importing `graphql-tag` themselves), this\n// workaround of pulling the extra properties off the `gql` function,\n// then re-exporting them separately, helps keeps bundlers happy without any\n// additional config changes.\nexport {\n  gql,\n  resetCaches,\n  disableFragmentWarnings,\n  enableExperimentalFragmentVariables,\n  disableExperimentalFragmentVariables,\n} from 'graphql-tag';\n", "import { print } from 'graphql';\nimport { equal } from '@wry/equality';\nimport { invariant } from 'ts-invariant';\n\nimport {\n  ApolloLink,\n  Operation,\n  GraphQLRequest,\n  FetchResult,\n} from '../../../link/core';\n\nimport {\n  Observable,\n  addTypenameToDocument,\n  removeClientSetsFromDocument,\n  removeConnectionDirectiveFromDocument,\n  cloneDeep,\n  stringifyForDisplay,\n} from '../../../utilities';\n\nexport type ResultFunction<T> = () => T;\n\nexport interface MockedResponse<TData = Record<string, any>> {\n  request: GraphQLRequest;\n  result?: FetchResult<TData> | ResultFunction<FetchResult<TData>>;\n  error?: Error;\n  delay?: number;\n  newData?: ResultFunction<FetchResult>;\n}\n\nfunction requestToKey(request: GraphQLRequest, addTypename: Boolean): string {\n  const queryString =\n    request.query &&\n    print(addTypename ? addTypenameToDocument(request.query) : request.query);\n  const requestKey = { query: queryString };\n  return JSON.stringify(requestKey);\n}\n\nexport class MockLink extends ApolloLink {\n  public operation: Operation;\n  public addTypename: Boolean = true;\n  private mockedResponsesByKey: { [key: string]: MockedResponse[] } = {};\n\n  constructor(\n    mockedResponses: ReadonlyArray<MockedResponse>,\n    addTypename: Boolean = true\n  ) {\n    super();\n    this.addTypename = addTypename;\n    if (mockedResponses) {\n      mockedResponses.forEach(mockedResponse => {\n        this.addMockedResponse(mockedResponse);\n      });\n    }\n  }\n\n  public addMockedResponse(mockedResponse: MockedResponse) {\n    const normalizedMockedResponse = this.normalizeMockedResponse(\n      mockedResponse\n    );\n    const key = requestToKey(\n      normalizedMockedResponse.request,\n      this.addTypename\n    );\n    let mockedResponses = this.mockedResponsesByKey[key];\n    if (!mockedResponses) {\n      mockedResponses = [];\n      this.mockedResponsesByKey[key] = mockedResponses;\n    }\n    mockedResponses.push(normalizedMockedResponse);\n  }\n\n  public request(operation: Operation): Observable<FetchResult> | null {\n    this.operation = operation;\n    const key = requestToKey(operation, this.addTypename);\n    const unmatchedVars: Array<Record<string, any>> = [];\n    const requestVariables = operation.variables || {};\n    const mockedResponses = this.mockedResponsesByKey[key];\n    const responseIndex = mockedResponses ? mockedResponses.findIndex((res, index) => {\n      const mockedResponseVars = res.request.variables || {};\n      if (equal(requestVariables, mockedResponseVars)) {\n        return true;\n      }\n      unmatchedVars.push(mockedResponseVars);\n      return false;\n    }) : -1;\n\n    const response = responseIndex >= 0\n      ? mockedResponses[responseIndex]\n      : void 0;\n\n    let configError: Error;\n\n    if (!response) {\n      configError = new Error(\n`No more mocked responses for the query: ${print(operation.query)}\nExpected variables: ${stringifyForDisplay(operation.variables)}\n${unmatchedVars.length > 0 ? `\nFailed to match ${unmatchedVars.length} mock${\n  unmatchedVars.length === 1 ? \"\" : \"s\"\n} for this query, which had the following variables:\n${unmatchedVars.map(d => `  ${stringifyForDisplay(d)}`).join('\\n')}\n` : \"\"}`);\n    } else {\n      mockedResponses.splice(responseIndex, 1);\n\n      const { newData } = response;\n      if (newData) {\n        response.result = newData();\n        mockedResponses.push(response);\n      }\n\n      if (!response.result && !response.error) {\n        configError = new Error(\n          `Mocked response should contain either result or error: ${key}`\n        );\n      }\n    }\n\n    return new Observable(observer => {\n      const timer = setTimeout(() => {\n        if (configError) {\n          try {\n            // The onError function can return false to indicate that\n            // configError need not be passed to observer.error. For\n            // example, the default implementation of onError calls\n            // observer.error(configError) and then returns false to\n            // prevent this extra (harmless) observer.error call.\n            if (this.onError(configError, observer) !== false) {\n              throw configError;\n            }\n          } catch (error) {\n            observer.error(error);\n          }\n        } else if (response) {\n          if (response.error) {\n            observer.error(response.error);\n          } else {\n            if (response.result) {\n              observer.next(\n                typeof response.result === 'function'\n                  ? (response.result as ResultFunction<FetchResult>)()\n                  : response.result\n              );\n            }\n            observer.complete();\n          }\n        }\n      }, response && response.delay || 0);\n\n      return () => {\n        clearTimeout(timer);\n      };\n    });\n  }\n\n  private normalizeMockedResponse(\n    mockedResponse: MockedResponse\n  ): MockedResponse {\n    const newMockedResponse = cloneDeep(mockedResponse);\n    const queryWithoutConnection = removeConnectionDirectiveFromDocument(\n      newMockedResponse.request.query\n    );\n    invariant(queryWithoutConnection, \"query is required\");\n    newMockedResponse.request.query = queryWithoutConnection!;\n    const query = removeClientSetsFromDocument(newMockedResponse.request.query);\n    if (query) {\n      newMockedResponse.request.query = query;\n    }\n    return newMockedResponse;\n  }\n}\n\nexport interface MockApolloLink extends ApolloLink {\n  operation?: Operation;\n}\n\n// Pass in multiple mocked responses, so that you can test flows that end up\n// making multiple queries to the server.\n// NOTE: The last arg can optionally be an `addTypename` arg.\nexport function mockSingleLink(\n  ...mockedResponses: Array<any>\n): MockApolloLink {\n  // To pull off the potential typename. If this isn't a boolean, we'll just\n  // set it true later.\n  let maybeTypename = mockedResponses[mockedResponses.length - 1];\n  let mocks = mockedResponses.slice(0, mockedResponses.length - 1);\n\n  if (typeof maybeTypename !== 'boolean') {\n    mocks = mockedResponses;\n    maybeTypename = true;\n  }\n\n  return new MockLink(mocks, maybeTypename);\n}\n", "import {\n  ApolloClient,\n  InMemoryCache,\n  gql,\n  from,\n  HttpLink,\n} from '@apollo/client';\nimport { MockLink } from '@apollo/client/testing';\n\n/**\n * @typedef {Partial<import('@apollo/client').QueryOptions<any> & { cacheId: string }>} QueryOptions\n */\n\n/**\n * @param {string|import('graphql').DocumentNode} query\n * @returns {import('graphql').DocumentNode}\n */\nfunction toDocumentNode(query) {\n  return typeof query === 'string'\n    ? gql`\n        ${query}\n      `\n    : query;\n}\n\nclass ApolloModelClient {\n  constructor(options = {}) {\n    const httpLink = new HttpLink({\n      uri: options.uri || '/api/v2/graphql',\n    });\n\n    let links = options.links || [];\n    if (options.mocks) {\n      links.push(new MockLink(options.mocks));\n    } else {\n      links.push(httpLink);\n    }\n\n    this.apollo = new ApolloClient({\n      cache: new InMemoryCache(),\n      defaultOptions: {\n        query: {\n          fetchPolicy: 'network-only',\n        },\n      },\n      link: from(links),\n    });\n\n    this.requestQueue = {};\n  }\n\n  apiError(message) {\n    console.error(`GraphQL API error: ${message}`);\n  }\n\n  evict(options = {}) {\n    return this.apollo.cache.evict(options);\n  }\n\n  cacheId(attributes = {}) {\n    return this.apollo.cache.identify(attributes);\n  }\n\n  /**\n   * Sends a GraphQL query.\n   *\n   * @param {string|import('graphql').DocumentNode} queryString The query GraphQL request, as a plain string\n   * @param {QueryOptions} options Options applying to the query\n   * @returns {Promise<object>} The JSON response to the query\n   */\n  async query(queryString, options = {}) {\n    const query = toDocumentNode(queryString);\n\n    let result;\n    try {\n      result = await this.apollo.query({\n        query,\n        variables: options.variables || {},\n        errorPolicy: 'all',\n      });\n    } catch (e) {\n      this.apiError(e.message);\n      throw new Error(e.message);\n    }\n    if (result.errors && result.errors.length > 0) {\n      const errorMessage = result.errors[0].message;\n      this.apiError(errorMessage);\n      throw new Error(errorMessage);\n    }\n    return result.data;\n  }\n\n  /**\n   * Sends a GraphQL mutation request.\n   *\n   * @param {string|import('graphql').DocumentNode} mutationString The mutation GraphQL query, as a plain string\n   * @param {object} options Options applying to the mutation\n   * @returns {Promise<object>} The JSON response to the query\n   */\n  async mutate(mutationString, options = {}) {\n    const mutation = toDocumentNode(mutationString);\n\n    let result;\n\n    try {\n      result = await this.apollo.mutate({\n        mutation,\n        variables: options.variables || {},\n      });\n    } catch (e) {\n      this.apiError(e.message);\n      throw e;\n    }\n    if (result.errors && result.errors.length > 0) {\n      const errorMessage = result.errors[0].message;\n      this.apiError(errorMessage);\n    }\n\n    return result.data;\n  }\n}\n\nexport default ApolloModelClient;\n", "import {\n  ApplicationController,\n  StartControllerScope,\n  ControlledComponent,\n  useController,\n} from './controller/ApplicationController';\nimport ApplicationModel, {\n  attr,\n  belongsTo,\n  hasMany,\n} from './model/ApplicationModel';\nimport ApolloModelClient from './model/ApolloModelClient';\nimport { view as ApplicationView } from '@aha-app/react-easy-state';\nimport { raw } from '@nx-js/observer-util';\nimport { randomId } from './utils/randomId';\n\n// Export our public API.\nexport default ApplicationController;\nexport {\n  // Controller\n  ApplicationController,\n  StartControllerScope,\n  ControlledComponent,\n  useController,\n  // Model\n  ApplicationModel,\n  ApolloModelClient,\n  attr,\n  belongsTo,\n  hasMany,\n  // View\n  ApplicationView,\n  // observer.\n  raw,\n  // utils\n  randomId,\n};\n"],
  "mappings": "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;AAAA,EAAK,UAAU;AAAA,EACvE,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACvE,UAAU;AAAA,EAAM,UAAU;AAAA,EAC1B,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACvE,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACvE,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACxD,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACxD,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACxD,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACxD,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACtF,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EAAK,UAAU;AAAA,EACtF,UAAU;AAAA,EAAM,UAAU;AAAA,EAC1B,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EACzC,UAAU;AAAA,EAAM,UAAU;AAAA,EAAK,UAAU;AAAA,EAC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AAAA,EACjE,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAM,QAAK;AAAA,EAAM,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EACnE,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAM,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAClE,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EACjE,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EACjE,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAK,QAAK;AAAA,EAAM,QAAK;AAAA,EAClE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAM,UAAK;AAAA,EAAM,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACnE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAO,UAAK;AAAA,EAAM,UAAK;AAAA,EAC1D,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAM,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAClE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EACjE,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EAAK,UAAK;AAAA,EA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",
  "names": []
}
